<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Worms Blog</title>
<link>https://marcoworms.github.io/blog/index.html</link>
<atom:link href="https://marcoworms.github.io/blog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Tue, 09 Jan 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>How to create your own blog for free with open-source tools</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/open-source-blog/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/open-source-blog/cover.png" class="img-fluid"></p>
<blockquote class="blockquote">
<h4 id="hello-world-welcome-to-my-new-blog-infrastructure.-i-made-it-to-move-away-from-medium-and-i-hope-this-post-helps-other-people-have-their-own-independent-blogs" class="anchored">Hello World! Welcome to my new blog infrastructure. I made it to move away from Medium, and I hope this post helps other people have their own independent blogs!</h4>
</blockquote>
<section id="how-to-clone-this-blog" class="level1">
<h1>How to clone this blog</h1>
<ol type="1">
<li><p>Go to https://github.com/MarcoWorms/blog and create a github account if you don’t have one</p></li>
<li><p>Click “Use this template” -&gt; “Create new repository” <img src="https://marcoworms.github.io/blog/posts/open-source-blog/https:/i.imgur.com/gvup8cX.png" class="img-fluid"></p></li>
<li><p>Enter a repository name like <code>blog</code>. Also, select “Include all branches”. <img src="https://marcoworms.github.io/blog/posts/open-source-blog/https:/i.imgur.com/klRnXyM.png" class="img-fluid"></p></li>
<li><p>Go to “Settings” in your repository and enable write permission for actions (they will fail on creation because they don’t have this permission): <img src="https://marcoworms.github.io/blog/posts/open-source-blog/https:/i.imgur.com/EC0dP2f.png" class="img-fluid"></p></li>
<li><p>Go to “Actions” in your repository, select the failed action, click “Re-Run jobs”: <img src="https://marcoworms.github.io/blog/posts/open-source-blog/https:/i.imgur.com/CqgxYma.png" class="img-fluid"></p></li>
<li><p>Done! When all actions are done running your blog is now up and deploying every change in the <code>main</code> github branch at <code>https://your_github_username.github.io/your_repo_name</code></p></li>
<li><p>(optional) I’ve added all themes commented in the quarto config file so you can easily switch themes and try them out! Check this file: https://github.com/MarcoWorms/blog/blob/main/_quarto.yml</p></li>
</ol>
</section>
<section id="how-to-preview-sitepost-locally" class="level1">
<h1>How to preview site/post locally</h1>
<p>To preview posts and the blog locally, install Quarto and the VSCode extension:</p>
<ul>
<li>Quarto: https://quarto.org/docs/get-started/</li>
<li>Quarto VSCode Extension: https://marketplace.visualstudio.com/items?itemName=quarto.quarto</li>
<li>VSCode: https://code.visualstudio.com/</li>
</ul>
<p>You don’t need to do this step, but previewing your posts and themes is much easier! You can split screen markdown and the post preview like this:</p>
<p><img src="https://marcoworms.github.io/blog/posts/open-source-blog/https:/i.imgur.com/kXBvbBF.png" class="img-fluid"></p>
</section>
<section id="how-to-write-new-posts" class="level1">
<h1>How to write new posts</h1>
<ol type="1">
<li>Delete all posts from <code>/posts</code> folder, maybe leave one as template</li>
<li>Create a folder (which will be used in the post url) and add a <code>index.qmd</code> file</li>
<li>Add author, title, date, and categories in the first lines of <code>index.qmd</code>:</li>
</ol>
<pre><code>---
title: "Easily create your own blog for free with open source tools"
author: "Marco Guaspari Worms"
date: "2022-01-09"
categories: [english, blogging]
---</code></pre>
<ol type="1">
<li>Use Markdown to write your post, if you need help with markdown check https://quarto.org/docs/authoring/markdown-basics.html</li>
<li>Commit changes in <code>/posts</code> to your repository <code>main</code> branch and wait for actions to deploy!</li>
</ol>
<p>Quarto supports Jupyter Notebooks, you can check how to do this here: https://quarto.org/docs/authoring/notebook-embed.html</p>
</section>
<section id="how-to-use-social-mentions" class="level1">
<h1>How to use social mentions</h1>
<p>You can use mentions from gits, youtube, vimeo, loom, twitter, and mastodon, just add them like this in your post:</p>
<ul>
<li><code>{{&lt;&nbsp;gist USERNAME GIST_ID &gt;}}</code></li>
<li><code>{{&lt;&nbsp;youtube VIDEO_ID &gt;}}</code></li>
<li><code>{{&lt;&nbsp;vimeo VIDEO_ID &gt;}}</code></li>
<li><code>{{&lt;&nbsp;loom VIDEO_ID &gt;}}</code></li>
<li><code>{{&lt;&nbsp;tweet USERNAME TWEET_ID &gt;}}</code></li>
<li><code>{{&lt;&nbsp;mastodon STATUS_URL &gt;}}</code></li>
</ul>
<p></p><div id="tweet-60001"></div><script>tweet={"url":"https:\/\/twitter.com\/MarcoWorms\/status\/1744028564842803227","author_name":"Worms","author_url":"https:\/\/twitter.com\/MarcoWorms","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EI started writing articles on medium because it was a free and simple platform, but today their monetization and ads are shoveling dirt in good free content\u003Cbr\u003E\u003Cbr\u003EI&#39;m migrating all my articles to an open-source infrastructure easy to replicate by anyone, inspired by \u003Ca href=\"https:\/\/twitter.com\/bantg?ref_src=twsrc%5Etfw\"\u003E@bantg\u003C\/a\u003E blog \u003Ca href=\"https:\/\/t.co\/o8doav9MFr\"\u003Epic.twitter.com\/o8doav9MFr\u003C\/a\u003E\u003C\/p\u003E&mdash; Worms (@MarcoWorms) \u003Ca href=\"https:\/\/twitter.com\/MarcoWorms\/status\/1744028564842803227?ref_src=twsrc%5Etfw\"\u003EJanuary 7, 2024\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-60001").innerHTML = tweet["html"];</script><p></p>
</section>
<section id="what-is-missing" class="level1">
<h1>What is missing?</h1>
<p>I still have to figure out the mechanic for people to add their email to a list that receives notifications for new posts, I don’t miss much this feature but it would make the structure more professional.</p>


</section>

 ]]></description>
  <category>english</category>
  <category>blogging</category>
  <guid>https://marcoworms.github.io/blog/posts/open-source-blog/index.html</guid>
  <pubDate>Tue, 09 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Etherscan is awesome but is also a critical point of failure for Ethereum</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/etherscan-centralization/index.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>That we can try to fix with open source and better incentives like we did with the other parts of crypto!</p>
</blockquote>
<p><img src="https://marcoworms.github.io/blog/posts/etherscan-centralization/https:/cdn-images-1.medium.com/max/2912/1*QkmLO7vbmhxnYSkrjIY5Bg.png" class="img-fluid"></p>
<p>Almost a decade ago, the Ethereum community set out to kill all the weak links in providing financial services that are globally accessible. We have succeeded in many ways, and our progress relies on our capability to do self-reflection on points of failure and deploy fixes for them that are open source and open to audit.</p>
<p>This article reflects my thoughts on our reliance on Etherscan today, an incredibly convenient service for any Ethereum user or developer, a service that I use a lot and am thankful for the people who deployed it. Today, <a href="https://etherscan.io/">Etherscan</a> is the biggest provider for exploring transactions in Ethereum. It is a very convenient website that allows you to:</p>
<ul>
<li>Track any transaction in Ethereum.</li>
<li>Track any contract interaction and its events.</li>
<li>See a contract source code being used in production.</li>
<li>Interact with contracts read and write functions.</li>
</ul>
<p>One of the powers of Etherscan is that it suits both novice and advanced users:</p>
<ul>
<li>If you are a novice you can easily see your own wallet transactions and navigate your interactions with smart contracts</li>
<li>If you know what you are doing you can do almost anything in Ethereum by using Etherscan and avoiding any other existing website</li>
</ul>
<p>Such fantastic power has brought so much convenience to users that it has become righteously one of the most used websites in the crypto ecosystem. Here is a quick comparison of the usage of Etherscan website and other popular DeFi websites in the last 3 months:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/etherscan-centralization/https:/cdn-images-1.medium.com/max/2000/1*ec1QPc-gbPmItERW6V9w9w.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Side Note: Solscan was just <a href="https://cointelegraph.com/news/etherscan-acquires-solana-blockchain-solscan">acquired</a> by Etherscan, which further concentrates their power over explorers and shows this is not an issue limited to Ethereum. All other chains have to deal with this too.</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/etherscan-centralization/https:/cdn-images-1.medium.com/max/2706/1*BGPvPPu4LzccURFN6KAFkw.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Etherscan has less organic search access and still has incredibly higher usage.</figcaption>
</figure>
</div>
<p><em>Data from <a href="https://www.similarweb.com/">https://www.similarweb.com/</a></em></p>
<section id="how-does-etherscans-dominance-put-the-ethereum-community-at-risk" class="level2">
<h2 class="anchored" data-anchor-id="how-does-etherscans-dominance-put-the-ethereum-community-at-risk">How does Etherscan’s dominance put the Ethereum community at risk?</h2>
<p>The biggest risk associated with Etherscan today is that the source code is closed and therefore not reproducible by other users, which removes the “availability resilience by redundancy of servers” factor that we have in Ethereum and introduces “security by obscurity” controlled by a single entity.</p>
<p>The availability and resilience of Ethereum services come from the decentralized network of nodes that can execute a transaction even if many of them are offline. Today, this is only achievable by providing people with open-source code that has financial incentives to be set up and maintained.</p>
<p>If the users of Ethereum are constantly recurring to the same centralized entity for a service that most people use, we are walking on a path that compromises decentralization, the opposite of <a href="https://vitalik.eth.limo/general/2023/12/28/cypherpunk.html">making Ethereum cypherpunk</a>.</p>
<blockquote class="blockquote">
<p>Side Note: Advanced users will skip interacting with Etherscan and use things like <a href="https://www.apeworx.io/">ApeWorx</a> or <a href="https://getfoundry.sh/">Foundry</a> to do their on-chain interactions, which are open source and skips the above risk. But a large number of people will not learn how to use any open source CLI tools and they will rely on Etherscan website for reading information and sometimes even writing.</p>
</blockquote>
<p>Here is a doomsday scenario involving Etherscan: their DNS is hijacked and the website redirects to a malicious wallet drainer (which <a href="https://cointelegraph.com/news/curve-finance-exploit-experts-dissect-what-went-wrong">happens</a> a <a href="https://crypto.news/hackers-hijack-frax-finance-dns-domain/">lot</a> in <a href="https://cointelegraph.com/news/balancer-social-engineering-attack-dns-provider-frontend-hijack">crypto</a>, even to the teams with the best security measures). This could happen to any protocol website, <em>which is why I think <a href="https://medium.com/iearn/self-hosting-web3-services-299306b706ee">learning how to self-host</a> is an important skill.</em></p>
<p><strong>The more people rely on Etherscan and have no good alternatives, the more incentive exists for a malicious actor to use it as an attack vector on the Ethereum community.</strong></p>
<p>I’m not here to bash Etherscan. I believe their team is doing its best running its own business, my background in indie game development taught me that there are segments of the market that are very hard to profit without recurring to some default market strategies (ads, microtransactions), and it would be naive to expect them to open the source with nothing in return. So let’s talk about some alternatives!</p>
</section>
<section id="open-source-transaction-explorers" class="level2">
<h2 class="anchored" data-anchor-id="open-source-transaction-explorers">Open Source Transaction Explorers</h2>
<section id="beaconchain" class="level3">
<h3 class="anchored" data-anchor-id="beaconchain">Beaconchain</h3>
<ul>
<li>Ethereum Preview: <a href="https://beaconcha.in/">https://beaconcha.in/</a></li>
<li>Source: <a href="https://github.com/gobitfly/eth2-beaconchain-explorer">https://github.com/gobitfly/eth2-beaconchain-explorer</a></li>
</ul>
</section>
<section id="blockscout" class="level3">
<h3 class="anchored" data-anchor-id="blockscout"><strong>Blockscout</strong>:</h3>
<ul>
<li>Ethereum Preview: <a href="https://eth.blockscout.com/">https://eth.blockscout.com/</a></li>
<li>Source: <a href="https://github.com/blockscout/blockscout">https://github.com/blockscout/blockscout</a></li>
</ul>
</section>
<section id="otterscan" class="level3">
<h3 class="anchored" data-anchor-id="otterscan"><strong>Otterscan</strong></h3>
<ul>
<li>Optimism Preview: <a href="https://otterscan.mainnet.testinprod.io/">https://otterscan.mainnet.testinprod.io/</a></li>
<li>Source: <a href="https://github.com/otterscan/otterscan">https://github.com/otterscan/otterscan</a></li>
</ul>
<blockquote class="blockquote">
<p>A hard problem for open-source scanners today is that contract verification is centralized on Etherscan. How to deliver this feature with the same quality as an alternative if everyone is verifying contracts with Etherscan today? The “open auditability” value of Ethereum is compromised if we depend on a single closed-source entity to validate and audit what’s in production.</p>
</blockquote>
<p>All of the above are alternatives to Etherscan, if you try them out next time you want to use a scan you are already participating in decentralizing this part of the chain, and even better if you self-host them! But we can’t rely on altruism to maintain this, we have seen scans <a href="https://www.investing.com/news/cryptocurrency-news/avax-blockchain-explorer-to-shut-down-as-etherscan-fees-draw-controversy-3214279">close</a> due to monetization issues, which I believe is one of the core aspects of our entire conundrum and why Etherscan is closed source to begin with!</p>
</section>
</section>
<section id="incentives-for-explorers" class="level2">
<h2 class="anchored" data-anchor-id="incentives-for-explorers">Incentives for Explorers</h2>
<p>It’s visible that transaction explorers suffer from an incentive problem, let’s take a look at Etherscan website:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/etherscan-centralization/https:/cdn-images-1.medium.com/max/2726/1*69QzIPAe6Sfl7nnZ4xjWMg.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">hummmm this ad looks legit!</figcaption>
</figure>
</div>
<p>Is there any other piece of Ethereum infrastructure that you use that shows you a suspicious ad like that? No! Because the incentives for the other parts are much better developed than having to be an ad seller to survive. Why do the websites of Ethereum Foundation, AAVE, Yearn, Maker, Uniswap, centralized exchanges, and other big Ethereum apps will not show you any ads? Because those app’s monetary incentives are aligned, and showing ads is a net-negative thing to do since ads introduce another layer of risk to the end user, who is just trying to use a good finance product.</p>
<p>I am not big brain enough to suggest an actual system design that fixes the scan situation right now, but I do believe that Ethereum could think of better incentives for people to run decentralized nodes that serve as an Etherscan alternative before we rely completely on it as a community, which would start by incentivizing somehow the open source alternatives and also incentivizing making them available to the public.</p>
<blockquote class="blockquote">
<p>Ethereum RPC nodes might have a similar centralization issue, but it’s easier to decentralize RPCs right now than scans since the best RPC clients are open source and <a href="https://ethereum.org/en/developers/docs/nodes-and-clients/run-a-node/">easy to reproduce</a>.</p>
</blockquote>
<p>I invite anyone to participate in this discussion and come up with something we can test!</p>
</section>
<section id="straight-from-the-otterscan" class="level2">
<h2 class="anchored" data-anchor-id="straight-from-the-otterscan">Straight from the Otterscan</h2>
<p>To bring more perspectives to the conversation, here are the thoughts of the Otterscan creator <a href="https://twitter.com/wmitsuda">Willian Mitsuda</a> when I asked some questions and showed him this article:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/etherscan-centralization/https:/cdn-images-1.medium.com/max/2000/1*_x2PYUibqpJqgCxS2q5TxA.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Now speaking: Willian!</figcaption>
</figure>
</div>
<section id="q-what-motivated-you-to-create-otterscan-and-how-does-it-differ-from-etherscan-in-architecture-and-functionality" class="level3">
<h3 class="anchored" data-anchor-id="q-what-motivated-you-to-create-otterscan-and-how-does-it-differ-from-etherscan-in-architecture-and-functionality"><strong>Q: What motivated you to create Otterscan, and how does it differ from Etherscan in architecture and functionality?</strong></h3>
<p>Etherscan is already a great tool. I wanted to create something to fill in the gaps and reach an audience that Etherscan doesn’t: <strong>be able to run your own explorer at your home, using your own node, running on consumer hardware, not expensive cloud machines.</strong></p>
<p>Everything is open source, so users can hack and modify it. We use open databases like Sourcify for contract verification, so something as critical doesn’t vanish if the company behind it disappears.</p>
<p>Etherscan is a closed-source SaaS, so we can’t do a fair comparison at an architectural level. But regarding Otterscan, our endgame is to reach feature parity with Etherscan (we still haven’t, but we will) while testing the limits of what can be done with a regular Ethereum node.</p>
<p>To do that, <a href="https://github.com/ledgerwatch/erigon">Erigon</a> (and all the technology they invented) was fundamental. Otterscan couldn’t exist before 3 years ago when Erigon made archive nodes possible in ~2TB (mainnet) and a few days of sync.</p>
<p><strong>Otterscan V1 was only possible because Erigon enabled archive nodes in consumer hardware</strong> and it was easy to expose data that existed inside your node, but not available through the standard JSON-RPC APIs.</p>
<p><strong>Otterscan V2 (in alpha at this moment) will be only possible because Erigon kept evolving</strong> and the new architecture of tx-based indexes in Erigon 3 (as opposed to block-based indexes) will allow us to build and augment standard node capabilities by deriving new data from it efficiently.</p>
<p>That’ll bring us very close to producing most of the data Etherscan gives users, but without requiring anything other than your node and some (affordable) extra disk space.</p>
</section>
<section id="q-what-are-your-thoughts-on-the-existing-incentives-for-using-and-serving-an-open-source-explorer-any-thoughts-on-decentralized-funding-for-explorers" class="level3">
<h3 class="anchored" data-anchor-id="q-what-are-your-thoughts-on-the-existing-incentives-for-using-and-serving-an-open-source-explorer-any-thoughts-on-decentralized-funding-for-explorers"><strong>Q: What are your thoughts on the existing incentives for using and serving an open-source explorer? Any thoughts on decentralized funding for explorers?</strong></h3>
<p>I think finding a business model for explorers is as challenging as it is for other web3 products. We are gladly sponsored by Erigon, which allowed us to keep working on it so far as an open-source public good without any VC funding.</p>
<p>New grant programs such as <a href="https://app.optimism.io/retropgf">Optimism’s Retroactive Public Goods Funding</a> can potentially allow long-term survival for similar products.</p>
</section>
<section id="q-how-can-the-community-contribute-to-the-development-and-improvement-of-otterscan-and-what-kind-of-contributions-are-you-looking-for" class="level3">
<h3 class="anchored" data-anchor-id="q-how-can-the-community-contribute-to-the-development-and-improvement-of-otterscan-and-what-kind-of-contributions-are-you-looking-for"><strong>Q: How can the community contribute to the development and improvement of Otterscan, and what kind of contributions are you looking for?</strong></h3>
<p>Otterscan is composed of 2 parts:</p>
<ul>
<li>The UI is a React application.</li>
<li>And an API implementation that is embedded inside Erigon.</li>
</ul>
<p>So people interested in contributing can improve the UI itself, program new APIs and indexers inside Erigon (that could be a good entry point for anyone interested in adventuring into ETH client internals), or make use of Otterscan APIs to do something completely new, like a specialized UI.</p>
<p>Another interesting idea is implementing Otterscan APIs in other clients. There is already an independent community initiative to port it to Reth, and another community member implemented it inside Anvil, so you can point the Otterscan UI to it and browse your devnet.</p>
<p>Here is an example community-made PR to add support for Otterscan JSON-RPC API extensions on Reth: <a href="https://github.com/paradigmxyz/reth/issues/3726"><strong>Add support for Otterscan JSON-RPC API extensions · Issue #3726 · paradigmxyz/reth</strong></a></p>
<p>And another community member added it inside Anvil:</p>
<p></p><div id="tweet-24845"></div><script>tweet={"url":"https:\/\/twitter.com\/otterscan\/status\/1689190104613462016","author_name":"Otterscan \uD83E\uDDA6\uD83D\uDD0E\uD83E\uDEA8","author_url":"https:\/\/twitter.com\/otterscan","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EAmazing work from \u003Ca href=\"https:\/\/twitter.com\/naps62?ref_src=twsrc%5Etfw\"\u003E@naps62\u003C\/a\u003E !\u003Cbr\u003E\u003Cbr\u003EHe implemented Otterscan API in anvil, so users can simply point it to an anvil node and have the same UX during development!\u003Cbr\u003E\u003Cbr\u003EExample screenshot from the original PR: \u003Ca href=\"https:\/\/t.co\/rts4uLvNHn\"\u003Ehttps:\/\/t.co\/rts4uLvNHn\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/ofwkoV2KF3\"\u003Epic.twitter.com\/ofwkoV2KF3\u003C\/a\u003E\u003C\/p\u003E&mdash; Otterscan \uD83E\uDDA6\uD83D\uDD0E\uD83E\uDEA8 (@otterscan) \u003Ca href=\"https:\/\/twitter.com\/otterscan\/status\/1689190104613462016?ref_src=twsrc%5Etfw\"\u003EAugust 9, 2023\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-24845").innerHTML = tweet["html"];</script><p></p>
</section>
<section id="q-what-advice-would-you-give-developers-interested-in-building-their-open-source-projects-for-the-ethereum-ecosystem" class="level3">
<h3 class="anchored" data-anchor-id="q-what-advice-would-you-give-developers-interested-in-building-their-open-source-projects-for-the-ethereum-ecosystem">Q: What advice would you give developers interested in building their open-source projects for the Ethereum ecosystem?</h3>
<p>Just build it. If you are technically skilled, there are lots of opportunities out there, and if you make something that solves other people’s problems, you will surely be recognized.</p>


</section>
</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/etherscan-centralization/index.html</guid>
  <pubDate>Fri, 05 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Answering the public questions about Yearn Finance</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-answer-public/index.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>This article is not financial advice, it simply reflects my opinions around the Yearn protocol, always do your own research before investing in anything.</p>
</blockquote>
<blockquote class="blockquote">
<p>Disinformation about crypto ecossystems is rampant and this is my attempt to bring quality information on subjects that are hard to find answers for on Google.</p>
</blockquote>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-answer-public/https:/cdn-images-1.medium.com/max/2102/1*HUCyuoE4gsACGdqcBxjbBA.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">I recently found this website that shows top Google searches related to a theme (<a href="https://answerthepublic.com/">https://answerthepublic.com/</a>) and I wanted to do a fun exercise of answering all the top questions about Yearn!</figcaption>
</figure>
</div>
<section id="what-is-yearn-finance" class="level2">
<h2 class="anchored" data-anchor-id="what-is-yearn-finance">What is yearn finance?</h2>
<p>Taken straight from Yearn documentation:</p>
<blockquote class="blockquote">
<p>Yearn Finance is DeFi’s premier yield aggregator. Giving individuals, DAOs and other protocols a way to deposit digital assets and receive yield.</p>
</blockquote>
<blockquote class="blockquote">
<p>The protocol is maintained by various independent developers and is governed by YFI holders.</p>
</blockquote>
<p>But if you are not used to crypto, some words above might be scary so let’s break down what the above means:</p>
<blockquote class="blockquote">
<p>Yearn Finance is a product that exist in Decentralized Finance. It is a yield aggregator: “yield” means “profitable returns from an investment”, and “aggregator” means it aggregates many sources of investment (that generate yield).</p>
</blockquote>
<blockquote class="blockquote">
<p>Yearn not only aggregates them but also screens every possible yield opportunity through a a <a href="https://docs.yearn.finance/resources/risks/protocol-risks">risk framework</a>, and only lets users deposit in ones that pass quality criteria.</p>
</blockquote>
<blockquote class="blockquote">
<p>The Yearn Finance protocol is maintained by different people, most anonymous, and the group coordinates itself through a crypto coin called YFI, which is used as voting power in an open forum that can suggest new directions for Yearn products.</p>
</blockquote>
<ul>
<li>Yearn Website: <a href="https://yearn.fi">https://yearn.fi</a></li>
<li>Yearn Documentation: <a href="https://docs.yearn.finance/">https://docs.yearn.finance/</a></li>
</ul>
<p><em>This question is more deeply answered by the article “Yearn Finance Explained”: <a href="https://medium.com/iearn/yearn-finance-explained-what-are-vaults-and-strategies-96970560432">https://medium.com/iearn/yearn-finance-explained-what-are-vaults-and-strategies-9697056043</a></em></p>
</section>
<section id="is-yearn-finance-dead" class="level2">
<h2 class="anchored" data-anchor-id="is-yearn-finance-dead">Is Yearn Finance dead?</h2>
<p><strong>No!</strong> <strong>Yearn is more alive than ever!</strong></p>
<p>The best place to follow yearn activity is through twitter: <a href="https://twitter.com/yearnfi">https://twitter.com/yearnfi</a> (watch out for impostors! this is the only yearn account!)</p>
<p>You can also reach out to active community members through Discord: <a href="https://discord.gg/yearn">https://discord.gg/yearn</a></p>
<p>In 2023 alone Yearn has delivered many products like veYFI, yCRV, yPRISMA, yETH, and the new version of the core product Yearn Vaults V3. Developer chats are active and building is non-stop!</p>
<p>The rumor that “yearn is dead” comes from the departure of the initial developer (<a href="https://twitter.com/AndreCronjeTech">Andre Cronje</a>) from the team. Yearn is a big team today with dozens of people maintaining many parts of the yearn ecosystem, and Andre set out to work in other projects like <a href="https://fantom.foundation/">Fantom</a> and <a href="https://keep3r.network/">Keep3r</a>.</p>
<p>The Yearn creative lead <a href="undefined">draper</a> made a recent thread with all the videos we made for new releases for 2023, I highly recommend watching them! It’s fun!</p>
<p></p><div id="tweet-48384"></div><script>tweet={"url":"https:\/\/twitter.com\/draper0x\/status\/1741443589161312636","author_name":"draper","author_url":"https:\/\/twitter.com\/draper0x","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EWith nearly 200k views, the veYFI launch was one of our best performing films this year.\u003Cbr\u003E\u003Cbr\u003EYearn&#39;s long awaited tokenomics revamp was delayed multiple times, and we decided to make that unavoidable truth our core campaign idea.\u003Cbr\u003E\u003Cbr\u003E&lt;-Self deprecation maxi \uD83E\uDEE1\u003Ca href=\"https:\/\/t.co\/7rfHJNfdQ1\"\u003Ehttps:\/\/t.co\/7rfHJNfdQ1\u003C\/a\u003E\u003C\/p\u003E&mdash; draper (@draper0x) \u003Ca href=\"https:\/\/twitter.com\/draper0x\/status\/1741443589161312636?ref_src=twsrc%5Etfw\"\u003EDecember 31, 2023\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-48384").innerHTML = tweet["html"];</script><p></p>
</section>
<section id="is-yearn-finance-a-good-investment" class="level2">
<h2 class="anchored" data-anchor-id="is-yearn-finance-a-good-investment">Is Yearn Finance a good investment?</h2>
<p>It depends! The issue with this question is that there are many ways take part in the yearn ecosystem, each has its pros and cons:</p>
<ul>
<li>You can deposit into one of the hundreds of existing yearn vaults.</li>
<li>You can lock YFI tokens and receive veYFI, which allows you to boost vault rewards and vote on where bought-back YFI will be sent.</li>
<li>You can participate in ETH staking through yETH</li>
</ul>
<p>For Yearn Vaults you can see how risk is assessed for each yield strategy in the yearn risk framework documentation: <a href="https://docs.yearn.finance/resources/risks/protocol-risks">https://docs.yearn.finance/resources/risks/protocol-risks</a></p>
</section>
<section id="is-yearn-finance-safe" class="level2">
<h2 class="anchored" data-anchor-id="is-yearn-finance-safe">Is Yearn Finance safe?</h2>
<p>It depends! There are many factors to consider because it depends on what you want to do and your risk tolerance. Depositing in Yearn Vaults or any other Yearn product contains layers of risks from different smart contracts.</p>
<p>Yearn does a diligence process in all yield strategies, and the people involved in this process are some of the best in the space to deal with Ethereum smart contract security, but security is an incredibly complex issue in DeFi due to the immutable nature of transactions and smart contracts (hacks can’t be undone).</p>
<p>The core product from Yearn (<a href="https://medium.com/iearn/yearn-finance-explained-what-are-vaults-and-strategies-96970560432">yVaults</a>) exists to abstract away all the security diligence process. The user can deposit in strategies that are vetted and optimized by simple deposit/withdrawing, which is a much more friendly interface than interacting with all DeFi protocols needed, but ultimately by doing this abstraction Yearn also introduces another set of risks, which is why users should always do their own research before interacting with DeFi protocols. Refer to Yearn documentation for a deep dive into risks:</p>
<ul>
<li><strong>Protocol Risks:</strong> <a href="https://docs.yearn.finance/resources/risks/protocol-risks">https://docs.yearn.finance/resources/risks/protocol-risks</a></li>
<li><strong>Vaults Risks:</strong> <a href="https://docs.yearn.finance/resources/risks/vault-risks">https://docs.yearn.finance/resources/risks/vault-risks</a></li>
<li><strong>Strategy Risks:</strong> <a href="https://docs.yearn.finance/resources/risks/strategy-risks">https://docs.yearn.finance/resources/risks/strategy-risks</a></li>
<li><strong>Risk Scores for vaults</strong>: <a href="https://docs.yearn.finance/resources/risks/risk-score">https://docs.yearn.finance/resources/risks/risk-score</a></li>
</ul>
</section>
<section id="how-does-yearn-finance-work" class="level2">
<h2 class="anchored" data-anchor-id="how-does-yearn-finance-work">How does yearn finance work?</h2>
<p>Yearn works through many pieces:</p>
<ul>
<li>You can use yearn products at <a href="https://yearn.finance/">https://yearn.fi/</a></li>
<li>Active developers use telegram groups to coordinate independent products, the biggest public group is <a href="https://t.me/yearnfinance">https://t.me/yearnfinance</a></li>
<li>There is an open community discord where people can reach out for support: <a href="https://discord.gg/yearn">https://discord.gg/yearn</a></li>
<li>There is an official Yearn GitHub where product are developed/maintained: <a href="https://github.com/yearn">https://github.com/yearn</a></li>
<li>Yearn products are a series of contracts deployed across many blockchains, you can check live addresses here: <a href="https://docs.yearn.finance/getting-started/products/addresses">https://docs.yearn.fi/getting-started/products/addresses</a></li>
<li>There is an open governance forum to propose things to be voted by veYFI holders: <a href="https://gov.yearn.fi/">https://gov.yearn.fi/</a></li>
<li>Governance votes happen on snapshot: <a href="https://snapshot.org/#/veyfi.eth">https://snapshot.org/#/veyfi.eth</a></li>
<li>Documentation is done at <a href="https://docs.yearn.finance/">https://docs.yearn.finance/</a></li>
</ul>
<p><em>If you are looking for how the core product of yearn “Yearn Vaults” work check the article “Yearn Finance Explained”: <a href="https://medium.com/iearn/yearn-finance-explained-what-are-vaults-and-strategies-96970560432">https://medium.com/iearn/yearn-finance-explained-what-are-vaults-and-strategies-9697056043</a></em></p>
</section>
<section id="when-was-yearn-finance-launched" class="level2">
<h2 class="anchored" data-anchor-id="when-was-yearn-finance-launched">When was yearn finance launched?</h2>
<p>According to one of the first posts made on Yearn Medium it was around 24th January 2020. The post was made on Feb 7 and says launch was 14 days ago:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-answer-public/https:/cdn-images-1.medium.com/max/2000/1*_J3YP0odctH6GAvwyI0dqg.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><a href="https://medium.com/iearn/iearn-finance-milestones-and-roadmap-27fe63830951">https://medium.com/iearn/iearn-finance-milestones-and-roadmap-27fe63830951</a> (one of the first posts in yearn medium)</figcaption>
</figure>
</div>
</section>
<section id="why-is-yearn-finance-going-down-will-yearn-finance-go-up-again" class="level2">
<h2 class="anchored" data-anchor-id="why-is-yearn-finance-going-down-will-yearn-finance-go-up-again">Why is yearn finance going down? Will yearn finance go up again?</h2>
<p>This question is probably related to the price action of YFI, which contains many factors, not limited to but including: the price of Bitcoin, the price of Ethereum, the sentiment of the crypto community about original DeFi protocols, the chance of the bet that EVM smart contracts being the future of finance, and a gazillion other factors that are not necessarily tied to just the quality of Yearn’s deliverables or team.</p>
<p>The team is actively maintaining the protocol and delivering great new products despite the YFI price action. Also, with the introduction of veYFI there is more to be done with YFI, like boosting vaults rewards.</p>
</section>
<section id="where-to-stake-yearn-finance" class="level2">
<h2 class="anchored" data-anchor-id="where-to-stake-yearn-finance">Where to stake yearn finance?</h2>
<p>I interpret this question as “where to stake YFI to earn more YFI” and the answer is veYFI!</p>
<ul>
<li>veYFI website: <a href="https://yearn.fi/veyfi">https://yearn.fi/veyfi</a></li>
<li>veYFI docs: <a href="https://docs.yearn.finance/contributing/governance/veyfi">https://docs.yearn.finance/contributing/governance/veyfi</a></li>
</ul>
</section>
<section id="who-owns-yearn-finance" class="level2">
<h2 class="anchored" data-anchor-id="who-owns-yearn-finance">Who owns yearn finance?</h2>
<p>Yearn is a DAO (Decentralized Autonomous Organization) which means governance is fragmented between many parts.</p>
<p>YFI holders and the yearn teams plays a crucial role in ownership: YFI holders can vote for anything to happen on governance forums, but it would be extremely slow and inefficient, so yearn teams have autonomy to do changes but anything that can generate a greater impact the ecosystem is often put through vote in the governance forum. Here are some examples of how ownership is fragmented:</p>
<ul>
<li>Let’s say there is a bug on the website that makes a button vanish. Anyone can open a PR with a fix, it’s all open source, the frontend team from yearn will either fix themselves or accept a community fix. YFI holders do not need to be involved.</li>
<li>But if we want to change voting power dynamics and move from YFI to veYFI, we have to involve YFI holders in this decision and then put it to a vote.</li>
</ul>
<p>Ownership in a DAO is fragmented and Yearn tries to give autonomy to teams for execution and autonomy for YFI holders for strategy.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-answer-public/https:/cdn-images-1.medium.com/max/2526/1*LJRgqqEZ8yj8lWrQknyeDQ.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Trust is one of yearn values, taken from <a href="https://yearn.love/">https://yearn.love/</a></figcaption>
</figure>
</div>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-answer-public/index.html</guid>
  <pubDate>Tue, 02 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>yETH: LSD Lobbying season is now open</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-yeth/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-yeth/https:/cdn-images-1.medium.com/max/3000/0*HQPLLhpEKmdJlik7.png" class="img-fluid"></p>
<p>yETH gives users a way to hold a basket of various Ethereum Liquid Staking Tokens (LSDs) in a single token. Giving them access to the best yields while spreading their risk across multiple LSDs. We are now opening the bootstrapping phase to launch yETH!</p>
<section id="bootstrapping-whitelist-incentives-and-votes" class="level2">
<h2 class="anchored" data-anchor-id="bootstrapping-whitelist-incentives-and-votes">Bootstrapping: Whitelist, Incentives, and Votes</h2>
<p>The bootstrapping consists of 3 phases:</p>
<ul>
<li>Whitelisting for LSD protocols</li>
<li>Deposit and Incentives</li>
<li>Voting</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-yeth/https:/i.imgur.com/dNw6phF.png" class="img-fluid"></p>
</section>
<section id="whitelisting-period-for-lsd-protocols" class="level2">
<h2 class="anchored" data-anchor-id="whitelisting-period-for-lsd-protocols">Whitelisting Period for LSD Protocols</h2>
<p>During the 3-week whitelisting period, LSD protocols interested in being included in yETH must pay a 1 ETH non-refundable fee, which turns into yield for st-yETH users. After paying the fee, protocols fill out a form with basic screening questions. Yearn reviews responses, but does not evaluate any merit of the LSD protocol beyond just looking for malicious submissions.</p>
<ul>
<li><a href="https://yeth.yearn.finance/">Join the Whitelist</a></li>
</ul>
</section>
<section id="deposit-and-incentives" class="level2">
<h2 class="anchored" data-anchor-id="deposit-and-incentives">Deposit and Incentives</h2>
<p>The 2-week deposit phase starts concurrently with the final week of the whitelisting period. During this time, aspiring yETH users can deposit their ETH into the Bootstrapper contract, receiving 1:1 st-yETH tokens in return. The bootstraped st-yETH tokens are locked for 16 weeks.</p>
<p>The 2-week incentive phase starts concurrently with the final week of the whitelisting period. st-yETH token holders can now create incentives for other st-yETH holders to vote for or against specific assets to be included in the yETH pool in the next phase.</p>
<ul>
<li><a href="https://yeth.yearn.finance/deposit">Deposit ETH</a></li>
<li><a href="https://yeth.yearn.finance/incentive">Incentivize a LSD protocol</a></li>
</ul>
</section>
<section id="voting" class="level2">
<h2 class="anchored" data-anchor-id="voting">Voting</h2>
<p>When incentive phase ends, voting period starts.</p>
<p>Users who have locked their ETH during the deposit phase will receive st-yETH tokens, granting them voting rights to decide which LSD protocols should be included in the yETH pool. As a user, you’ll have the power to choose the best protocols based on their incentives, performance, and other factors.</p>
<p>Incentives posted by protocols who are chosen go to ALL st-yETH holders, no matter who they voted for. This avoids a “winner takes it all” scenario and there is no wrong way to vote. The top 5 LSDs with the most votes are included by the end of voting, and if an outcome doesn’t occur for an incentive poster, they can claim their incentives back.</p>
<ul>
<li><a href="https://yeth.yearn.finance/vote">Vote on LSDs</a></li>
</ul>
</section>
<section id="post-bootstrapping-what-happens-next" class="level2">
<h2 class="anchored" data-anchor-id="post-bootstrapping-what-happens-next">Post-Bootstrapping: What Happens Next?</h2>
<p>Once the bootstrapping phase ends, Yearn begins launch preparations and purchases LSD tokens with the deposited ETH according to the final weight of the vote. When launched, users can deposit LSDs or ETH into the pool and receive yETH tokens while having the ability to stake their yETH as Staked yETH (st-yETH) to earn compounded yield according to the earnings of LSDs and other protocol rewards.</p>
</section>
<section id="why-should-lsd-protocols-participate-in-bootstraping" class="level2">
<h2 class="anchored" data-anchor-id="why-should-lsd-protocols-participate-in-bootstraping">Why should LSD protocols participate in bootstraping?</h2>
<ul>
<li>The pool buys LSD tokens with all the deposited ETH, creating buy pressure and demand for your LSD token.</li>
<li>If you get included in the bootstrapping phase, the max starting <a href="https://gov.yearn.finance/t/yip-72-launch-yeth/13158#yeth-in-a-nutshell-5">weight</a> is 45%, if you get added later, you start at 1% so it’s a much steeper hill to climb.</li>
<li>If you participate in depositing ETH, you end up controlling the direction of the protocol, so you can influence future weights, future parameter settings, and whether or not a competing LSD protocol gets included.</li>
</ul>
</section>
<section id="join-the-lobbying-create-or-receive-incentives" class="level2">
<h2 class="anchored" data-anchor-id="join-the-lobbying-create-or-receive-incentives">Join the Lobbying: Create or Receive Incentives</h2>
<p>We invite you to participate in this exciting on-chain lobbying fiesta by depositing ETH during the bootstrapping phase and voting for your favorite LSD protocols!</p>
<ul>
<li><a href="https://yeth.yearn.finance/">Join the Whitelist</a></li>
<li><a href="https://yeth.yearn.finance/deposit">Deposit ETH</a></li>
<li><a href="https://yeth.yearn.finance/incentive">Incentivize a LSD protocol</a></li>
<li><a href="https://yeth.yearn.finance/vote">Vote on LSDs</a></li>
</ul>
<p><em>Bootstrapping and yETH specifications can be found in the governance proposal: <a href="https://gov.yearn.finance/t/yip-72-launch-yeth/13158/1">YIP-72: Launch yETH</a></em></p>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-yeth/index.html</guid>
  <pubDate>Tue, 04 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Permissionless Yearn Vaults</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-vault-factory/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-vault-factory/https:/cdn-images-1.medium.com/max/2400/1*9JAvhEJo8h7l0CenZxk4Dw.png" class="img-fluid"></p>
<p></p><div id="tweet-29551"></div><script>tweet={"url":"https:\/\/twitter.com\/wavey0x\/status\/1612517046754877440","author_name":"wavey0x","author_url":"https:\/\/twitter.com\/wavey0x","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EYearn vaults have always been permissionless to create. \u003Cbr\u003E\u003Cbr\u003EWith this change, ANYONE can now do the following in a single click:\u003Cbr\u003E- deploy vault\u003Cbr\u003E- deploy strategy\u003Cbr\u003E- register both into Yearns prod registry\u003Cbr\u003E- auto-populate vault on \u003Ca href=\"https:\/\/t.co\/GW4iDTBavR\"\u003Ehttps:\/\/t.co\/GW4iDTBavR\u003C\/a\u003E website\u003Cbr\u003E\u003Cbr\u003E… no dev required \u003Ca href=\"https:\/\/t.co\/KUigzbYEFY\"\u003Ehttps:\/\/t.co\/KUigzbYEFY\u003C\/a\u003E\u003C\/p\u003E&mdash; wavey0x (@wavey0x) \u003Ca href=\"https:\/\/twitter.com\/wavey0x\/status\/1612517046754877440?ref_src=twsrc%5Etfw\"\u003EJanuary 9, 2023\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-29551").innerHTML = tweet["html"];</script><p></p>
<p>Yearn’s <a href="https://yearn.finance/vaults/factory">Vault Factory</a> is a new way for anyone to create and register yield-generating yVaults through one simple interface quickly. It automates the deployment processes, making it easier for users to access ready-made yield strategies that can be applied to specific DeFi protocols.</p>
<p>The factory allows users to deploy Yearn Vaults rapidly and set up <a href="https://medium.com/iearn/measuring-risk-for-defi-yield-strategies-b53f62b83b92">risk-adjusted</a> yield strategies with just a few clicks, plus the deployment process does not require any human involvement! We also refer to these vaults as “permissionless” or “automated” vaults.</p>
<ul>
<li><strong>User Interface:</strong> <a href="https://yearn.finance/vaults/factory">https://yearn.finance/vaults/factory</a></li>
<li><strong>Ethereum Contract:</strong> <a href="https://etherscan.io/address/0x21b1FC8A52f179757bf555346130bF27c0C2A17A">0x21b1FC8A52f179757bf555346130bF27c0C2A17A</a></li>
<li><strong>Documentation:</strong> <a href="https://docs.yearn.finance/getting-started/products/yvaults/vault-factory">https://docs.yearn.finance/getting-started/products/yvaults/vault-factory</a></li>
</ul>
<section id="how-does-the-vault-factory-work" class="level2">
<h2 class="anchored" data-anchor-id="how-does-the-vault-factory-work">How Does the Vault Factory Work?</h2>
<p></p><div id="tweet-64469"></div><script>tweet={"url":"https:\/\/twitter.com\/adamscochran\/status\/1615834420820443136","author_name":"Adam Cochran (adamscochran.eth)","author_url":"https:\/\/twitter.com\/adamscochran","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E43\/268\u003Cbr\u003E\u003Cbr\u003EYearn also has started to create automated factories that allow any project to deploy automated yield vaults for their pools, and set bribes toward that pool.\u003Cbr\u003E\u003Cbr\u003EAs the number of templates expand, Yearn will be able to automate a large number of vaults for any project.\u003C\/p\u003E&mdash; Adam Cochran (adamscochran.eth) (@adamscochran) \u003Ca href=\"https:\/\/twitter.com\/adamscochran\/status\/1615834420820443136?ref_src=twsrc%5Etfw\"\u003EJanuary 18, 2023\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-64469").innerHTML = tweet["html"];</script><p></p>
<p>To deploy a Yearn Vault for a token that doesn’t have one yet, go to the <a href="https://yearn.finance/vaults/factory">interface</a> and select the token name. Once an asset is chosen and the transaction submitted, the Vault Factory <a href="https://etherscan.io/address/0x21b1FC8A52f179757bf555346130bF27c0C2A17A">contract</a> will automatically deploy a Yearn Vault with a predefined set of yield strategies for that token type.</p>
<p>Here is an example of the factory UI:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-vault-factory/https:/cdn-images-1.medium.com/max/4884/0*tEhhGORfP8lTEgr0.png" class="img-fluid"></p>
<p><strong>Currently, only strategies for liquidity pool tokens from Curve are supported</strong>, but we will expand with more token types as the factory is updated. Permissionless vaults created for Curve LP tokens come with a set of strategies that are optimized to maximize and automatically compound the yield earned for depositors:</p>
<ul>
<li><strong>StrategyCurveBoostedFactory</strong> uses Yearn’s veCRV balance (currently 51.4m)* to give users the maximum 2.5x boost on their CRV rewards.</li>
<li><strong>StrategyConvexFactory</strong> supplies any additional Curve LP tokens (beyond which would receive the maximum 2.5x boost via the Curve strategy) to Convex Finance to earn CRV rewards (boosted by Convex’s veCRV balance) and CVX rewards.</li>
<li><strong>StrategyConvexFraxFactory</strong> will only be added to the vault if the Curve LP token of the vault can be staked in Convex for Frax. This ConvexFrax strategy will be used instead of the standard Convex strategy to earn additional FXS rewards (on top of the standard CRV and CVX rewards).</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-vault-factory/https:/cdn-images-1.medium.com/max/5200/0*lNWH4DbBD9At8Fk0.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><em>Yearn veCRV balance over 2 years. Can be explored <a href="https://yearn.vision/?orgId=1&amp;refresh=5m&amp;viewPanel=23&amp;from=now-2y&amp;to=now">here</a></em></figcaption>
</figure>
</div>
<p>The Yearn Vault manages rewards’ harvesting, claiming, and compounding, so users can relax and watch as their newly created vault automatically maximizes their yields without taking further action.</p>
<p></p><div id="tweet-41688"></div><script>tweet={"url":"https:\/\/twitter.com\/MarcoWorms\/status\/1615919144180002818","author_name":"Worms","author_url":"https:\/\/twitter.com\/MarcoWorms","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EAre you paying close attention anon? \uD83D\uDC40\u003Cbr\u003E\u003Cbr\u003ENew gauges approved on Curve can now instantly have yVaults for them. These vaults come equipped with pre-built strategies that auto-compound and maximize yield for Curve LP positions.\u003Cbr\u003E\u003Cbr\u003Eand yVaults will have their own gauges with \u003Ca href=\"https:\/\/twitter.com\/search?q=%24veYFI&amp;src=ctag&amp;ref_src=twsrc%5Etfw\"\u003E$veYFI\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/d8a6P3oWKS\"\u003Ehttps:\/\/t.co\/d8a6P3oWKS\u003C\/a\u003E\u003C\/p\u003E&mdash; Worms (@MarcoWorms) \u003Ca href=\"https:\/\/twitter.com\/MarcoWorms\/status\/1615919144180002818?ref_src=twsrc%5Etfw\"\u003EJanuary 19, 2023\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-41688").innerHTML = tweet["html"];</script><p></p>
</section>
<section id="long-live-defi" class="level2">
<h2 class="anchored" data-anchor-id="long-live-defi">Long Live DeFi</h2>
<p>As Yearn gets more permissionless, we are also lowering our vault fees:</p>
<p><strong>Before</strong>, Yearn charged:</p>
<ul>
<li>2% management fee, yearly flat-rate charged from vault’s funds</li>
<li>20% performance fee, charged on every harvesting profit</li>
</ul>
<p><strong>Now</strong>, Yearn charges:</p>
<ul>
<li>0% management fees</li>
<li>10% performance fees</li>
</ul>
<p>The fees for each vault can be seen in the new <a href="https://yearn.finance/">**yearn.finance</a>** website:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-vault-factory/https:/cdn-images-1.medium.com/max/4872/0*h62Uqi8jcbG4TT1x.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">checking fees for a vault</figcaption>
</figure>
</div>
<p>You can also see the total allocated for each strategy:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-vault-factory/https:/cdn-images-1.medium.com/max/4896/0*3ry8KBZTaZwdLxRH.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">checking vault allocations</figcaption>
</figure>
</div>
<p>And like any other yVaults, you can also use <a href="https://yearn.watch/">yearn.watch</a> and <a href="https://yearn.vision/">yearn.vision</a> to monitor the vault’s real-time metrics.</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-vault-factory/https:/cdn-images-1.medium.com/max/3216/1*1OSA6rpFsf1HBq-8_yARzg.png" class="img-fluid"></p>
<ul>
<li><strong>Yearn Website:</strong> <a href="https://yearn.finance/vaults">yearn.finance</a></li>
<li><strong>Yearn Twitter:</strong> <a href="https://twitter.com/iearnfinance">twitter.com/iearnfinance</a></li>
<li><strong>Yearn Docs:</strong> <a href="https://docs.yearn.finance/">docs.yearn.finance</a></li>
</ul>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-vault-factory/index.html</guid>
  <pubDate>Thu, 16 Mar 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>yGenius: Chat with Yearn!</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-ygenius/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-ygenius/https:/cdn-images-1.medium.com/max/2390/0*rZFxThlAMLjVcKUZ.png" class="img-fluid"></p>
<p>I am releasing an experimental preview and code for yGenius: a GPT-powered bot that indexes the Yearn Ecosystem knowledge so you can query it with a universal chat interface.</p>
<ul>
<li><strong>Test yGenius: <a href="https://ygenius.yearn.farm/">https://ygenius.yearn.farm/</a></strong></li>
<li>Frontend Source: <a href="https://github.com/yearn/ygenius-webui">https://github.com/yearn/ygenius-webui</a></li>
<li>Backend Source: <a href="https://github.com/yearn/ygenius-brain">https://github.com/yearn/ygenius-brain</a></li>
</ul>
<p>In this article, I will explain how to connect your own knowledge base to GPT using the <a href="https://github.com/jerryjliu/gpt_index">gpt_index</a> library and also explore the trade-offs between different indexing methods. The main reason I wanted to build this at Yearn is that we have a lot of knowledge spread around, and I believe LLMs can help provide a unified interface so we can consume and iterate on all written content in our ecosystem.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-ygenius/https:/cdn-images-1.medium.com/max/2000/0*MR37-bYcDnz6uX45.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">why I think an universal interface is cool to iterate on data we already have</figcaption>
</figure>
</div>
<section id="gpt-limitations-and-indexing-solution" class="level2">
<h2 class="anchored" data-anchor-id="gpt-limitations-and-indexing-solution">GPT limitations and indexing solution</h2>
<p>GPT-3 currently supports about 16,000 characters in one request. This counts for both input and output, and if you want to ask a question that requires many documents for GPT to consume and answer, you will likely hit this limit.</p>
<p>Luckily for us, some awesome people are working on a library called <a href="https://github.com/jerryjliu/gpt_index">gpt_index</a>. This powerful tool allows us to index documents, and this index can be used in conjunction with GPT to enrich queries with relevant information.</p>
<p>So I implemented the index and fed it our knowledge:</p>
<ul>
<li>Yearn Blog Articles</li>
<li>Yearn Smart Contracts Code</li>
<li>Yearn Official Documentation</li>
<li>Yearn Discord Support Channel History</li>
<li>All relevant Yearn data we can find (vaults TVL, APY, etc)</li>
</ul>
</section>
<section id="creating-a-simple-index-out-of-all-your-knowledge" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-simple-index-out-of-all-your-knowledge">Creating a simple index out of all your knowledge</h2>
<p>To replicate yGenius and make a simple bot that can answer questions based on a body of documents, you need to have a basic Python setup and knowledge:</p>
<ol type="1">
<li>Make sure you have <a href="https://www.python.org/downloads/">Python</a> and <a href="https://pypi.org/project/pip/">pip</a> installed. You’ll also need an OpenAI API Key <a href="https://platform.openai.com/account/api-keys">(here)</a>.</li>
<li>Install <a href="https://github.com/jerryjliu/gpt_index">gpt_index</a>: pip install gpt-index</li>
<li>Create a folder for your new project, such as “my-bot-app”.</li>
<li>Create a data folder inside “my-bot-app” where you can dump all documents you have about your ecosystem; <a href="https://github.com/yearn/ygenius-brain/tree/master/training-data">here</a> is ours for example.</li>
<li>Create a main.py script inside “my-bot-app” with this code:</li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YOUR_OPENAI_API_KEY'</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Don't forget to replace the above API Key!!</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Link to generate one: https://platform.openai.com/account/api-keys</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> gpt_index <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GPTSimpleVectorIndex, SimpleDirectoryReader</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loads the 'data' folder with all files inside it</span></span>
<span id="cb1-9">documents <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SimpleDirectoryReader(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>, recursive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).load_data()</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creates a SimpleVector Index</span></span>
<span id="cb1-12">index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPTSimpleVectorIndex(documents)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Queries the index with prompt</span></span>
<span id="cb1-15">index.query(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"what is yearn?"</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># #####################################</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You might want to save the index on the disk because</span></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># it takes too long to build one from scratch!</span></span>
<span id="cb1-21"></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the functions below to save/load:</span></span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save to disk</span></span>
<span id="cb1-25">index.save_to_disk(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index.json'</span>)</span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load from disk</span></span>
<span id="cb1-28">index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPTSimpleVectorIndex.load_from_disk(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index.json'</span>)</span></code></pre></div>
<p>With 6 lines of code, your index is ready and you have made a query on it! If you are proficient with Python, you can improve the above script so that it saves the index when it is built, so you’re able to load it every time you run the app. Creating the index is slow, and for non-vector indexes, it can be costly too! OpenAI API charges per number of words, and expensive methods to build indexes will send more and larger requests.</p>
</section>
<section id="different-types-of-indexes-and-their-trade-offs" class="level2">
<h2 class="anchored" data-anchor-id="different-types-of-indexes-and-their-trade-offs">Different types of indexes and their trade-offs</h2>
<p>For the example above, I used GPTSimpleVectorIndex, which is a “Vector Store Index”. There are many other indexes you can use, and depending on your query, it might make sense to change them. Here are the links to the official docs for each index type:</p>
<ul>
<li><a href="https://gpt-index.readthedocs.io/en/latest/guides/index_guide.html#vector-store-index">Vector Store Index</a></li>
<li><a href="https://gpt-index.readthedocs.io/en/latest/guides/index_guide.html#list-index">List Index</a></li>
<li><a href="https://gpt-index.readthedocs.io/en/latest/guides/index_guide.html#keyword-table-index">Keyword Table Index</a></li>
<li><a href="https://gpt-index.readthedocs.io/en/latest/guides/index_guide.html#tree-index">Tree Index</a></li>
</ul>
<p>Let’s go deeper into Vector Stores and List Indexes:</p>
</section>
<section id="vector-store-index" class="level2">
<h2 class="anchored" data-anchor-id="vector-store-index">Vector Store Index</h2>
<p>When you query a Vector Store Index:</p>
<ol type="1">
<li>The user query is sent to OpenAI for <a href="https://medium.com/@tonydain9_78432/word-embedding-chat-gpt-c96702f864e0">embedding</a>.</li>
<li>This embedding is used to search the locally stored data for which part of the vector index might have relevant information to answer the question.</li>
<li>Then, the user query is again sent to OpenAI, but this time with the relevant pieces of information that hopefully compose a better answer instead of just asking GPT without any context.</li>
</ol>
<p>Vector Stores are cheap to use and great for making a question/answer service! This is what I use in this first yGenius release.</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-ygenius/https:/cdn-images-1.medium.com/max/2654/0*qjqaZMomtbc2kill.png" class="img-fluid"></p>
</section>
<section id="list-index" class="level2">
<h2 class="anchored" data-anchor-id="list-index">List Index</h2>
<p>The list index is better if you need ALL the text contained in the index to create an answer. In the vector, we only send relevant parts to OpenAI for building a result, but for a list index, we will send the whole chunk of text contained in the index to OpenAI to refine an answer.</p>
<p>When you query a list index:</p>
<ol type="1">
<li>Let’s say you have 1 million characters of text and GPT API can only handle 10,000 at a time (leaving 6,000 as space to build your answer). You would need 100 chunks of 10,000 characters each to be able to send everything to OpenAI.</li>
<li>So GPT index sends the user query plus the first chunk to OpenAI for an answer.</li>
<li>Then, it sends the user query plus the current answer plus the second chunk plus an instruction like Try to refine the current answer with this chunk of text.</li>
<li>Then it will repeat the above for every single index chunk, refining the answer with all of them until there are no more chunks to help create an answer.</li>
</ol>
<p>List Indexes are very expensive to query, but they can achieve awesome tasks like creating a complete summary for a huge body of text, a task that Vector Stores would not be able to achieve.</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-ygenius/https:/cdn-images-1.medium.com/max/3642/0*GhtkqZukgs7FosPB.png" class="img-fluid"></p>
</section>
<section id="composing-indexes-for-smarter-answers" class="level2">
<h2 class="anchored" data-anchor-id="composing-indexes-for-smarter-answers">Composing indexes for smarter answers</h2>
<p>If there is a concept that has melted my mind (and wallet) it is <a href="https://gpt-index.readthedocs.io/en/latest/how_to/composability.html">“Index Composability”</a>. You are also able to compose indexes in a graph where you can connect any type of index as a child of another one. Also, we can give summaries for each index so when a query arrives the bot will be able to better search the composed index for the relevant pieces of an answer.</p>
<p>When composing indexes, there is a potential increase in query cost since each index has its own cost trade-offs, but the quality of answers is likely to increase as you have structured the documents making the bot more efficient at parsing through them. At the moment, I have not found a way to use composable indexes in the first release due to costs, even when only using Vector Store Indexes.</p>
<p>For example, here is how the gpt_index docs make a ListIndex containing many TreeIndexes and use GPT to autogenerate a summary:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create many indexes</span></span>
<span id="cb2-2">index1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPTTreeIndex(doc1)</span>
<span id="cb2-3">index2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPTTreeIndex(doc2)</span>
<span id="cb2-4">index3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPTTreeIndex(doc3)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set summaries for an index using GPT</span></span>
<span id="cb2-7">summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> index1.query(</span>
<span id="cb2-8">   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What is a summary of this document?"</span>, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summarize"</span></span>
<span id="cb2-9">)</span>
<span id="cb2-10">index1.set_text(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(summary))</span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeat above for all other indexes you want to set summaries for</span></span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create parent index that contains all others</span></span>
<span id="cb2-14">list_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPTListIndex([index1, index2, index3])</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wrap it all into a graph so we can query them all at once</span></span>
<span id="cb2-17">graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ComposableGraph.build_from_index(list_index)</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># execute query</span></span>
<span id="cb2-20">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graph.query(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Where did the author grow up?"</span>)</span></code></pre></div>
</section>
<section id="making-the-bot-have-chat-history-context" class="level2">
<h2 class="anchored" data-anchor-id="making-the-bot-have-chat-history-context">Making the bot have chat history context</h2>
<p>Another important part for a bot is that it should know where the current conversation state is, so it feels like chatting with something because you can reference older messages like:</p>
<ul>
<li>Anon: what is yswaps?</li>
<li>yGenius: it’s […]</li>
<li>Anon: give me more details</li>
<li>yGenius: sure, yswaps […]</li>
</ul>
<p>On the second message, Anon didn’t have to tell yGenius the service he wanted more details for, since it’s aware that previously they were chatting about “yswaps”.</p>
<p>Doing this is actually quite simple. In every user query, I send the history along with the query to the backend. Here is how I query the index.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode md code-with-copy"><code class="sourceCode markdown"><span id="cb3-1">######## Chat history with anon for context</span>
<span id="cb3-2"></span>
<span id="cb3-3">CHAT_HISTORY_WITH_USER</span>
<span id="cb3-4"></span>
<span id="cb3-5">######## Current interactions with anon as yGenius (GPT-powered service fed with indexed data from Yearn Finance to help users explore Yearn ecosystem)</span>
<span id="cb3-6"></span>
<span id="cb3-7">Question: USER_CURRENT_QUESTION</span>
<span id="cb3-8">Answer:</span></code></pre></div>
<p>Change CHAT_HISTORY_WITH_USER and USER_CURRENT_QUESTION with variables that come from the frontend query. The last query in our yswaps example would look like this:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode md code-with-copy"><code class="sourceCode markdown"><span id="cb4-1">######## Chat history with anon for context</span>
<span id="cb4-2"></span>
<span id="cb4-3">Question: what is yswaps?</span>
<span id="cb4-4">Answer: it's <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">...</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb4-5"></span>
<span id="cb4-6">######## Current interactions with anon as yGenius (GPT-powered service fed with indexed data from Yearn Finance to help users explore Yearn ecosystem)</span>
<span id="cb4-7"></span>
<span id="cb4-8">Question: give me more details</span>
<span id="cb4-9">Answer:</span></code></pre></div>
<p>You have to take care of juggling the maximum size for history and input. At yGenius, I leave 4K characters for input and 4K characters for history.</p>
</section>
<section id="update-after-release-of-gpt-4-128k" class="level2">
<h2 class="anchored" data-anchor-id="update-after-release-of-gpt-4-128k">Update after release of GPT-4 128k</h2>
<p>This article and ygenius are still useful, but there are new ways to build AI bots that might not need vector stores anymore. I have done a new structure for the genius bot that uses only gpt4 128k tokens API, you can check it here: <a href="https://github.com/ApeWorX/apegenius">https://github.com/ApeWorX/apegenius</a></p>
</section>
<section id="credits" class="level2">
<h2 class="anchored" data-anchor-id="credits">Credits</h2>
<ul>
<li>Thanks a lot <a href="https://twitter.com/semenov_roman_">Poma</a> for helping me navigate the indexing stuff!</li>
<li>I initially started looking for indexing stuff after this <a href="https://twitter.com/futurekarol/status/1617643720568082432">futurekarol post</a>.</li>
<li>Thanks <a href="https://github.com/jerryjliu">jerryjliu</a> for building <a href="https://github.com/jerryjliu/gpt_index">gpt_index</a> + all <a href="https://github.com/jerryjliu/gpt_index/graphs/contributors">contributors</a> improving it!</li>
<li>And thanks to the awesome people of <a href="https://twitter.com/iearnfinance">Yearn</a> that always helps with test, review, and overcoming technical blockers.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-ygenius/https:/cdn-images-1.medium.com/max/2560/0*oiEJMa4yDzvT1OEG.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">yGenius says: “Hey anon I noticed you reached the end of the article, thanks for reading it!”</figcaption>
</figure>
</div>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-ygenius/index.html</guid>
  <pubDate>Mon, 13 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Yearn Strategies Case Study: Lido Staked ETH</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-lido-risks/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/3072/0*55IdG70LbTcG2BqI.png" class="img-fluid"></p>
<p>Last month we published a DeFi risk <a href="https://medium.com/iearn/measuring-risk-for-defi-yield-strategies-b53f62b83b92">case-study</a> that used the lens of the <a href="https://docs.yearn.finance/resources/risks/risk-score">Yearn Risk Framework</a> to analyze the risks involved in operating a yield strategy for the DAI <a href="https://medium.com/iearn/yearn-finance-explained-what-are-vaults-and-strategies-96970560432">Yearn Vault</a>. This article will use similar methods to look at the risks of investing in stETH (Lido Finance Staked ETH) using Yearn vaults and strategies.</p>
<p>To guide our journey, we will explore the risks for each layer until we reach the “steCRV yVault” that includes the risk of all parts, following these in order:</p>
<ul>
<li>What is Proof-of-Stake yield?</li>
<li>What is Liquid Staking, Lido Finance, and stETH?</li>
<li>Overview ETH yVault</li>
<li>Overview steCRV</li>
<li>Overview steCRV yVault</li>
</ul>
<p>One important thing to note: the <a href="https://docs.yearn.finance/resources/risks/risk-score">Yearn Risk Framework</a> will give scores to strategy operation risks, not token-holding risks. So for example a strategy that invests token X in protocol Y will have risk scores tailored for protocol Y, but the risks for holding token X are on the user. By following through with all the above questions, we will be able to understand both the token-holding and operational risks for each step. &gt; <em>The <a href="https://docs.yearn.finance/getting-started/guides/how-to-understand-strategies-descriptions">Yearn Strategy Descriptions Glossary</a> might help you if you struggle with the DeFi lingo!</em></p>
<section id="proof-of-stake-yield-and-validators" class="level2">
<h2 class="anchored" data-anchor-id="proof-of-stake-yield-and-validators">Proof of Stake yield and Validators</h2>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/3072/0*sy-ff40eclGGcXbF.jpg" class="img-fluid"></p>
<p>As of September 15, 2022, Ethereum started using the <a href="https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/">Proof-of-Stake (PoS)</a> process to validate new transactions added to the blockchain. The previous method, Proof-of-Work (PoW, required “validator nodes” to spend energy to validate transactions. In Proof-of-Stake, validator nodes use ETH deposited in it to validate transactions, achieving the same result.</p>
<p>Validators checks that new transactions propagated over the network are valid. When users stake (deposit) ETH in a validator node, they invest in the network’s security and help it keep functioning. In return, stakers are rewarded with new blocks reward emissions for new transactions validated.</p>
<p>ETH deposited in validators can be partly <a href="https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/rewards-and-penalties/#slashing">slashed</a> if the validator behaves dishonestly. Slashed ETH is mostly burned, and a small percentage of the slashed amount goes to the nodes that reported the misbehavior.</p>
<p>The Ethereum Foundation has a great resource on the <a href="https://ethereum.org/en/staking/">types of staking</a> you can participate on:</p>
<ul>
<li><strong>Solo home staking:</strong> Most impactful, Full control, Full rewards, Trustless.</li>
<li><strong>Staking as a service:</strong> Your 32 ETH, Non-custodial keys, Entrusted node operation.</li>
<li><strong>Pooled staking:</strong> Stake any amount, Earn rewards, Keep it simple, Popular.</li>
<li><strong>Centralized exchanges:</strong> Least impactful, Highest trust assumptions, Not your keys.</li>
</ul>
<section id="proof-of-stake-risks" class="level3">
<h3 class="anchored" data-anchor-id="proof-of-stake-risks">Proof-of-Stake Risks</h3>
<ul>
<li>A user with 51% or more tokens for a PoS network can control it. To mitigate this risk, the tokens can be fairly distributed to ensure enough decentralization. <a href="https://medium.com/@arjunblj/grin-and-the-mythical-fair-launch-395ca87a5e73">“Fair Launch”</a> methods contain their own set of risks since “fairness” is a subjective concept.</li>
<li>Part of staked ETH can be <a href="https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/rewards-and-penalties/#slashing">slashed</a> if a validator misbehaves. This adds a layer of risk when staking on someone else’s validator.</li>
<li>Proof-of-stake is younger and less battle-tested than proof-of-work.</li>
<li>Requires two separate software pieces to run a validator, which is more complex than PoW. Can lead to more software bugs.</li>
</ul>
<p>The Ethereum community has agreed that the risks of PoS are worth it over the risks of PoW after years of discussion. If you want to receive Proof-of-Stake yield with no added trust assumptions and still provide the best value to the Ethereum network, then solo staking is the way but it requires the most knowledge and capital to start.</p>
</section>
</section>
<section id="liquid-staking-lido-finance-and-steth" class="level2">
<h2 class="anchored" data-anchor-id="liquid-staking-lido-finance-and-steth">Liquid Staking, Lido Finance, and stETH</h2>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/3072/0*gFupSkpPTKOva_qi.jpg" class="img-fluid"></p>
<p>If you want to take part in Ethereum’s Proof of Stake process and <a href="https://ethereum.org/en/staking/solo/">do it yourself</a> then there are a couple of key blockers that might prevent you from doing it:</p>
<ul>
<li>Users need at least 32 ETH to make a solo validator node.</li>
</ul>
<p><a href="https://ethereum.org/en/staking/saas/">Staking as a Service</a> solves the above problem but:</p>
<ul>
<li>ETH staked can’t be withdrawn, so it becomes illiquid for ANY other usage such as collateral or trading</li>
</ul>
<p>To facilitate this <a href="https://ethereum.org/en/staking/pools/">Pooled Staking</a> was created, and along with it, <a href="https://lido.fi/">Lido Finance</a> created a new DeFi product: <strong>stETH</strong>.</p>
<p>To understand stETH we need to know what is <strong>Liquid Staking</strong> first:</p>
<ul>
<li><strong>Staking</strong> is when you lock your assets, maybe for a set period. In PoS this is done to help support blockchain security through the staking/slashing process.</li>
<li><strong>Liquid Staking</strong> is when the staking process gives you a receipt token that can be traded in the market, normally near 1:1 value of the staked token since you will be able to be redeemed for one in the future.</li>
</ul>
<p>stETH is the liquid-staked version of ETH provided by <a href="https://lido.fi/">Lido Finance</a>. To have stETH, one must deposit ETH in Lido’s platform, and it creates stETH on a 1:1 ratio for you. Lido stake all ETH deposited and splits yield with all stETH holders. The deposit operation can’t be reversed today, so if you want to go back from ETH to stETH you have to sell stETH in the market.</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/5200/0*-UKCfkJALoyqFJwq.png" class="img-fluid"></p>
<section id="steth-risks" class="level3">
<h3 class="anchored" data-anchor-id="steth-risks">stETH Risks</h3>
<p>stETH doesn’t have a withdrawal mechanism today, so users depend on the market valuing stETH 1:1 with ETH, this price relation can trade at discount in case of a big sell-off. In contrast, Lido is a reputable protocol that you can track onchain where every single ETH is at. In case of price trading at discount it creates an opportunity for people to buy cheaper ETH, and most people today believe in the capability of Ethereum and Lido teams to deliver a withdraw function in the following years to come. Today’s bottleneck for staking withdraws is mostly on Ethereum’s side rather than Lido.</p>
<p>If you want to learn more, Lido <a href="https://help.lido.fi/en/articles/5230603-what-are-the-risks-of-staking-with-lido">explains all risks involved in stETH</a> about the risks of:</p>
<ul>
<li>Smart Contracts (can have bugs).</li>
<li>Ethereum Virtual Machine (can have bugs).</li>
<li>DAO management (can be mismanaged).</li>
<li>Validators (ETH can be slashed).</li>
<li>Market Prices (can make exiting stETH expensive if price trade at discount from ETH).</li>
</ul>
<p>As of writing, Lido has about 4.7m ETH locked in them and $5.7b worth of circulating stETH:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2000/0*7jkwvErRsmLUsdA0.png" class="img-fluid"></p>
<p>In the next section we’ll see how Yearn evaluates the risk for depositing ETH in Lido to convert stETH, and learn the Yearn risk scores around it compared to the rest of DeFi yield strategies. stETH is considered one of the lowest-risk strategies, but it still contains many inherent risks (listed above).</p>
</section>
</section>
<section id="yaern-eth-vault-and-steth-yield" class="level2">
<h2 class="anchored" data-anchor-id="yaern-eth-vault-and-steth-yield">Yaern ETH Vault and stETH yield</h2>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/5200/0*4MDHqjDwTXEuY5KT.jpg" class="img-fluid"></p>
<p>One way to be exposed to stETH is by using <a href="https://medium.com/iearn/yearn-finance-explained-what-are-vaults-and-strategies-96970560432">Yearn Vaults</a>. The benefit of using Yearn here is that you can deposit/withdraw wETH at any time in the <a href="https://yearn.finance/#/vault/0xa258C4606Ca8206D8aA700cE2143D7db854D168c">ETH yVault</a>, and today it allocates about 1/3 of its funds into stETH, alongside other yield strategies.</p>
<p>There is another strategy in <a href="https://yearn.watch/vault/0xa258C4606Ca8206D8aA700cE2143D7db854D168c">ETH vault active strategies</a> that also uses stETH. And it uses about 20% of the ETH yVault funds. This strategy “delegates deposits” to the steCRV yVault. In the Yearn ecosystem, a “delegate deposit” is when a yVault deposits in another yVault, and this can be seen in <a href="https://yearn.vision/d/apkUMx6nz/vault-overview?orgId=1&amp;var-networks=ETH&amp;var-exp=false&amp;var-vaults=yvWETH%200.4.2&amp;var-address=0xa258C4606Ca8206D8aA700cE2143D7db854D168c&amp;var-version=v2">yearn.vision</a> for every vault. In this case ETH delegates to “steCRV” vault (which will be explained in the next sections):</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2000/0*t2gCnaNS_fC4Bt0t.png" class="img-fluid"></p>
<p>At <a href="https://yearn.watch/risk">yearn.watch/risk</a> we can see the risk for both strategies. <strong>Lower Number = Less Risk</strong>. You can see the meaning for each score in the <a href="https://medium.com/iearn/measuring-risk-for-defi-yield-strategies-b53f62b83b92">Previous Article</a> and in <a href="https://docs.yearn.finance/resources/risks/risk-score">Yearn Risk Framework</a> page.</p>
<ul>
<li>This strategy just holds stETH (<a href="https://yearn.watch/vault/0xa258C4606Ca8206D8aA700cE2143D7db854D168c/0x120FA5738751b275aed7F7b46B98beB38679e093">stETHAccumulator_v2</a>) (it got migrated from v1, so TVL score is not displaying correctly here since these are the scores for v1)</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2000/0*0T7fX23xpJ9IIqP8.png" class="img-fluid"></p>
<ul>
<li>This strategy delegates to steCRV Vault (<a href="https://yearn.watch/vault/0xa258C4606Ca8206D8aA700cE2143D7db854D168c/0xF9fDc2B5F60355A237deb8BD62CC117b1C907f7b">single sided curve eth steth</a>)</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2000/0*HYqbDOUa668bq-D7.png" class="img-fluid"></p>
<p><em>In the below risk table, Bottom-to-top is the level of impact in case of a problem, left-to-right is the likeness that it can occur. Bottom-left is less risky, top-right is riskier:</em></p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2000/0*lmyIXzBicVP8CDzk.png" class="img-fluid"></p>
<p>At the time of writing (percentages can change at any time!) when depositing ETH in the Yearn ETH Vault:</p>
<ul>
<li>33% stays as stETH generating yield</li>
<li>21% is delegated to steCRV Vault (that we will learn about in the next section)</li>
<li>40% is switched between different lending strategies (this was the first strategy type that Yearn had)</li>
<li>The rest (6%) goes into other smaller strategies</li>
</ul>
<section id="eth-yvault-risks" class="level3">
<h3 class="anchored" data-anchor-id="eth-yvault-risks">ETH yVault risks</h3>
<p>Besides the risks of strategies taking a loss, which is mitigated by the “Yearn Risk Framework”, Yearn vaults also contain risks of their own. Since the ETH vault uses <a href="https://lido.fi/">Lido</a> as part of a yield strategy, the risk scores include the Lido protocol. When we move on to steCRV we will see that this is different: Yearn will not include Lido in the strategy scores for steCRV because the yield strategy operations do not use Lido.</p>
<p>The full risk overview of using the ETH vault is the sum of the risk scores for its strategies plus inherent vault risks: (<em>Taken from the <a href="https://docs.yearn.finance/resources/risks/vault-risks">docs</a></em>)</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2000/0*IjL2S1Mic1341m50.png" class="img-fluid"></p>
</section>
</section>
<section id="stecrv-liquidity-pool" class="level2">
<h2 class="anchored" data-anchor-id="stecrv-liquidity-pool">steCRV liquidity pool</h2>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/3072/0*5nRAgqhJNx-zfuPf.jpg" class="img-fluid"></p>
<p>We know what stETH is and how the ETH yVault uses it for yield, but there is another way to earn yield on top of stETH: the curve stETH/ETH liquidity pool. (see <a href="https://finematics.com/liquidity-pools-explained/">here</a> to learn more about LPs)</p>
<p>In <a href="https://curve.fi/#/ethereum/pools/steth/deposit">stETH+ETH</a> liquidity pool at curve people can:</p>
<ul>
<li>Sell stETH to ETH</li>
<li>Buy stETH for cheaper than locking ETH at 1:1 on Lido (depends on market conditions)</li>
<li>Provide Liquidity stETH+ETH liquidity and earn trading fees</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2000/0*DTUe2qiDlQ1EJxg9.png" class="img-fluid"></p>
<p>The token you get when depositing stETH+ETH to this liquidity pool is called <strong>steCRV</strong> (<a href="https://etherscan.io/address/0x06325440d014e39736583c165c2963ba99faf14e">address</a>). This token is already a “yield-bearing” token since it represents an LP position that earns trading fees + CRV emissions. But there is one extra layer of yield that Yearn taps into to make the steCRV yVault, our next and last section.</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/5200/0*dG1432WXer79MAN0.png" class="img-fluid"></p>
<p>A convenient feature found in <a href="https://yearn.finance/#/vault/0xdCD90C7f6324cfa40d7169ef80b12031770B4325">Yearn steCRV vault</a> is the ability to skip doing all the above steps manually by using zaps:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/5200/0*dKIrh2TCLCDSWsc3.png" class="img-fluid"></p>
<p><a href="https://medium.com/iearn/yearn-cow-swap-371b6d7cf3b3">Yearn colabs with CoW Swap</a> and <a href="https://app.portals.fi/">portals.fi</a> to constantly improve the zaping operational security and efficiency. Here is an example zap from ETH but you can zap from other tokens too:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2098/0*1Avd7nj0fnBNyodU.png" class="img-fluid"></p>
<section id="stecrv-risks" class="level3">
<h3 class="anchored" data-anchor-id="stecrv-risks">steCRV risks</h3>
<ul>
<li><p>All inherent stETH and smart contracts risks</p></li>
<li><p>All liquidity pools have a risk of <a href="https://academy.binance.com/en/articles/impermanent-loss-explained">Impermanent Loss</a>. This pool’s assets are supposed to be 1:1 in ratio, but if many people sell stETH and no one repurchases it before you exit the LP, then IL may occur.</p></li>
<li><p>Curve protocol <a href="https://resources.curve.fi/faq/security#what-are-the-risks-involved">risks</a> (which will be covered next section of this article because the steCRV yVault risk score covers the Curve protocol)</p></li>
</ul>
</section>
</section>
<section id="yearn-stecrv-vault" class="level2">
<h2 class="anchored" data-anchor-id="yearn-stecrv-vault">Yearn steCRV Vault</h2>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2560/0*UE3m3nxALO561khK.png" class="img-fluid"></p>
<p>In the previous section, we saw that Curve’s role in this ecosystem is to provide the ETH+stETH Liquidity Pool. Because of <a href="https://phemex.com/blogs/the-curve-wars-what-why">Curve Wars</a>, a protocol called <a href="https://www.convexfinance.com/">Convex Finance</a> emerged, which builds a layer ontop of Curve.</p>
<p>The <a href="https://yearn.finance/#/vault/0xdCD90C7f6324cfa40d7169ef80b12031770B4325">steCRV yVault</a> stakes steCRV in <a href="https://www.convexfinance.com/stake">Convex</a>. There, it earns CRV and CVX yield. Earned tokens are harvested, sold for more steCRV, then deposited back into the vault (auto-compounded). This is a convenient operation since it maximizes the yield you can get from steCRV and automates harvesting in Convex. It also cost less gas overall per user because Yearn shares the operational gas prices with all vault depositors (like all other yVaults).</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/5200/0*7AVDHAzDCOxnR_IE.png" class="img-fluid"></p>
<p>You could do this operation manually and not use yVaults though:</p>
<ol type="1">
<li>Obtain stETH at <a href="https://stake.lido.fi/">Lido</a> or swap at <a href="https://curve.fi/#/ethereum/pools/steth/swap">Curve</a></li>
<li><a href="https://curve.fi/#/ethereum/pools/steth/deposit">Deposit</a> stETH+ETH on Curve, receiving steCRV</li>
<li><a href="https://www.convexfinance.com/stake">Stake</a> steCRV on Convex</li>
<li>Periodically harvest rewards, sell them for more steCRV, and stake again in Convex</li>
</ol>
<p>By delegating this operation to steCRV yVault you get the following:</p>
<ul>
<li>Gas fees for operations are shared across all other users, which translates to higher yields</li>
<li>Harvest and compound are automated, which is convenient</li>
</ul>
<section id="stecrv-yvault-risks" class="level3">
<h3 class="anchored" data-anchor-id="stecrv-yvault-risks">steCRV yVault risks</h3>
<ul>
<li>All inherent stETH, smart contracts, steCRV risks</li>
<li>Increased overall risk since there are more smart contracts involved (Convex adds another layer of <a href="https://docs.convexfinance.com/convexfinance/faq/risks">risks</a>)</li>
<li>Yield harvest+compound schedules are controlled by Yearn</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2000/0*jUe2lCeTdU3ytdnb.png" class="img-fluid"></p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/2000/0*NR4eggilgrj-Pj9z.png" class="img-fluid"></p>
<p>The overall risk score for this vault is higher than the other ones we looked at, meaning this set of yield strategies is one of the highest risk/reward Yearn has by its own standards.</p>
</section>
</section>
<section id="learn-more" class="level2">
<h2 class="anchored" data-anchor-id="learn-more">Learn More</h2>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/3072/0*Xa9viX9Jsvg0exWk.png" class="img-fluid"></p>
<p>Yearn strategy risks are complex to measure. The discussed steCRV yVault example showcases how any scenario, even when using only reputable protocols, must be taken seriously to protect users because of the high impact on the ecosystem. The more educated users, protocols, and devs are in assessing risk regarding strategies and other yield-generating operations, the safer DeFi will be for <em>everyone</em> to use it.</p>
<ul>
<li><a href="https://docs.lido.fi/guides/steth-integration-guide#risks">Lido docs (risk page)</a></li>
<li><a href="https://resources.curve.fi/faq/security#what-are-the-risks-involved">Curve docs (risk page)</a></li>
<li><a href="https://docs.convexfinance.com/convexfinance/faq/risks">Convex docs (risk page)</a></li>
<li><a href="https://docs.yearn.finance/resources/risks/protocol-risks">Yearn docs (risk page)</a></li>
<li><a href="https://docs.yearn.finance/resources/risks/risk-score">Yearn risk scores descriptions</a></li>
<li><a href="https://yearn.watch/risk">Yearn risk table</a></li>
<li><a href="https://docs.yearn.finance/getting-started/guides/how-to-understand-strategies-descriptions">Yearn strategy descriptions glossary</a></li>
<li><a href="https://yearn.vision/d/apkUMx6nz/vault-overview?orgId=1&amp;var-networks=ETH&amp;var-exp=false&amp;var-vaults=yvWETH%200.4.2&amp;var-address=0xa258C4606Ca8206D8aA700cE2143D7db854D168c&amp;var-version=v2">Yearn vision yVault overview</a></li>
<li><a href="https://yearn.watch/vault/0xdCD90C7f6324cfa40d7169ef80b12031770B4325">steCRV yVault watch</a></li>
<li><a href="https://yearn.watch/vault/0xa258C4606Ca8206D8aA700cE2143D7db854D168c">ETH yVault watch</a></li>
<li><a href="https://medium.com/iearn/yearn-cow-swap-371b6d7cf3b3">Yearn &lt;&gt; CoW Swap colab</a></li>
<li><a href="https://cobie.substack.com/p/apecoin-and-the-death-of-staking">Cobie blog on staking risks (beyond PoS)</a></li>
<li><a href="https://medium.com/@arjunblj/grin-and-the-mythical-fair-launch-395ca87a5e73">Balaji blog on fair launches</a></li>
</ul>
<p>Thanks to everyone that helped this article exist: <em>Farrah, Dark Ghosty, storm0x, <a href="https://twitter.com/saltyfacu">Facu</a>, <span class="citation" data-cites="steve0xp">@steve0xp</span>, <a href="https://twitter.com/draper_forms">Draper</a>, Corn, <a href="https://twitter.com/0xCarvas">Carvas</a></em></p>
<blockquote class="blockquote">
<p><em>All banner images for this article were made with <a href="https://medium.com/@marcoworms/conjuring-images-with-stable-diffusion-20f3e000a837">Stable Diffusion</a>, you can find the prompt specifications and images used for titles <a href="https://hackmd.io/YeDrdsZrSyqYWhzQa6pp5Q?view">here</a>, feel free to use any of the pre-generated outputs as yours!</em></p>
</blockquote>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-lido-risks/https:/cdn-images-1.medium.com/max/3072/0*c4m1jOQgOz-xEFIU.jpg" class="img-fluid"></p>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-lido-risks/index.html</guid>
  <pubDate>Wed, 04 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>The many use cases for Large Language Models in tech writing</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/llm-writing/index.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/3072/1*nutg1mqLg9VD0W_uqFbCpw.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">robot friend helping you from inside a large language model</figcaption>
</figure>
</div>
<p>I’ve been exploring <a href="https://openai.com/api/">GPT-3</a>, a robot made originally to predict the next text in a document, for my daily flows of writing documentation around code, and I wanted to register here the coolest cases for tech writing (yet!):</p>
<ul>
<li>Review text for copy</li>
<li>Review a GIT DIFF</li>
<li>Generate diagrams powered by MermaidJS</li>
<li>Document existing code</li>
<li>Generate complex Markdown structures (ie: Tables)</li>
<li>Summarize text</li>
<li>Find alternative words (synonyms, antonyms)</li>
</ul>
<p>I personally don’t care if LLMs (Large Language Models) don’t generate good results 100% of the time. You will have to roll it again and again and experiment with prompts, but for brainstorming and content bootstrapping it is already much better than any other tool we had.</p>
<p>Before diving into GPT prompts and use cases a small warning: today the text produced by LLMs is hardly usable in production without any sort of human post-production. I personally use more tools than just GPT, but it has proven to be an ally for my job. My entire flow is open here:</p>
<p></p><div id="tweet-56429"></div><script>tweet={"url":"https:\/\/twitter.com\/MarcoWorms\/status\/1581997917023281152","author_name":"Worms","author_url":"https:\/\/twitter.com\/MarcoWorms","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EA thread with all tools I use to make written content and why I use them, featuring:\u003Ca href=\"https:\/\/twitter.com\/Grammarly?ref_src=twsrc%5Etfw\"\u003E@Grammarly\u003C\/a\u003E\u003Ca href=\"https:\/\/twitter.com\/code?ref_src=twsrc%5Etfw\"\u003E@code\u003C\/a\u003E and \u003Ca href=\"https:\/\/twitter.com\/hackmdio?ref_src=twsrc%5Etfw\"\u003E@hackmdio\u003C\/a\u003E\u003Cbr\u003EGPT-3 by \u003Ca href=\"https:\/\/twitter.com\/OpenAI?ref_src=twsrc%5Etfw\"\u003E@OpenAI\u003C\/a\u003E\u003Ca href=\"https:\/\/twitter.com\/excalidraw?ref_src=twsrc%5Etfw\"\u003E@excalidraw\u003C\/a\u003E\u003Ca href=\"https:\/\/twitter.com\/StableDiffusion?ref_src=twsrc%5Etfw\"\u003E@StableDiffusion\u003C\/a\u003E and\/or \u003Ca href=\"https:\/\/twitter.com\/midjourney?ref_src=twsrc%5Etfw\"\u003E@midjourney\u003C\/a\u003E\u003Ca href=\"https:\/\/twitter.com\/photopeacom?ref_src=twsrc%5Etfw\"\u003E@photopeacom\u003C\/a\u003E\u003Cbr\u003E\u003Cbr\u003E\uD83E\uDDF5\u003C\/p\u003E&mdash; Worms (@MarcoWorms) \u003Ca href=\"https:\/\/twitter.com\/MarcoWorms\/status\/1581997917023281152?ref_src=twsrc%5Etfw\"\u003EOctober 17, 2022\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-56429").innerHTML = tweet["html"];</script><p></p>
<p>I recommend passing GPT text through <a href="https://app.grammarly.com/">Grammarly</a> to remove all typos and useless words. Also, you will hardly be able to make GPT generate a huge text that is useful, it is recommended to generate a macrostructure of sections first and then generate each individual part separately. For large text/code you will have to come up with creative ways to stay within the GPT API token limit (about 3k words on input+output per request)</p>
<p>I made this article because I’m contemplating all these use cases in an Open Source UI I’m making for people that need to either generate docs or understand undocumented code. So while I work on the UI that will take a bit longer to be ready I want to open the process and prompts so anyone can iterate them, I would love to hear back from anyone experimenting with LLMs + tech writing!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/4644/1*RA21P9huJHXXr8xevmzQqg.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">DocuDroid UI preview</figcaption>
</figure>
</div>
<section id="use-cases" class="level2">
<h2 class="anchored" data-anchor-id="use-cases">Use cases</h2>
<p>You can try it yourself by using GPT on:</p>
<ul>
<li><a href="https://chat.openai.com/chat">ChatGPT</a>: free, but no API and many downtimes</li>
<li><a href="https://beta.openai.com/playground">GPT-3 Playground</a>: paid, but best option for manual exploration</li>
<li><a href="https://beta.openai.com/docs/api-reference/introduction">GPT-3 API</a>: paid, but best option for automations</li>
</ul>
<section id="review-text-for-copy" class="level3">
<h3 class="anchored" data-anchor-id="review-text-for-copy">Review text for copy</h3>
<p>When I first started DocuDroid I wanted it to be simple automation on GitHub that reviewed text being added. I worked out fine, but I realized there are some issues with this flow:</p>
<ul>
<li>Asking GPT to review for copy errors would sometimes return that there are no errors in text with obvious errors</li>
<li>GPT can take bias in a random reviewing direction, so if you specify the bias it helps with consistency</li>
</ul>
<p>turns out that reviewing text can be done from many points of view, so I incorporated this in DocuDroid as “reviewers personalities”. Each text is sent to many reviewers, and you get back many times of different reviews, plus this helps catch the obvious error that would sometimes pass by making only 1 request since each reviewer has a separate request for their review.</p>
<p>A quick example of 2 different personalities reviewing the same text</p>
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/3300/1*hOaB87YH7U_9miq9ERcs8g.png" class="img-fluid"></p>
<p>My prompt to review a text is the one below, and for each personality, you send a separate request: (the new line at the end is intended)</p>
<pre><code>######## REVIEW INSTRUCTIONS

personality text description goes here

########  TEXT TO REVIEW, IGNORE LINKS AND CODE BLOCKS, PRESENTED AS A GIT DIFF, FOCUS ON THE ADDITIONS

text to be reviewed goes here

########  YOUR REVIEW, AS A - MARKDOWN LIST</code></pre>
<p>Here are some example personality texts for review instructions, I generated them using GPT too!</p>
<p><strong>😐 Balanced Ben:</strong> &gt; You are a professional copywriter with a balanced and objective approach. Review the following text for both strengths and weaknesses, and provide a list of specific suggestions for improvement. The goal is to produce a well-rounded and high-quality document, so consider all aspects of the text in your review.</p>
<p><strong>📜 Linear Linda</strong> &gt; You are a professional copywriter who values smooth transitions and a logical progression of ideas. Review the following text for opportunities to improve the top-to-bottom linearization, and provide a list of specific suggestions for improvement. The goal is to create a clear and rational flow of ideas from one concept to the next, so consider ways to improve the transition between ideas.</p>
<p>You can find an example with many personalities reviewing it <a href="https://github.com/MarcoWorms/DocuDroid/pull/110#issuecomment-1361372106">here</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/3344/1*ZDPxWI9IRoL_q2P6dUZNCw.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Docudroid Showcase: <a href="https://github.com/MarcoWorms/DocuDroid/pull/110#issuecomment-1361372106">https://github.com/MarcoWorms/DocuDroid/pull/110#issuecomment-1361372106</a></figcaption>
</figure>
</div>
<p>You can also just ask GPT to fix an existing text:</p>
<pre><code>paste text here

######## remake the above fixing any copy errors</code></pre>
<p>Here is an example improvement made like the above: <a href="https://github.com/yearn/yearn-devdocs/pull/298/files">https://github.com/yearn/yearn-devdocs/pull/298/files</a></p>
</section>
<section id="review-a-git-diff" class="level3">
<h3 class="anchored" data-anchor-id="review-a-git-diff">Review a GIT DIFF</h3>
<p>Much like reviewing a text, you can use it to review a diff (file representing the difference between 2 files). Since a diff contains all lines removed and added in a Github Pull Request it can make for interesting reviews taking into context what was removed, this is especially useful for code reviews.</p>
<ul>
<li>Checkout ChatGPT Action project that sends the full diff to ChatGPT for review: <a href="https://github.com/kxxt/chatgpt-action">https://github.com/kxxt/chatgpt-action</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/3780/1*uxZ2zDCAiskNnNnffQYgnw.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Showcase: <a href="https://github.com/kxxt/chatgpt-action/pull/12#issuecomment-1340991620">https://github.com/kxxt/chatgpt-action/pull/12#issuecomment-1340991620</a></figcaption>
</figure>
</div>
</section>
<section id="generate-diagrams-powered-by-mermaidjs" class="level3">
<h3 class="anchored" data-anchor-id="generate-diagrams-powered-by-mermaidjs">Generate diagrams powered by MermaidJS</h3>
<p>I am a huge fan of drawing diagrams and flows for people to understand concepts, I want DocuDroid to give you a handy UI for generating diagrams and previewing in real-time, but today you can generate on the GPT playground and use HackMD for preview. To do that paste the mermaid code in HackMD using this block:</p>
<pre><code>```mermaid
CODE_GOES_HERE
```</code></pre>
<p>There are a couple of ways you can do GPT make the diagrams:</p>
<ul>
<li><p>Just ask for a diagram with no examples at all</p></li>
<li><p>Send it a text/code and ask for a diagram of it</p></li>
</ul>
<p>The most important thing is asking it to somehow <strong>“Output as code for a MermaidJS diagram”</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/4116/1*yrha3qRL_11PZDo3f78nHA.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">A finite state machine behavior for a NPC that stands idle and attacks if player is in range. Output as code for a MermaidJS diagram:</figcaption>
</figure>
</div>
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/5724/1*ukP9eB2s8oeRf4TvQapfkg.png" class="img-fluid"></p>
<p>The above was an example that did not send initial code or text and relied on GPT internal knowledge, but you can also do it for your own text/code:</p>
<pre><code>######## Explain briefly what your code/text does here or just remove this line

text or code goes here

######## The following is hackmd MermaidJS code for a diagram explaining the above:</code></pre>
<p>Here is an example I just did:</p>
<pre><code>######## The following is a smart contract template for creating a new yield strategy at Yearn Finance:

pasted a huge code here that is a template to make a strategy at yearn, taken from here: https://raw.githubusercontent.com/yearn/brownie-strategy-mix/master/contracts/Strategy.sol

######## The following is hackmd MermaidJS code for a diagram explaining the above:</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/2740/1*Kobd_EhviZz9Lb4ZS1Qx6Q.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">pasting huge code + asking for diagram</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/5060/1*nOWgJ6C9fGFUwtjlxzcOYg.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">this example output is not very useful but just to showcase that you can try it</figcaption>
</figure>
</div>
</section>
<section id="document-existing-code" class="level3">
<h3 class="anchored" data-anchor-id="document-existing-code">Document existing code</h3>
<p>Just like generating MermaidJS diagrams you can ask it to kickstart the actual documentation for existing code. This is extremely useful if you don’t know how to read the code because GPT is very capable of dealing with existing code and will linearize for you a story of exactly what happens step-by-step.</p>
<pre><code>######## The following is a piece of code that does EXPLAIN_HERE_USEFUL_CONTEXT

paste code here

######## Write technical documentation that explains the above code funcionality, usage, and examples</code></pre>
<p>I tested this flow and it has helped me a lot to generate docs for a task I wanted to do last week. Basically, I had a new piece of code that Yearn was gonna deploy and needed documentation, so I pasted the contract’s code + readme on the template above and asked it to generate docs.</p>
<p>I will update this part with the production links when it’s live, but here is an impressive part GPT made almost by itself I just had to pass it on Grammarly to improve the text. This is WAY clearer than reading the code IMO to get a quick grasp of what’s going on, even if I can’t guarantee all details are right it helps me get closer to understanding it overall.</p>
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/3952/1*13LT2ouIIEJFQoMCjyVggA.png" class="img-fluid"></p>
</section>
<section id="generate-complex-markdown-structures-ie-tables" class="level3">
<h3 class="anchored" data-anchor-id="generate-complex-markdown-structures-ie-tables">Generate complex Markdown structures (ie: Tables)</h3>
<p>Making manual Markdown tables is one of the most awful experiences ever for a writer, LLMs are a godsend here because they are very consistent in getting this right and it’s a very flexible feature since you can ask it to structure the table however you like. For example, I will blatantly steal the GPT-3 default “parse unstructured data” example and make it output a markdown table to be previewed in HackMD</p>
<pre><code>paste text here

######### a Markdown table of the text above EXPLAIN_DETAILS_HERE</code></pre>
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/4520/1*Vh8AH-QUuDbQmb05I4NYLA.png" class="img-fluid"></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/2520/1*NmYr0jB_no2Pk542gMMefA.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">preview on HackMD</figcaption>
</figure>
</div>
</section>
<section id="summarize-text" class="level3">
<h3 class="anchored" data-anchor-id="summarize-text">Summarize text</h3>
<p>I’ve used this more to learn than to generate content, it’s useful to grasp the macro concepts of a huge wall of text before diving into it. This can actually go very far because you can not only summarize text but also mold the output form like “summarize for a tweet” for something short or “summarize like a bible passage” for something fun</p>
<pre><code>paste text here

######## Summarize the above text for a tweet</code></pre>
<p>With this exact flow, I came up with this test project where I summarized crypto-related news as if it were biblical passages in the size of tweets. there is a lot you can do with the prompt here, experiment around!</p>
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/2376/1*LGZlty15Vrj04ugf6OqFdA.png" class="img-fluid"></p>
</section>
<section id="find-alternative-words-synonyms-antonyms" class="level3">
<h3 class="anchored" data-anchor-id="find-alternative-words-synonyms-antonyms">Find alternative words (synonyms, antonyms)</h3>
<p>Sometimes you want to avoid repeating words, or you want to find one that can sound better. LLMs are your ally, there are useful google websites, but things like GPT can go beyond and understand the context you want to use it.</p>
<p>Here is an example where I pasted text from Yearn’s documentation and asked it for suggestions to replace a word, then I made a second request asking it to pick one and explain why:</p>
<p><img src="https://marcoworms.github.io/blog/posts/llm-writing/https:/cdn-images-1.medium.com/max/3356/1*9J99u7w1y0R0Gbukj_7-Nw.png" class="img-fluid"> &gt; # Have fun writing in the age of the machines!</p>


</section>
</section>

 ]]></description>
  <category>english</category>
  <category>tech writing</category>
  <guid>https://marcoworms.github.io/blog/posts/llm-writing/index.html</guid>
  <pubDate>Tue, 27 Dec 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>The Keys to the Nietzschean Castle</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/nietzsche/index.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/nietzsche/https:/cdn-images-1.medium.com/max/4000/0*u6OlY4h5TkUsy_zM.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">All Images were made with <a href="https://medium.com/@marcoworms/conjuring-images-with-stable-diffusion-20f3e000a837">Stable Diffusion</a></figcaption>
</figure>
</div>
<p>This text is a reduction of 5h audio recordings of 3 classes from <a href="https://bv.fapesp.br/en/pesquisador/88753/clovis-de-barros-filho">Prof.&nbsp;Clóvis de Barros Filho</a> that serve as an introduction to the Nietzchean thoughts and help you dive into the original books by yourself.</p>
<blockquote class="blockquote">
<p>Translator Note: Direct quotations to Nietzsche lack source and proper translation, I did what I could with the material I had. If you find any reference to something unreferenced or a better translation to a concept please send it to me so I can improve this text!</p>
</blockquote>
<blockquote class="blockquote">
<p>I did not create any of the ideas and opinions laid here, my objective is to make Prof.&nbsp;Clóvis work more accessible to everyone so anyone can form their own opinions about it. I personally find many parts of Nietzsche’s ideas impressive, but I’ll refrain from giving my opinions and leave the text to speak for itself.</p>
</blockquote>
<p>This journey identifies what Nietzsche thinks about morals. To do this one needs to dive into many of his books, because, unlike other authors, Nietzsche did not segment his thoughts into clean separate books or chapters. To facilitate the journey in reading his original work, we will learn about key concepts (which Prof.&nbsp;Clóvis calls “keys of the castle”) to understand this author and some jargon essential to understanding the original work. We will explore the following:</p>
<ol type="1">
<li>Nihilism</li>
<li>The Death of Gods</li>
<li>Amor Fati</li>
<li>Will to Truth</li>
<li>Genealogy</li>
<li>Eternal Recurrence</li>
</ol>
<section id="disclaimer-chaos-ahead" class="level3">
<h3 class="anchored" data-anchor-id="disclaimer-chaos-ahead">Disclaimer: Chaos Ahead</h3>
<p>From the formal perspective, it’s tough to interpret Nietzsche because every book is about everything, making it hard to extract a specific idea because they are always tightly coupled. When dig into one, you will quickly learn about ideas from different subjects.</p>
<p>Nietzsche didn’t write texts like the academics taught us to do. His thoughts are transmitted through “aphorisms” which are short phrases, a paragraph, sometimes a page, and they are thrown at you in a way that feels random.</p>
<p>Why does he write like that? This manner of expression is very aligned with the content of his philosophy. He is part of a group of thinkers that believe that whatever comes to mind is a small, insignificant, subproduct of your entire psyche.</p>
<p>He is convinced that our psyche is infinitely larger than the things that pass by our head. These things that come into our head (that we call consciousness) work like a spotlight: imagine a spotlight illuminating a single spot in a vast sea. This spotlight can move, and when it does, it shows a small different part of the surface. When the spotlight moves away from something, it doesn’t mean it has vanished. You are the sea, and what is being shined upon by the spotlight (the ideas coming to your mind right now) is just a part of a much bigger organism (the sea).</p>
<p>But if you are the sea, then who moves the spotlight around, deciding what is coming up in your mind right now? It is not you, because you are the sea, and what you are right now is what the spotlight (that you don’t control) is illuminating. In Nietzsche, what drives the spotlight is called your “Will to Power” or also called “Essence” and in Portuguese “Will to Potency”</p>
<p>So your thoughts are connected with your feelings, and your feelings are connected with your oscillations of potency. It’s not the conscient “me” that controls what “I” think. The conscient “I” is a result of an inconsistent process. This means that you don’t really control what comes into your head, you are not sovereign, or as Freud would put, “The ego is not master in its own house”. This is the basic premise to understand why Nietzsche writes the way he writes, because he writes the exact opposite way we were all taught to write: when we studied in school the teacher taught us to make a draft, organize thoughts, then write a final piece. Nietzsche doesn’t do anything after the “draft” part, because the organizing process strips ideas from their raw and chaotic form to mask them into a logical/rational way of thinking, and he just wrote things as they come to his head.</p>
<p>But, finally, why would he do that? Because he doesn’t have the pretension of writing anything that will be true for everyone, it is just what comes to his head. And every post-modern author after Nietzsche has this similar thought line. The final result is that his work’s presentation is aligned with its contents.</p>
</section>
<section id="into-the-mainstream-reading-order" class="level3">
<h3 class="anchored" data-anchor-id="into-the-mainstream-reading-order">Into the Mainstream &amp; Reading Order</h3>
<p>Nietzsche was born 1844 and died in 1900. His work entered the mainstream in the period after 1950s. He has many books, with the most famous one being “Thus Spoke Zarathustra”, but to better absorb the content it is recommended to leave this one for last as it is by far the most deliriant and metaphorical one out of all his books. All books are crazy by usual standards, but if you follow this order you will be able to deal with the less deliriant thoughts first, so it is recommended to follow:</p>
<p><strong>1:</strong> Twilight of the Idols <strong>2:</strong> Beyond Good and Evil <strong>3:</strong> Genealogy of the Morals <strong>4:</strong> Gay Science <strong>5:</strong> […] <strong>Last:</strong> Thus Spoke Zarathustra</p>
</section>
<section id="key-concept-1-nihilism" class="level2">
<h2 class="anchored" data-anchor-id="key-concept-1-nihilism">Key Concept #1: Nihilism</h2>
<p><img src="https://marcoworms.github.io/blog/posts/nietzsche/https:/cdn-images-1.medium.com/max/4000/0*CfdhBBiMME0xXaOm.jpg" class="img-fluid"></p>
<p>Nietzsche uses the word “Nihilist” in every book, so it is tough to understand them if you don’t know what it means. And not only is this concept essential, but Nietzsche also uses the word “Nihilism” to suggest the opposite of how common sense thinks of it, <em>but he won’t tell you that!</em> It is up to you to find that out, so absorbing this before reading will fast-track your learning and make it less confusing:</p>
<section id="common-sense-meaning-of-nihilism" class="level3">
<h3 class="anchored" data-anchor-id="common-sense-meaning-of-nihilism">Common Sense meaning of Nihilism</h3>
<p>The common sense meaning of Nihilism is conducting life with no set of higher values or morals, a life untied of any principle beyond the raw reality.</p>
<p>Example: Someone invites a very religious person to do group sex, and the religious person denies it because that is against their higher moral values. So in this example, there is an existential criterion that this person applies to their existence. This criterion is more valuable than life occurrences, “no matter what happens the moral value will guide the life’s conduct”. In this case, this person did not let life conduct itself, because they pulled the handbrakes so a higher value could triumph.</p>
<p>“Letting your life conduct you without pulling the handbrakes is Nihilist”, common sense would say.</p>
</section>
<section id="nietzsches-meaning-of-nihilism" class="level3">
<h3 class="anchored" data-anchor-id="nietzsches-meaning-of-nihilism">Nietzsche’s meaning of Nihilism</h3>
<p>Nietzsche’s meaning of Nihilism is conducting life WITH a set of higher values or morals, because doing this stifles your capacity to explore and learn from the real experiences life offers.</p>
<p>Example: A Christian person has principles. Christian principles. And people that have principles do not let life conduct them without pulling the handbrakes. So for Nietzsche, this person is a Nihilist, the exact opposite of the common sense meaning. Another example: A communist is convinced that everything must be about the revolution for the working class. The good life for a communist is a life that leads to the end of social classes and capitalism, and this is his principle, much like the Christian has one. So the Christian is a nihilist, the communist is a nihilist, but so is the liberal, the anarchist, the human rights activist, the democracy, the dictatorship, and anyone that lives a life believing in higher principles.</p>
</section>
<section id="so-what-does-nihilism-mean" class="level3">
<h3 class="anchored" data-anchor-id="so-what-does-nihilism-mean">So what does Nihilism mean?</h3>
<p>The “Ni” in nihilism means “negate”. Nihilism means “to negate life”. In common sense meaning it’s easy to understand what is being negated: the values. If you negate values you are negating life. But in the Nietzchian meaning, the values negate life: By choosing fictional values over life, one negates life.</p>
<p>This concept helps us understand what Nietzsche means when he writes things like In the name of heaven one sins against earth: in the name of higher values one negates the present experiences. For coherence, from now on I will use “nihilism” as Nietzsche does.</p>
<p>Plato is the first great nihilist in Nietzsche’s head: Plato talks about “the sensible and the intelligible world”. The intelligible world is built upon absolute truths, values, and inquestionable things. The sensible world is an illusion, and the reality happens in the intelligible world that we as humans can’t access, we can only access the illusion. So in Plato’s world’s view, the individual’s life is a meaningless reflection of an intelligible and inaccessible world, thus “he is a nihilist”, and the first big one! The pole-position of nihilists! He negates life and reality as is, to glorify a rational model of living, committing sins against the present earth in the name of an inexistent beyond.</p>
<p>The second greatest nihilist and “present negator” is Aristotle. Because to Aristotle, the great reference for life is the “Cosmos”. But you may think “isn’t the cosmos pretty much the real world” and the answer is no! Because this “Cosmos” is a specific version of the cosmos, more specifically Aristotle’s one, which is just another nihilistic worldview. “You are a piece in the universe machine that must act as the universe expects, and this is how you will be happy” and this view, again, doesn’t ask YOU what you think happiness is in the first place. Again, you are just a piece in an ideological system created by someone else’s head. This is yet another mental model of living that tries to enslave life. While Plato enslaves life through the world of ideas, Aristotle enslaves life through his “cosmos”.</p>
</section>
<section id="the-idols-and-the-hammer" class="level3">
<h3 class="anchored" data-anchor-id="the-idols-and-the-hammer">The Idols and The Hammer</h3>
<p>Another example of nihilism is monotheism. God is not here, but commands all life from beyond, in the realm of souls, and the best life is the one that seeks eternal life in the afterlife paradise. And again life was enslaved by a mental model that “spits on earth in the name of heavenly paradise.”</p>
<p>Man invented the ideal to negate the real, classic concept that resumes the Nietzchean interpretation of nihilism.</p>
<p>Some excerpts from Twilight of the Idols to illustrate more examples:</p>
<p>Improving humanity is the last thing I will promise. If Plato, Aristotle, Catholics, and all others are full of bullshit, what should you follow instead of them? Nothing! Don’t expect Nietzche to bring you a new idol to replace an old one, he will not do that for you. He has absolutely no truths to impose himself in the place of the ones you had before, he wants you to rethink your relationship with these truths and not just accept uncritically any idea that might enslave your life. Don’t look for something to put on the pedestal, but restructure your need for a pedestal in the first place.</p>
<p>The idols should know how much it cost them to have feet of clay, in other words, any “almighty and powerful god” has weak spots that you can hammer and it all comes down. This is why Nietzsche uses the concept of the “philosopher’s hammer” because once you possess the hammer you can break down any idol. This is the basis for the idea of “Deconstruction”, a popular term that means to show that the references for a specific notion have no fundamentals.</p>
<p>Take down the idols, this is my main activity, The invention of an ideal is the greatest lie, a curse that oppresses reality, Humanity has become false at is deepest roots, even by adoring values opposite of ones that could take us to a brighter future are other examples from Twilight of the Idols.</p>
<p>Another idol that Nietzche will beat down a lot is “equality”, there is an entire book dedicated to this called “Genealogy of the Morals” where he focuses on expliciting that people are not equal, further explored on the following keys.</p>
</section>
</section>
<section id="key-concept-2-the-death-of-gods" class="level2">
<h2 class="anchored" data-anchor-id="key-concept-2-the-death-of-gods">Key Concept #2: The Death of Gods</h2>
<p><img src="https://marcoworms.github.io/blog/posts/nietzsche/https:/cdn-images-1.medium.com/max/4000/0*FCEbTBn2PpjEc34I.jpg" class="img-fluid"></p>
<p>God is Dead is a classic phrase from Nietzsche and there is a lot to unravel from this simple yet profound choice of words:</p>
<ul>
<li>If God exists then it can’t die since it’s the most powerful being</li>
<li>If God doesn’t exist then it also can’t die since it never existed</li>
</ul>
<p>So funny enough Nietzsche makes fun of both the believers and non-believers with this phrase, but what did he mean by it then? Nietzsche wants to denounce and kill a way of thinking, specifically, the “religious thinking structure”. This structure defines the line between good and evil. The lines between heaven and hell. The city of men and the city of god. The conviction that there is a realm beyond better than this one, one so much better that you should restructure your current living experience to have a better time there. What is being denounced is this way of thinking, Nietzsche is declaring that we as humans were able to transcend this way of thinking and living and move on to new ways that don’t rely on the “shadows that terrorized Europe for centuries, and are now gone because god is dead” as he would put.</p>
<p>Every moral philosophy that presents us with a dichotomic view that splits between good and evil, is dead, along with god, because it is the idea of god that allows this view to exist in the first place. If you kill god, everything else crumbles. Along with god, all political ideals die: the society free of classes, the poet society, Atlantis, Eldorados, and any other bullshit man has invented to try to cope with the real world.</p>
<p>Another way to see this concept is that Nietzsche will denounce every “metaphysical crutch”, or in other words, ideals that you lean into to lessen your existential pain. People will fabricate an ideal and lie to themselves that when the fabricated idea happens in real life only then something very nice will happen, whether you need to die (like in monotheistic religions) or not (in communism or anarchy) is just a detail. The society with no classes is just like the paradise, an utopia, a romantic distraction that wastes your real-time energy.</p>
<p>We who defend another type of faith, we who think of democracy not only as a degenerate way to organize but also as a decadent form of humanity, reduced to mediocrity, where will we deposit our hopes? This phrase may shock some people because of how it talks about democracy, but let’s comprehend the underlying criticism: Nietzsche argues that democracy stems from a concept that does not exist in reality, that is the concept of equality. The idea that every vote is worth 1 presupposes that everyone is “worth” 1. Trying to put this another way: “To whom it interests a form of political organization where every person is worth 1”? Imagine the best and worst sports players of your favorite sport. Now let’s create an organization to decide for the future of this sport. To who it interests that each vote is worth 1? To the few best or the many worst? According to Nietzsche, and he is coming from a place where he clearly thinks some people are more excellent than others, there are few awesome people and many mediocre ones. So in a system where everyone is worth 1 like in a democracy, he argues this is where the mediocre people thrive &gt; Prof.&nbsp;Clóvis reinforces that this is the Nietzsche view, not Clóvis. Translator’s Note: Everyone is free to disagree with the above or any other idea. And just a reminder, none of these ideas has the intent to improve the world or to impose a new absolute truth, these views are highly conflicting with many modern world views when framed like that</p>
<section id="will-to-power" class="level3">
<h3 class="anchored" data-anchor-id="will-to-power">Will to Power</h3>
<p>The question “to whom it interests that I believe in this?” is something Nietzsche would recommend you consider to find out if an idea benefits you.</p>
<p>If Nihilism negates life and is a harmful way of living, what is a way of living that affirms life for Nietzsche then? If we want to kill good and evil, why does Nietzche believe some people are better than others? How is “better” not just a version of “good”?</p>
<p>Nietzsche would say that real-world energy is called “Will to Power” when acting upon living beings. Spinoza would call it “Potency to Act”. Schopenhauer would call it “Will”. And Prof Clóvis would call it “Horniness to Live”. And what characterizes a being with Will to Power to Nietzsche is the constant search for MORE Will to Power. Vital energy wants MORE vital energy. Horniness wants MORE horniness. And it will search for all conditions so that the Will to Power increases more and more.</p>
<p>For example, Prof Clóvis gives a talk to 4.000 people. And everyone stood up and clapped at the end. Well, now the professor wants 8.000 people the next time, and more, and more. &gt; Prof.&nbsp;Clovis said what he actually wanted to do was buy a car and ride to the mountains to live a peaceful life, but then he wouldn’t have money in 6 months. (Translator’s Note: Brazillian professors salaries are bad)</p>
</section>
<section id="activity-and-reactivity" class="level3">
<h3 class="anchored" data-anchor-id="activity-and-reactivity">Activity and Reactivity</h3>
<p>We are energy searching for more energy, but that doesn’t mean we are always finding it, at many times we collide with opposite energy forces. These forces, according to Nietzsche come in two types: active and reactive.</p>
<ul>
<li>The <strong>active</strong> force exists on its own</li>
<li>The <strong>reactive</strong> force exists to oppose a pre-existing active force</li>
</ul>
<p>Nietzsche would say we are all moved by active and reactive forces, in different moments one type is more prevalent than another, but the “strong” person is driven mostly by active forces while the “weak” person is driven mostly by reactive forces.</p>
<p>The most primal active force, according to Nietzsche, is art, since the artist is moved by active forces and is sovereign. The artist does what their body wants. Art in Nietzsche can be seen as anything moved by a person’s own potency.</p>
<p>An example of reactive activity is bureaucracy. Who makes rules and regulations? Is it the people that live expanding the limits of possibilities? Or is it someone wanting to stifle this first person?</p>
<blockquote class="blockquote">
<p>The professor jokes that the reactive person is reactive since they are a kid: the kid who tells on the others and makes everyone get grounded</p>
</blockquote>
<p>So in this same line of thought, who is more likely to create moral rules? A person moved by active forces or reactive ones? Evidently the reactive one, or as Prof clóvis jokes, the “Lazy Ass Syndicate”. And it works because there is no lack of lazy ass people to fill in the syndicate roles. And it works even more because the fun part of being a lazy ass reactive is that you can just unite with other lazy ass reactives and increase your power. After all, since the objective in common is to screw some active force, the active forces can’t unite because they are mostly unique. How hard is it to make a team by simply combining the best individual players? It’s very hard, much harder than uniting for a common cause to screw a single activity. The weak people can always unite, and the strong people are mostly alone.</p>
<blockquote class="blockquote">
<p>Again the professor reinforces this is all Nietzche views, not his own</p>
</blockquote>
<p>Here a student questions how this fits the democracy rant. Prof Clóvis reinforces that, within Nietzsche’s views, democracy is a system controlled by reactive forces, therefore by the “weak” people. This idea is discomforting because we were raised in the paradigm of Christian equality. When Nietzsche attacks the Democracy he is attacking Equality and therefore the “religious structure of thinking”.</p>
</section>
</section>
<section id="key-concept-3-amor-fati" class="level2">
<h2 class="anchored" data-anchor-id="key-concept-3-amor-fati">Key Concept #3: Amor Fati</h2>
<p><img src="https://marcoworms.github.io/blog/posts/nietzsche/https:/cdn-images-1.medium.com/max/4000/0*Gg1lEmPkFeg4gnrt.jpg" class="img-fluid"></p>
<p>“Amor Fati” is the Nietzschean concept of loving the world as it is. It is not about tolerating the world, it’s about loving the world as is. It’s not just loving a specific part, but the whole reality. Because if you decide what part you love and what part you don’t you have succumbed to nihilism.</p>
<p>“Oh but I want the world to be like XYZ” well then you don’t love it as it is now, so that is not “Amor Fati” by Nietzsche’s standards. Nietzsche is clearly not like Che Guevara, or any other idealist. Nietzsche is an anti-idealist.</p>
<p>You can roughly split philosophy in 2 groups:</p>
<ul>
<li>Group 1 recommends that a good life is a life engaged in the process of transforming the world (IE Marx)</li>
<li>Group 2 recommends that you conciliate with reality (IE Stoics, Spinoza, Nietzsche)</li>
</ul>
<p>Depending on your life context you might lean more into one or another</p>
<p>Nietzsche’s view (that is in Group 2) on why we should focus on the present go back to the stoics, especially when they say that there are 2 great evils for man: the past and the future</p>
<p>The past is a time that doesn’t exist in the world, it’s what St.&nbsp;Augustine would call “Soul Time”, it exists only for us. Past is memory. Past is actually present because when you remember things you are doing in the present time. Our memories are from the present and not from the past.</p>
<p>The future is also inexistent and it happens in the present. To think of the future is to create narratives in your head that don’t exist today.</p>
<p>So the world is just the present, and the rest is imagination. But why are past and future “bad”? Because they produce real consequences over life (a form of nihilism).</p>
<p>When you spend time thinking of what happened in <strong>past</strong>:</p>
<ul>
<li>If the past is good you are fueling <strong>nostalgia</strong>, which is just a coping mechanism for what’s happening in the present.</li>
<li>If the past is bad you are fueling <strong>guilt</strong>. “I should have done XYZ”.</li>
</ul>
<p>When you spend time thinking of the <strong>future</strong>:</p>
<ul>
<li>Suffering in anticipation of a bad future won’t help you in the present. Also known as <strong>fear</strong>.</li>
<li>Thinking of a better future fuels one’s <strong>hope</strong>.</li>
</ul>
<p>Nietzsche is saying that nostalgia, guilt, hope, and fear are all negative places to rest your thoughts. The more you think about them, the more you will be affected in the present by “Soul Times” that don’t exist. Your present life is being fragilized or in other words: unfocused.</p>
<p>A life with no focus leads to no intensity of experiences. So thinking of the past and future removes intensity from the present. The intense life presumes alignment between the present body and the present mind. And not just any sort of alignment, is like a love-relationship alignment. Therefore it’s a search for reconciliation with reality.</p>
<p>Whoever is guided by hope is being guided by a feeling that has 3 characteristics:</p>
<ul>
<li><strong>Ignorance</strong>: when you wait for something you have no assurance that the thing will happen, so you live partly in ignorance. When you are not ignorant about whether something will happen you don’t create hope.</li>
<li><strong>Impotence</strong>: if you could make it happen right now you wouldn’t need hope, so having hope means you are powerless about the outcome.</li>
<li><strong>Chastity</strong>: hope is not joyful. Joyfulness is about presence, hope is a type of desire and desire implies something is missing.</li>
</ul>
<p>In this line of thought, the Nietzschean view of “wise” is aligned with the stoics. Wise is searching for how to live. This view of wise opposes common sense where a wise person “knows a lot”. The Nietzschean wise may or may not know college-level math, but this doesn’t make them any wiser, what does is the interest in searching and discussing how to live a good life, which means reconciling yourself with the present reality, as is, no changes. Love for presence and present interactions. The opposite of loving an ideal, therefore anti-ideal, since ideals are about what is not in the present.</p>
<blockquote class="blockquote">
<p>Prof Clóvis makes an analogy of how often it is for someone to love a version of their partner that they wish that existed, and not actually love the real present one. And it is very common that the ideal version doesn’t match the present version. The proof of this is when your partner does something and you get mad at them, because what they did has broken your illusion, and with every new move that breaks more the illusion it gets more clear to you that you might not love them. The solution is to love people as they are and not the ideal version.</p>
</blockquote>
<blockquote class="blockquote">
<p>A joke example the Prof.&nbsp;makes is: imagine you find out your loved one has an affair with another person and you didn’t know. By Nietzsche standards, you should now love the partner MORE, because you know more about who they are in present. This seems crazy by usual standards, but the reflection is, if you get pissed off with your partner it means the object of your love is not the partner, but the ideal version on your head that you think only loves you, and this version of them doesn’t exist. The one that exist might love you, but what brings them joy is another person. Loving your idea of that person, in the extreme limit, doesn’t even require the person to be there present with you.</p>
</blockquote>
<p>An excerpt from Buddhist writings: “don’t forget that the moments here and now and the people here and now are the most important of your life, because they are the only real ones”. It’s the same concept of reconciliation with the present world, made in the present world, which Nietzsche called “Amor Fati”.</p>
<p>Connecting all things, what Nietzsche means is that if you don’t deconstruct the idols, you cannot reconcile with the world as it is.</p>
<blockquote class="blockquote">
<p>Prof.&nbsp;Clóvis jokes that “if you think that your professor must be from Harvard to be good you can’t love the professor that is just a person like you (reality)”. “if you have in your head that it is only cool to live in a specific place then it is impossible to love the place you live”. “if you think the only job that will be good is in a specific place it’s impossible to love the place that you currently are”.</p>
</blockquote>
<p>The love for real is the deconstruction of the ideal.</p>
<p>While the idols haven’t been deconstructed, we are victims of an illusion. The illusion that living in New York will be better. That good life is about having a top-model body. Slave of the illusion that the good life presupposes having an expensive white car, slave of the illusion of thinking that to be a good professor you must teach at a “top ranked” university. While the idols haven’t been deconstructed, we are slaves of illusions! What is the chance that the world will be like the one someone idealized? None, because if there were any, it would be the reality and not an ideal. So the person that waits for the real to become the ideal will never love anything.</p>
<p>“Do not expect from the world more than it can give.” (Prof Clóvis says his father used to say that and it is very Nietzschean)</p>
<p>An excerpt from “Ecce Homo”: my formula for expressing what is great in man is amor fati, do not wish for things beyond what they are, neither forwards or backwards and continues not even in centuries and centuries throwing shade at religion, it’s not about tolerating the inevitabilities, it’s about loving them, and way to love is distancing from idealism</p>
<blockquote class="blockquote">
<p>The Prof.&nbsp;tells the students to read “Thus Spoke Zarathustra” prologue.</p>
</blockquote>
</section>
<section id="key-concept-4-will-to-truth" class="level2">
<h2 class="anchored" data-anchor-id="key-concept-4-will-to-truth">Key Concept #4: Will to Truth</h2>
<p><img src="https://marcoworms.github.io/blog/posts/nietzsche/https:/cdn-images-1.medium.com/max/4000/0*4zWn_Gipi8Aj7A1u.jpg" class="img-fluid"></p>
<p>The “Truth” is searched for by philosophy and science. The common conception of truth is the correspondence between “what the world is” and “a speech about it that intends to describe it as it is”. To Nietzsche, the “truth” is the spearhead of nihilism. An idol like any other. If the search for truth is not part of real life, then why do people do it so much? And why do we expect from people to morally abide by it?</p>
<p>“The truth” is a very well-polished metaphysical crutch. The way to emit “a truth” happens through words and speech. So the one that believes in “a truth” believe in some correspondence between discourse and reality. Therefore one believes that words can correspond to reality. This premise for Nietzsche is absurd since reality can’t be translated into words. So you wrote a thesis? <em>fart sound made with mouth</em>, <em>silence</em>, know that the world will follow one path and your thesis another, and if you call “the truth” any equivalence between your thesis and the world <em>fart sound again</em> it’s completely idiotic.</p>
<p>A simple example: “the banana is on the table” might seem like it describes reality, but digging deeper, there is no banana equal to another because nothing is equal to another thing in the world, equality is a mathematical operation and exclusively an intellectual resource, it is not an empirical resource, it can’t be used to associate things in the real world, it can only be used in math. Back to the banana, if no banana is like another, and I intend to describe the world “as is” then the conclusion is that each banana should have an exclusive name, which would make communication impossible. We as humans agree that we can call any banana “banana” so we can communicate. But going even deeper, how much time was the banana left on the table? Is today’s banana the same as tomorrow’s? So we would need exclusive names for each point in time for each instance of <em>bananicity</em> for every banana just to try to depict “the truth as it is in the real world”.</p>
<blockquote class="blockquote">
<p>Prof.&nbsp;Clóvis jokes “I had to give names to each banana and numbers for their position in time so I could precisely say I ate Georgia 8 and Stefania 17 for breakfast”</p>
</blockquote>
<p>The point is that when we agree on just “banana” we give up on the premise of making this an accurate description of reality. Words cannot describe life because in life everything ceases to be, while words have the pretension to describe everything as they are. So the words stay and the banana rots. There is a fundamental problem: for words to describe the world as-is, we would need infinite words to describe reality and communication would be impossible. Truth is about finding relations between speech and reality, which is impossible because a millisecond after you describe the world it has already changed. There is a mismatch between reality and what is described by words.</p>
<blockquote class="blockquote">
<p>Prof Clóvis comments that his name is Clóvis despite being his young dumb version or his adult dumb version, the idea of name is against reality since it implies it is the same when he has transformed, so “Clóvis” doesn’t actually mean nothing, because if it did it would only work for one instance.</p>
</blockquote>
<p>People seek the truth. Why? Because the truth stands still, while life goes on. We have a psychological need to pull life’s handbrakes for not tolerating it as is. Because reality is impermanent, and things, in reality, will always cease to be, and what we do is search for a truth, a handbrake to hold on to. Fun fact: every god in existence is “eternal”, the same concept of the handbrake. The world can move on forever, god will be here! And so does math! So who loves these concepts? The people that don’t see that nothing in life can be translated to numbers and that everything is flowing, so the person is desperate and says “NO!” and pull all the handbrakes to create a safe place where in this place we think we have control. Because in the real world nothing is controllable because when you try to catch it, it has already become something else. There is a psychological tendency to transform the world into something that it isn’t because the existing world has no truths.</p>
<p>So the truth is an illusion and everybody plays this game, I say I am something you say you are another thing, nobody is actually something but everyone is playing the same game. The truth game. Because it tranquilizes us. A person that understands this concept and accepts reality is what Nietzsche calls an “Übermensch” or “Beyond the Man”.</p>
<p>This line of thought is powerful and is part of what made Nietzsche become so reverenced, and it is the foundation for post-modernism. The will to truth is our will to pull the handbrakes because we can’t handle the traffic from life. A metaphysical crutch by excellence. A search for eternity in a space of fleetingness. A search for solitude in a space of fluidity. The unsustainable lightness of being. When you stop to look it’s not the same anymore.</p>
<p>What is legitimate knowledge by Nietzsche’s standards, if the truth is meaningless? Genealogy.</p>
</section>
<section id="key-concept-5-genealogy" class="level2">
<h2 class="anchored" data-anchor-id="key-concept-5-genealogy">Key Concept #5: Genealogy</h2>
<p><img src="https://marcoworms.github.io/blog/posts/nietzsche/https:/cdn-images-1.medium.com/max/4000/0*bGE6quzvjPPdiP_L.jpg" class="img-fluid"></p>
<blockquote class="blockquote">
<p>Genealogy means: a line of evolutionary development from earlier forms</p>
</blockquote>
<p>What comes to our mind is the smallest and worst part of our psyche. That is the tip of the iceberg. If you think something good came into your head, know that there are parts of your psyche that are even better. You are much ampler than the thought in your head. What you think and don’t come to your mind is called “Unconscious”. Imagine if all your thoughts were on the floor and your consciousness is a spotlight shining on them and moving (much like the sea example in the disclaimer section), your unconsciousness will still retain knowledge and think outside of this process! A quick example: when someone asks you something you know but don’t remember it at that exact time, and then out of nowhere “AHA!!” you remember now! You didn’t unlearn and learn it very fast, but rather your unconscious knew it and eventually the spotlight reached it.</p>
<p>something think inside me. You are not the master of your thoughts. Thinking is a body activity that transcends conscious control.</p>
<p>consciousness is the smallest and worst part of what an individual thinks therefore unconsciousness is essential.</p>
<p>When Nietzsche talks about genealogy, what matter is: “why did you think something?” or “where did this thought come from?”. Genealogy is the forces behind the thought that came into your head — the origin of a thought in you. Imagine you lie on a couch and a psychoanalyst is behind you saying you to tell what is in your head, this is what psychanalysis call “free association of ideas”, this is like trying to understand what is happening in real-time to understand someone’s psyche better. What matters to Nietzsche is who is moving the spotlight? It is not you. At this exact time, your body organs are involuntarily doing things, your brain is exactly like that, you are watching your thoughts as they appear on you. If you said something, was it “you” that said it? Both yes and no are correct answers because it did come from your sum of forces, but there is no “I” articulating this process.</p>
<p>Imagine I (you, but in first person) will be interviewed for TV and someone asks me something. There is no process of I think, then I process, and then I speak. What happens is that something is thinking inside of me while my mouth is enunciating whatever comes to mind. And “I”? There is no “I”! Just like you don’t control internal body organs you don’t control the brain, it just spews things uncontrollably, so there is no “I” that thinks of these things. “There is no I” screws 90% of what we think because most things we think start with “I”. If there is no “I” isn’t Prof.&nbsp;Clóvis at this moment giving a class? No, he is watching himself speak, there is no “I” designing things to say, what exists is forces that produce thoughts just like there are forces that digest food in your body.</p>
<p>Some forces make blood circulate and some forces make thoughts come into your head, and you are watching this process in first person, both what is being thought and what is being said. It’s easier to realize this when you have to produce a powerful speech and you catch yourself speaking non-stop. There is clearly no process behind just “spitting thoughts as words” and you even get impressed by watching whatever you produced in this state, because it doesn’t even look like what “you” would have produced, that is the entirety of your body speaking. It’s your body moved by vital forces spewing symbols. There is no control. These vital forces is what Spinoza called “God”.</p>
<p>“There is no I” is a core concept to grasp and better read this type of thought. Marx: “What comes into your head is ideology and ideology doesn’t come by itself, there is an unconscious collective that is determined by forces and relations of production” Freud: “What comes to your head is the tip of an iceberg that you don’t control and is not conscious about”. But between Nietzsche, Marx, and Freud views there are fundamental differences. When you go to a psychanalytical office and they start to speak:</p>
<ul>
<li><p>A Freudian has the pretension to establish some truth with speech, “the truth of the unconsciousness that emerges in the analysis”. Hence, the analyst builds a grammatic that relates what is being said with what that means, and this grammatic is called “interpretation of dreams”. So psychoanalysis is a form of constructing truths on top of the unconsciousness of the people that submit themselves to this type of analysis.</p></li>
<li><p>Marxism is the conviction that sociology identify truths about what is on people’s head when it comes to ideology</p></li>
</ul>
<p>In both cases, the speech is analyzed from the perspective of a scientist. In the position of someone that knows something, the other doesn’t. And they have the advantage to connect the dots and reach “the truth”.</p>
<p>Nietzsche would say that when you analyze the world, or a speech, the interpretation itself is interpretable, and the interpretation of the interpretation is interpretable, repeating infinite times. There will always be a cave behind the cave, interpretations to infinity. Imagine a Freudian psychoanalyst giving their analysis to a patient, it ends there. To Nietzsche, it doesn’t end there, because to Nietzsche what the psychoanalyst says is the result of their vital forces, which can be interpreted by another person moved by another life’s forces, repeated to infinity. This is what Nietzsche calls “our new infinity” found in Twilight of the Idols and Beyond Good and Evil. “Our new infinity” is the fact that when we talk about the world we are simply regurgitating our vital forces, in an infinite process.</p>
<p>The speech from the psychoanalyst is not “more truthful” than the speech from the patient itself. And if a new psychoanalyst analyses the analysis made by the first psychoanalyst it would also be not “more truthful” than any. Each is just what the vital forces of each individual are resulting. Prof Clóvis’s classroom is a manifestation of vital forces, students went there thinking they would absorb truths about philosophy when in fact they are learning about what delights the professor, and that’s it. Every word is a mask for an illusion. &gt; Here are my guts in form of words — Prof.&nbsp;Clóvis</p>
<p>A characteristic found in postmodern authors is that they will always say that whatever comes out of their mouths has no pretension of being a truth, it is just what the body produced at that time.</p>
</section>
<section id="key-concept-6-eternal-recurrence" class="level2">
<h2 class="anchored" data-anchor-id="key-concept-6-eternal-recurrence">Key Concept #6: Eternal Recurrence</h2>
<p><img src="https://marcoworms.github.io/blog/posts/nietzsche/https:/cdn-images-1.medium.com/max/4000/0*fpIAN9Nml07Lt4zT.jpg" class="img-fluid"></p>
<p>An “Übermensch” is a person that accepts life as is without the support of any of the nihilist “metaphysical crutches”. An Übermensch lives a life following the anti-nihilism, which Nietzsche also calls “The Eternal Recurrence” (in Portuguese ”Eternal Return”).</p>
<blockquote class="blockquote">
<p>Translator Note some recording is lost but remember this was part of the content: A classic story from Nietzsche is a demon that shows up and asks you if you would relive the saddest moments of your life forever. If you answer “yes, I’d love that” then you have reached Übermensch.</p>
</blockquote>
<p>Another way to see this is through the Sisyphus myth. Sisyphus is always pushing a boulder to the top of the mountain just so it falls for him to push it again, forever. But what decides if Sisyphus is living a paradise dream or a hellish punishment is whether he enjoys pushing the boulder or not.</p>
<p>Morals and ethics are about thinking of good ways to live, and time is a crucial component of this process because thinking about this takes time. But we are not interested here in reflections about eternal life, because if there is eternal life it would escape any ethics. Ethics is restricted to its temporality, the one that we live in. This certainty that we must consider life in its temporality exists in many older mythologies. For example, Ulysses is taken from his home against his will to go to war, and the book Odyssey is about his return home after the war was won with his plan of the trojan horse. His regression becomes harder because he blinds a cyclops son of Poseidon right at the start. So Poseidon makes Ulysses’s journey back home very hard, and one of the obstacles was the passage through the island of Calypso, a wonderful god that offers everything to him. But Ulysses wanted to go home, and after many temptations, her final offer to him is eternity and youthfulness. Ulysses answers that he would rather live a good mortal life than a bad eternal life.</p>
<blockquote class="blockquote">
<p>Translator Note some recording is lost, but Clóvis read the following aphorism to guide this concept:</p>
</blockquote>
<blockquote class="blockquote">
<p><em>It’s on the present earth that we shall decide what deserves to thrive and what deserves to perish. Live a life you want to relive, this is the task. If you want to work then work, if you want to relax then relax, but know very well where your preferences are and don’t ever back down, the eternity of life is at stake.</em></p>
</blockquote>
<p>The Eternal Recurrence is the most popular concept from Nietzsche and the most influential of them all. There are many interpretations, which is natural and not a problem, since Nietzsche would be the last person to elect a “true” interpretation. “There are no facts, just interpretations”. The attempt to fix one truth is a demonstration of the power of one over other interpretations. The interpretation chosen here will be the one from Professor Luc Ferry.</p>
<p>The Eternal Recurrence is a criterion to evaluate life. The previous criteria evaluate if something is worth living transcend life, they happen outside life, and they are external to the living being, like we saw in the Aristotle’s “cosmos” and the Christian god. So older criteria teach us that if we want to evaluate our own life we can’t do it by ourselves but we <em>must</em> consider things external to us. For example, the Marxist criterion for a good life is a life engaged in fixing societal injustices, so it depends on you participating in things external to your life to achieve “goodness”. The issue with older criteria is that you have to live your life as someone else wants you to, and in the end, who the f* decided that we should pursue that one view?</p>
<p>There is an infinite number of models that try to say what is good, and the criteria are external to the individuals. There is no lack of people trying to sell you their model as if it was the obvious way to live. And if external criteria control your life it is the same thing as if the criteria (or whoever invented it) were dominating your life. The world of business is a world where all these ideas thrive. There is no lack of conferences with loads of people bringing a new framework that solves something in your life. The term “quality of life” is pernicious, you don’t measure a pizza’s “tastefulness”, it just tastes good. We have a quality car, not “quality of car”, we have quality experiences, not “quality of experiences”, this small “of” inverts something that made sense “my life has quality” into a pernicious thought made to try to sell you something “what’s the level of quality my life has and how can I increase it?”. There is no standard for quality. Each individual has their own perception of “this is/isn’t a quality life” and this perception may change at any moment, so there is no way to measure it. The person using “quality of life” in a speech intends to sell you their quality criterion.</p>
<p>The fun and peculiar thing about the Eternal Recurrence is that it is a criterion that does not depend on anything external to you. All other models don’t consult you to decide the “best criterion for living”. For example, Prof.&nbsp;Clóvis says he loves his work and to talk about this subject. He doesn’t do this class for the money since a public professor’s salary in Brazil is very low, he goes to class because he prefers doing that over anything else. He says that whenever someone says “a better life is one where we reduce labor time” (a very common point in his profession) he says that it would impoverish his life’s quality since he loves being in class and teaching.</p>
<p>The Eternal Recurrence will say you should live a life you want to relive. If you want to relax, then relax. If you want to work, then work. But know your preferences because every decision will echo for eternity. So the criterion it proposes is: “whenever you are going to decide something, decide in favor of what will make your life worth reliving, without regrets”. If what makes you happy is praying, then pray. If what makes you happy is painting, then paint. But know very well what you really have an appetite for and don’t back down, because the world will try to persuade you into thinking you are on the wrong path. One cool thing to notice is that by Nietzsche’s standards there is nothing evocative of appetite by itself.</p>
<p>We discussed eternity being opposed to life, so why is Nietzsche talking about eternity? Because what is eternal in this case is the wish that the present moment was eternal. The wish that id doesn’t ever end. The feeling you get when you do what you like the most, and it’s not guided by anything but your own will to do it. This is you telling yourself that what you are doing is worth reliving. It is the Eternal Recurrence of a moment in itself. You should act in ways that your life moments feel eternal. The moments don’t have to remain eternal in any future after this exact moment. What is important is that the feeling of wanting to be in this moment is eternal. This is a symptom of a well-lived life by Nietzschean standards.</p>


</section>

 ]]></description>
  <category>english</category>
  <category>nietzsche</category>
  <guid>https://marcoworms.github.io/blog/posts/nietzsche/index.html</guid>
  <pubDate>Fri, 28 Oct 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Measuring risk for DeFi yield strategies</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-defi-risks/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/5110/0*Y2Nj5A2-gC7hAlpM.jpg" class="img-fluid"></p>
<blockquote class="blockquote">
<p><em>If you struggle with the lingo for this article check our <a href="https://docs.yearn.finance/getting-started/guides/how-to-understand-strategies-descriptions">Strategy Descriptions Glossary</a> which has most of the terms used here explained.</em></p>
</blockquote>
<p>DeFi investments are like the wild west: <em>Learn how to use your gun and ride your horse. Otherwise, you are dead!</em> As yield-generation options across the ecosystem mature, some places are explicitly more dangerous than others. However, as veterans trailed and survived, they left tools for newer adventurers to explore DeFi with and avoid known dangers.</p>
<p>Yearn assess DeFi strategy risks by examining each investment strategy for key dimensions. In this article we will break down how retail investors can use some of the same tools that the pros use to measure DeFi risks, showcasing the <a href="https://docs.yearn.finance/resources/risks/risk-score">Yearn DeFi Strategy Risk Score Framework</a>.</p>
<section id="risk-dimensions" class="level3">
<h3 class="anchored" data-anchor-id="risk-dimensions">Risk Dimensions</h3>
<ul>
<li><strong>Complexity</strong> — How complex it is to enter and exit this strategy investment position fully.</li>
<li><strong>Protocol Safety</strong> — Overall best practices of the protocol, including devs, audits, security procedures, timelock, etc.</li>
<li><strong>TVL Impact</strong> — How much is our entire investment portfolio impacted if this strategy fails?</li>
<li><strong>Team Knowledge</strong> — A measurement of how many folks in Yearn know about the code and can react in an emergency.</li>
<li><strong>Longevity</strong> — How long has the strategy been live without an issue since deployment?</li>
<li><strong>Testing Score</strong> — How covered by automated tests are the strategy contracts?</li>
<li><strong>Code Review</strong> — Quantity and frequency of code reviews done for this strategy’s automation.</li>
<li><strong>Audit</strong> — Quantity and frequency of audits for yearn strategy contracts involved.</li>
</ul>
<p>We will go into how to assess some of the above by ourselves, but before, we must know <strong>there are always risks involved</strong> in DeFi operations, such as:</p>
<ul>
<li><strong>Governance</strong> — Admin keyholders may change contract parameters in unexpected ways.</li>
<li><strong>Technological</strong> — Smart contract bugs or exploits.</li>
<li><strong>Market</strong> — Low trading volume can be fatal for yields.</li>
<li><strong>Oracles</strong> — Dependency on centralized price feeds.</li>
<li><strong>Operational Risk</strong> — Manual position management can lead to bad timing or typos.</li>
</ul>
<p>With that in mind, let’s dive into each dimension and how to analyze them for a strategy:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/5200/0*pqlY7SiUqDSh7v-q.jpg" class="img-fluid"></p>
<p>Let’s break down a strategy called “GenLevCompV3” (the strategy is on version 3, but it uses Compound v2). It currently holds about $30m in the Yearn DAI vault (and $37m in other stablecoin vaults running the same strategy), so it is a real example for us to learn from.</p>
<ul>
<li><a href="https://yearn.watch/vault/0xdA816459F1AB5631232FE5e97a05BBBb94970c95/0x1676055fE954EE6fc388F9096210E5EbE0A9070c">Link to this strategy details and address on yearn.watch</a></li>
</ul>
<p>Briefly, if we were to try to replicate this strategy manually it does the following:</p>
<ol type="1">
<li>Supply DAI at Compound</li>
<li>Borrow DAI from Compound</li>
<li>Loop between steps 1 and 2 until the desired leverage ratio is met</li>
<li>Continuously sell any COMP rewards for more DAI to reinvest in step 1</li>
</ol>
<p>But Yearn does an optimization so the strategy doesn’t need to do many loop operations and still meets the desired leverage:</p>
<ol type="1">
<li>Flashmint DAI at MakerDAO</li>
<li>Supply deposited DAI + flashminted DAI to Compound</li>
<li>Borrow DAI from Compound so we acheive the desired leverage ratio</li>
<li>Repay the mint from step 1 (everything happens in the same transaction, so it’s a flashmint combined with a flashloan to repay the mint)</li>
<li>Continuously sell any COMP rewards for more DAI to reinvest in step 1</li>
</ol>
<p>Both achieve the same result. You can start with an amount of DAI and leverage a position up a desired loan-to-value ratio. Be mindful that the more you lever up, the more exposed you are to the risk of being liquidated (losing locked assets). There is some math to be done to know how much you want to lever up, depending on the net APR and the protocol emission rewards, levering too much may end up in a negative APR.</p>
<p>At <a href="https://yearn.watch/risk">yearn.watch/risk</a> we can see the exact scores yearn strategists gave for this operation:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2000/0*n3X-B2LgWw5AO4Jn.png" class="img-fluid"></p>
<p>Breaking down the score for each dimension:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2000/0*MuXDspjcxEt63Qcn.png" class="img-fluid"></p>
<blockquote class="blockquote">
<p><em>1 = lower risk, 5 = higher risk. This score is more tangible when compared to another strategy score, it doesn’t really mean much by itself but it gives us a quantitative ground to measure against others.</em></p>
</blockquote>
<p>Now that we have a grasp of how this strategy works, let’s analyze its risks using the risk framework dimensions:</p>
</section>
<section id="what-contracts-are-used-in-this-operation" class="level3">
<h3 class="anchored" data-anchor-id="what-contracts-are-used-in-this-operation">What contracts are used in this operation?</h3>
<p>Since we will scavenge for audits, we must first know what contracts we should be looking for. The easiest way to discover the contracts involved is by doing the operation once and analyzing what happened on-chain so we can see exactly which smart contracts are triggered. You could also just inspect your wallet transaction before executing it, but I’ll perform all for this example to see them happen in practice:</p>
<ul>
<li>Supply 10 DAI:</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2118/0*-exsYXqPiMpRkNGY.png" class="img-fluid"></p>
<ul>
<li>Borrow DAI at max limit:</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2198/0*Xc7wAR4qAYYSbm77.png" class="img-fluid"></p>
<ul>
<li>Repay DAI borrow (triggers claiming COMP rewards):</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2258/0*ZeErCbvdim4m0PiT.png" class="img-fluid"></p>
<ul>
<li>Withdraw supplied DAI (exit position and/or collect supply yield + claim COMP rewards):</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2214/0*g-vujDZIux11BISL.png" class="img-fluid"></p>
<ul>
<li>Only claim COMP rewards (claim COMP rewards):</li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2190/0*VsRQjWM-FW_AkSkE.png" class="img-fluid"></p>
<p>By doing this 5 actions, we interacted with at least two contracts:</p>
<ul>
<li><p>cDAI Token contract: <a href="https://etherscan.io/token/0x5d3a536e4d6dbd6114cc1ead35777bab948e3643">0x5d3a536e4d6dbd6114cc1ead35777bab948e3643</a></p></li>
<li><p>Comptroller contract: <a href="https://etherscan.io/address/0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b">0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b</a></p></li>
</ul>
<p>So I headed to <a href="https://github.com/compound-finance/compound-protocol">Compound Github repo</a> and searched for the contracts I interacted with. I found some that seem to be the version deployed in a branch for compound version 2.2:</p>
<ul>
<li><p>CToken: <a href="https://github.com/compound-finance/compound-protocol/blob/compound/2.2-prerelease/contracts/CToken.sol">https://github.com/compound-finance/compound-protocol/blob/compound/2.2-prerelease/contracts/CToken.sol</a></p></li>
<li><p>Comptroller: <a href="https://github.com/compound-finance/compound-protocol/blob/compound/2.2-prerelease/contracts/Comptroller.sol">https://github.com/compound-finance/compound-protocol/blob/compound/2.2-prerelease/contracts/Comptroller.sol</a></p></li>
</ul>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/5200/0*z66nGO8ouswofKDl.jpg" class="img-fluid"></p>
<p><strong>Complexity Score: 5</strong></p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2000/0*8F1oR54PS2xT_2Zs.png" class="img-fluid"></p>
<p>For complexity, I would assess how many steps we have to take to enter or exit (unwind) this strategy and, for each step, how cost-effective and available it is:</p>
<ul>
<li><strong>Cost-effective</strong>: What are the fees to execute one step</li>
<li><strong>Availability:</strong> Can you execute this step at any give time? What are the constraints?</li>
</ul>
<p>Another interesting point is the <strong>Health Check</strong>: At Yearn strategies are made to be as automated as possible via <a href="https://keep3r.network/">Keep3r Network</a> and there is tooling to measure how healthy the current state of the strategy is. Since we are making a manual investment, our health check would be something like setting up <a href="https://tenderly.co/">Tenderly</a> alerts so you can manually unwind when you notice a specific on-chain event.</p>
<p>For this strategy, let’s say we loop 5 times, doing it manually without Yearn’s optimization:</p>
<ul>
<li>Supply DAI (<strong>6 times to enter</strong>, initial supply + 5 loops)</li>
<li>Borrow DAI at max limit (<strong>5 times to enter</strong>)</li>
<li>Withdraw supplied DAI (exit position + claim supply rewards + claim COMP rewards) <strong>(6 times when we want to exit)</strong></li>
<li>Repay DAI borrow (also claim COMP rewards) <strong>(6 times when we want to exit)</strong></li>
<li>Claim COMP rewards (claim COMP rewards) <strong>(periodically for autocompounding)</strong></li>
<li>Sell COMP in the market for DAI to resupply <strong>(periodically for autocompounding)</strong></li>
</ul>
<p>Entering the strategy like this would take about 10 transactions, and exiting would take 10. This operation is cumbersome to do manually and might be very expensive on Ethereum, especially if the capital used is small, which is why Yearn does the flashmint + flashlend optimization. Comparing this to a simple “buy and hold ETH” strategy, for example, makes it clear that it requires many more steps and states to monitor.</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/5200/0*fbGLs8hfSED60Ald.jpg" class="img-fluid"></p>
<p><strong>Protocol Safety Score: 1</strong></p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2000/0*Fpnrn_J9nIfXT0xM.png" class="img-fluid"></p>
<p>Compound code readme said to read this page for security concerns:</p>
<ul>
<li><a href="https://docs.compound.finance/v2/security/">https://docs.compound.finance/v2/security/</a></li>
</ul>
<p>The Compound protocol has been reviewed &amp; audited by <a href="https://www.trailofbits.com/">Trail of Bits</a> and <a href="https://www.openzeppelin.com/">OpenZeppelin</a> and it is one of the most reputable protocols in DeFi for lending, existing since Sep 2018, so a score 1 makes sense in this context.</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/5200/0*CkITuMwvJBfJzJgD.jpg" class="img-fluid"></p>
<p>It’s harder to dive into other scores as a retail investor but I think there are things to learn from and consider for every investment strategy you execute:</p>
<ul>
<li>How much does the money invested matter to you compared to your entire available capital? How will this affect you if the strategy explodes and you lose part of the money?</li>
<li>How long have other people used this strategy, and how well has it performed historically?</li>
<li>How much knowledge do you <em>really</em> have about all the nuances in every entry and exit step?</li>
</ul>
<p>All of these should be taken into consideration when assessing the risk of entering a strategy, for example:</p>
<ul>
<li>If the strategy is super risky and unknown, but you are allocating an amount of capital you are willing to see vanish, it might be worth considering.</li>
<li>If the strategy has low risk and is very well known, but you are allocating an amount of capital that matters to you if lost, you will be super careful about the risks and use tools to manage it like a “stop-loss” (automatically sells an asset when a price is met).</li>
</ul>
</section>
<section id="yearn-and-risk" class="level2">
<h2 class="anchored" data-anchor-id="yearn-and-risk">Yearn and Risk</h2>
<p>The <a href="https://yearn.watch/risk">yearn.watch/risk</a> page is a very nice way to see all available strategies and their risks. There is also an extra dimension of likelihood, so the final assessment takes into account both risk score and the chance that those risks are exploited:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/2000/0*nXUnyCHRPMwPNV8M.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><em>horizontal axis is likelihood, vertical axis is risk score</em></figcaption>
</figure>
</div>
<p>I hope this case study has elucidated the whys and hows Yearn views risk. The modern wild west is out there, and you can go as far as you are well-equipped and informed! Have fun and travel safely!</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-defi-risks/https:/cdn-images-1.medium.com/max/5120/0*HJrFFeQGGyvmdPhj.jpg" class="img-fluid"></p>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-defi-risks/index.html</guid>
  <pubDate>Fri, 14 Oct 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Conjuring images with Stable Diffusion</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/stable-diffusion-guide/index.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/6066/1*SZiDcLV9Vu_uOdfcw8LJmg.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">“medieval book of spells open and glowing, placed on a stone pedestal, magical setting” Steps: 150, Sampler: Euler, CFG scale: 9, Seed: 2670068578, Size: 768x512</figcaption>
</figure>
</div>
<p><a href="https://github.com/CompVis/stable-diffusion">Stable Diffusion</a> (SD) is a new open-source tool that allows anyone to generate images using AI pre-trained by the nice folks at <a href="https://stability.ai/blog/stable-diffusion-public-release">Stability.ai</a>. You can use any image you make on it commercially as long as you link to its <a href="https://github.com/CompVis/stable-diffusion/blob/main/LICENSE">license</a>. Be aware that some images might not be able to be used because of patents, for example, if you generate an image of Apple’s logo it doesn’t mean you can use it as your brand.</p>
<p>Technically, stable diffusion describes itself as: <em>“A latent text-to-image diffusion model”:</em></p>
<ul>
<li><p><strong>Latent: </strong>To work properly SD depends on a large amount of data (space) that was compressed into a lightweight representation (<a href="https://towardsdatascience.com/understanding-latent-space-in-machine-learning-de5a7c687d8d">latent space</a>).</p></li>
<li><p><strong>Text-to-image:</strong> The core functionality of the whole thing, you feed text to it and it will give you back an image (there are plenty of configs tough for how to do this).</p></li>
<li><p><strong>Diffusion Model: </strong>In AI diffusion is the process of slowly adding random noise to data and then learning to reverse the diffusion process to construct desired data samples from the noise.</p></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*jcccm053U2EO63bwb55czw.gif" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">reverse diffusion process, thanks to <a href="https://jalammar.github.io/illustrated-stable-diffusion/">https://jalammar.github.io/illustrated-stable-diffusion/</a></figcaption>
</figure>
</div>
<p>Very roughly stable diffusion contains a <strong>text decoder</strong> that knows how to interpret text input and represent it as data for an <strong>image generator. </strong>You can read more about how this works in this <a href="https://jalammar.github.io/illustrated-stable-diffusion/">illustrated guide.</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2776/0*T7l-ecwVYMAcc7eM.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">high-level overview of how SD works, thanks to <a href="https://jalammar.github.io/illustrated-stable-diffusion/">https://jalammar.github.io/illustrated-stable-diffusion/</a></figcaption>
</figure>
</div>
<section id="set-up-and-run-local-sd-user-interface" class="level2">
<h2 class="anchored" data-anchor-id="set-up-and-run-local-sd-user-interface">Set up and run local SD + User Interface</h2>
<p>There are many ways to set up and run SD, but after using some my favorite UI is this one:</p>
<ul>
<li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a></li>
</ul>
<p>So go ahead to their <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#installation-and-running">installation</a> section and follow the steps to install and run it. It will require installing python, downloading the repo, and running the “webui-user” script to install and run everything needed. When done copy and paste the link provided by the script output into your browser:</p>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/3428/1*KZxPgmqyZJ1uwONY6EWIxg.png" class="img-fluid" alt="This opens after running the install instructions on windows"> &gt; # You can also use <a href="https://beta.dreamstudio.ai/home">DreamStudio</a> instead of the local setup in case you can’t run it, but it will not have the same scripts used by the local UI in the later parts of this article.</p>
</section>
<section id="core-tools-text-to-image-and-image-to-image" class="level2">
<h2 class="anchored" data-anchor-id="core-tools-text-to-image-and-image-to-image">Core tools: text-to-image and image-to-image</h2>
<section id="txt2img" class="level3">
<h3 class="anchored" data-anchor-id="txt2img">txt2img</h3>
<p>Text-to-Image is a very good starting point when you want just to pump out some images from a prompt idea. Opening the UI will take you straight to txt2img:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/6028/1*x5coNlK6t9DcOOlX0ydTHQ.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Open the link provided by the previous step in the browser to see the UI</figcaption>
</figure>
</div>
<p>This is where we can start from scratch with only text. Let’s understand the parameters provided:</p>
<p><strong>1) Prompt:</strong> a phrase that will direct the image generation process.</p>
<p><strong>2) Steps: </strong>the number of times the diffusion process will happen.</p>
<p><strong>3) Sampler: </strong>different ways of diffusing the image.</p>
<p><strong>4) Size: </strong>initial image resolution, needs beefy GPU to increase.</p>
<p><strong>5) Modifiers: “</strong>restore faces” helps fix faces, “tiling” generates seamless tiles (amazing for games and 3d modeling), “highres fix” helps create images when initial size is much higher than 512x512.</p>
<p><strong>6) Batch Count: </strong>number of images to generate.</p>
<p><strong>7) CFG Scale: “</strong>A Cfg Scale value of 0 will give you a random image based on the seed, whereas a Cfg Scale of 20 (the maximum on SD) will give you the closest match to your prompt that the model can produce.” <a href="https://www.jonstokes.com/p/getting-started-with-stable-diffusion">(source)</a></p>
<p><strong>8) Seed: </strong>A number, when set “-1” will be randomized. You can think of:</p>
<p>result = prompt + seed + sampler + steps + cfg_scale</p>
<p>The seed plays a huge part in this formula, so if you like an image and want to reproduce it you will need all the above data.</p>
<p><strong>9) Scripts: </strong>enables prompt matrix and X/Y plot (which we’ll use later)</p>
<p>Here is an example generation from txt2img:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/5212/1*HFuqoZCaCjVo_RzrCfFwWA.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">“oil painting of a happy kitten” Steps: 50, Sampler: PLMS, CFG scale: 7, Seed: 3482179995, Size: 512x512</figcaption>
</figure>
</div>
<p>Once you find an image you like you can already use it, but you can also:</p>
<ul>
<li><p>send it to “img2img” to create more versions similar to this one.</p></li>
<li><p>send it to “extras” to upscale to a higher resolution.</p></li>
</ul>
</section>
<section id="img2img" class="level3">
<h3 class="anchored" data-anchor-id="img2img">img2img</h3>
<p>Contains most txt2img parameters and some more:</p>
<ul>
<li><p><strong>Image</strong> is the initial image to be used for the diffusion process.</p></li>
<li><p><strong>Samplers</strong> are different from txt2img, some overlap but others are exclusive to one another (for example there is no PLMS in img2img).</p></li>
<li><p><strong>Denoising Strenght</strong>, when increased, will allow img2img to deviate further from the initial image.</p></li>
</ul>
<p>Here is an example of img2img running on top of one of the txt2img outputs from the last example:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/5404/1*ykh8_ND2BMYu_j8_gTC8qg.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">“oil painting of a happy kitten” Steps: 50, Sampler: Euler a, CFG scale: 7, Seed: 3482179995, Size: 512x512, Denoising strength: 0.75</figcaption>
</figure>
</div>
<p>A fun factor is that we can change the prompt too, so let’s try a new prompt with the same configs and initial image and change the <strong>kitten</strong> for a <strong>dog</strong>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/5260/1*9PAYcNjdiYB5-b0FBS2BPA.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">“oil painting of a happy dog” Steps: 50, Sampler: Euler a, CFG scale: 7, Seed: 3482179995, Size: 512x512, Denoising strength: 0.75</figcaption>
</figure>
</div>
<p>There are no limits to where you can get mixing txt2img, img2img, and different prompts. Let’s dive deeper into prompts and techniques for tweaking configs so we can expand even further the boundaries of what we can do with SD</p>
</section>
</section>
<section id="prompts-basics-beyond" class="level2">
<h2 class="anchored" data-anchor-id="prompts-basics-beyond">Prompts: basics &amp; beyond</h2>
<p>The prompt is the most humane input of everything we provide to SD to make an image. There is not much ready-to-consume science behind crafting prompts, but there are tons of people experimenting and writing about their findings. I started small by typing whatever came to mind, then evolved by dissecting prompts of cool images I found at repositories linked below.</p>
<p>People that know about photography and art history are in for a treat, the more you know about art (artists, styles) and photography naming conventions (“golden hour”, framing names) the more you will be able to pump out precise images of what you want.</p>
<p>To compose a prompt, you don’t need to add all of the below, and word order might vary depending on preference, but I think this list sums up what you can think of to improve prompt preciseness. It’s not a rigid framework and you should fiddle around to find what works best for you:</p>
<ul>
<li><p>Subject (person, cat, dog, pizza)</p></li>
<li><p>Environment (beach, stadium, park)</p></li>
<li><p>Framing (overview shot, close-up shot)</p></li>
<li><p>Lightning (morning lights, at night)</p></li>
<li><p>Art Style (oil painting, vector art, 3d render)</p></li>
<li><p>Artist Style (van gogh, picasso, andy warhol)</p></li>
<li><p>Details (4k, unreal engine, intricate details)</p></li>
</ul>
<p>For example, I will generate an image with only a “Subject” in txt2img and add each of the above in order on the same seed and configs so we can see how the words are affecting the image generation:</p>
<section id="cat" class="level3">
<h3 class="anchored" data-anchor-id="cat">cat</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*gkDokLxuCBQ7pImuUw_hZA.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Steps: 50, Sampler: PLMS, CFG scale: 7, Seed: 2620801971, Size: 512x512 (all other images below have the same config)</figcaption>
</figure>
</div>
</section>
<section id="cat-in-a-beach" class="level3">
<h3 class="anchored" data-anchor-id="cat-in-a-beach">cat in a beach</h3>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*Stu1QchlhSUQ8dCRTjGRRw.png" class="img-fluid"></p>
</section>
<section id="overview-shot-of-a-cat-in-a-beach" class="level3">
<h3 class="anchored" data-anchor-id="overview-shot-of-a-cat-in-a-beach">overview shot of a cat in a beach</h3>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*hZBEVS4hESyaUNEfgt3KtA.png" class="img-fluid"></p>
</section>
<section id="overview-shot-of-a-cat-in-a-beach-at-night" class="level3">
<h3 class="anchored" data-anchor-id="overview-shot-of-a-cat-in-a-beach-at-night">overview shot of a cat in a beach at night</h3>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*XteZ8WR1rJwNPW2Qbr8aCg.png" class="img-fluid"></p>
</section>
<section id="overview-shot-of-a-cat-in-a-beach-at-night-acrylic-painting" class="level3">
<h3 class="anchored" data-anchor-id="overview-shot-of-a-cat-in-a-beach-at-night-acrylic-painting">overview shot of a cat in a beach at night, acrylic painting</h3>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*mtIPbXR0o1kzp4yk0ss3mA.png" class="img-fluid"></p>
</section>
<section id="overview-shot-of-a-cat-in-a-beach-at-night-acrylic-painting-by-andy-warhol" class="level3">
<h3 class="anchored" data-anchor-id="overview-shot-of-a-cat-in-a-beach-at-night-acrylic-painting-by-andy-warhol">overview shot of a cat in a beach at night, acrylic painting by andy warhol</h3>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*b52u4UCxY3Pkma5ranATjA.png" class="img-fluid"></p>
</section>
<section id="overview-shot-of-a-cat-in-a-beach-at-night-acrylic-painting-by-andy-warhol-intricate-details" class="level3">
<h3 class="anchored" data-anchor-id="overview-shot-of-a-cat-in-a-beach-at-night-acrylic-painting-by-andy-warhol-intricate-details">overview shot of a cat in a beach at night, acrylic painting by andy warhol, intricate details</h3>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*IiyYVu5MDEFapTLQ2JhxPg.png" class="img-fluid"></p>
</section>
<section id="read-more-about-sd-and-prompts" class="level3">
<h3 class="anchored" data-anchor-id="read-more-about-sd-and-prompts">Read more about SD and prompts</h3>
<ul>
<li><p><a href="https://github.com/awesome-stable-diffusion/awesome-stable-diffusion">List of awesome SD resources</a></p></li>
<li><p><a href="https://www.reddit.com/r/StableDiffusion/comments/xcrm4d/useful_prompt_engineering_tools_and_resources/">SD prompt resources</a></p></li>
<li><p><a href="http://dallery.gallery/wp-content/uploads/2022/07/The-DALL%C2%B7E-2-prompt-book-v1.02.pdf">DALL-E prompt book</a></p></li>
<li><p><a href="https://arxiv.org/abs/2112.10752">SD scientific paper</a></p></li>
</ul>
</section>
</section>
<section id="dissecting-prompts-with-prompt-matrix" class="level2">
<h2 class="anchored" data-anchor-id="dissecting-prompts-with-prompt-matrix">Dissecting prompts with “prompt matrix”</h2>
<p>We can create matrixes that visually dissect for us what is happening in a prompt, ina. the process is much similar to the above one but automated. I find this especially useful to clean and remove words that aren’t adding anything to the final result, and also to understand what composes a beautiful public prompt. Head to <a href="https://lexica.art/">lexica.art</a> or your preferred prompt repository and find one you like:</p>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/6720/1*V6Wwgc1Grca5B1R5St07bQ.png" class="img-fluid" alt="https://lexica.art/prompt/7115b90c-4da0-4918-b1cb-3d6f6f304ce3"> &gt; delirium, chaotic storm of liquid smoke, stylized beauty portrait of natalia portman, by petros afshar, ross tran, tom whalen, peter mohrbacher, artgerm, shattered glass, bubbly underwater scenery, radiant light &gt; Steps: 50, Sampler: DDIM, CFG scale: 10, Seed: 3231029621, Size: 512x640</p>
<p>These configs should get close to the website results:</p>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/3072/1*4K0DE9g13MQrPXxJenAjGg.png" class="img-fluid"></p>
<p>Now let’s use the <strong>prompt matrix</strong> script that allows us to breakdown this prompt into many parts and it will show us how the image looks like for every possible combination:</p>
<section id="original-prompt" class="level3">
<h3 class="anchored" data-anchor-id="original-prompt">Original Prompt</h3>
<blockquote class="blockquote">
<p>delirium, chaotic storm of liquid smoke, stylized beauty portrait of natalia portman, by petros afshar, ross tran, tom whalen, peter mohrbacher, artgerm, shattered glass, bubbly underwater scenery, radiant light</p>
</blockquote>
</section>
<section id="prompt-broken-down-into-matrix" class="level3">
<h3 class="anchored" data-anchor-id="prompt-broken-down-into-matrix">Prompt Broken down into matrix</h3>
<blockquote class="blockquote">
<p>delirium|chaotic storm of liquid smoke|stylized beauty portrait of natalia portman|by petros afshar, ross tran, tom whalen, peter mohrbacher, artgerm| shattered glass|bubbly underwater scenery|radiant light</p>
</blockquote>
<p>When you enable the prompt matrix script you can add “|” as a break so it knows how to build the matrix.</p>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2580/1*JtyjNO9UdlyFSg5qrCTS-Q.png" class="img-fluid"></p>
<p>When using this script. “Batch Count” will be ignored. Here is a matrix using the same seed as the first image from the previous batch (You will find it complete at the bottom-right here):</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/6392/1*6jW2WzUHphc7q0dFTTXUlQ.jpeg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">delirium|chaotic storm of liquid smoke|stylized beauty portrait of natalia portman|by petros afshar, ross tran, tom whalen, peter mohrbacher, artgerm| shattered glass|bubbly underwater scenery|radiant light</figcaption>
</figure>
</div>
<p>This feature allows you to select one image from the matrix and then look at the prompt that made it. The grey strikes text means that part has been omitted. The first image (top-left) is just the first part of the prompt before the first “|” (in this case, “delirium”). I use this a lot with my prompts to find out what words are influencing the final result and how.</p>
</section>
</section>
<section id="fine-tuning-configs-with-xy-plots" class="level2">
<h2 class="anchored" data-anchor-id="fine-tuning-configs-with-xy-plots">Fine-tuning configs with “X/Y plots”</h2>
<p>The X/Y plot script will also create a matrix but we can decide what the X (horizontal) and Y (vertical) axes are:</p>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2552/1*_w-Fsid7mB_Ukq0ylHGhTQ.png" class="img-fluid"></p>
<p>This script is extremely useful for finding out the best sampler, CFG scale, and step count for what you want to do. I will run the above configs for the same prompt and seed from the previous example. Unlike in the prompt matrix, “Batch Count” does work here so set it to 1 if you don’t want it to take too long to generate:</p>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/6912/1*W3PfS_eFHjKBNun36Rgi4w.png" class="img-fluid"></p>
<p>You can make X/Y Plots with any variables, not just these 2, so have fun finding the config that makes the cooler images for your desired prompt! I find this script extremely useful to figure out sampler, steps, and CFG scale for a prompt.</p>
</section>
<section id="upscaling" class="level2">
<h2 class="anchored" data-anchor-id="upscaling">Upscaling:</h2>
<p>In the “Extras” tab we can find the upscalers:</p>
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2648/1*Ng3-79ZgU3wsEzmtP5ke1w.png" class="img-fluid"></p>
<p>Again, this is something you will experiment with depending on what you want. I often like to use “SwinIR” on both upscale boxes, but in this example I preferred “ESRGAN” results:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*XycXwUrysSLWiIsYR2W26w.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">no upscale</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/4096/1*mPFia0TIXkDYIBp-pODTIQ.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">SwinIR_4x upscale</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/4096/1*FfurygfGu7V53kdHWMNYwA.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">ESRGAN 4x upscale</figcaption>
</figure>
</div>
<p>Both upscale 4x resolution, so the image went from 512x512 to 2048x2048. You can repeat the process and upscale it repeatedly, but I haven’t experimented much with doing this.</p>
</section>
<section id="post-production" class="level2">
<h2 class="anchored" data-anchor-id="post-production">Post-Production</h2>
<p>If you have basic photoshop skills you can post-produce images to remove weird unwanted watermarks/signatures resemblances and also apply extra design on top of it. I’ve been using this for my latest articles, here are some examples:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2560/1*geuPMDrA7WD2NoQGgG_z4w.jpeg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">original yearn.finance logo (where I work at!) designed by a person</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2000/1*-tbBODMZyBnJOeEmwX7GIA.jpeg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">img2img version of the logo (prompt: “demon”)</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2800/0*Mo--0li3l6Lh00Cu.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">final banner for the article using the font taken from the presskit</figcaption>
</figure>
</div>
<p>In the above example we can see how img2img is very powerful in achieving some form while retaining the old one. But there is much more that could be done:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2560/1*iHzJPN-O8fsPWvHRKr6btA.jpeg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">“wildwest exploration blue compass” (made in Midjourney txt2img, not SD)</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/2560/1*nUWkX9L7rAJGOsTnMpNyzg.jpeg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">photoshopped text + yearn logo</figcaption>
</figure>
</div>
<p>Another example from scratch with SD:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/i.imgur.com/aV6KOFW.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">txt2img “saint holding circular blue token with vibrant neon outline, dark background, top artstation”</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/i.imgur.com/aV6KOFW.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">img2img “saint holding circular blue token with vibrant neon outline, dark background, top artstation”</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/i.imgur.com/4WI8vnZ.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">top pick</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/i.imgur.com/OmmPuZs.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">photoshop yearn logo added in</figcaption>
</figure>
</div>
</section>
<section id="final-words" class="level2">
<h2 class="anchored" data-anchor-id="final-words">Final Words</h2>
<p>Its been 8 months since I wrote an article on <a href="https://medium.com/@marcoworms/generate-images-with-open-source-ai-tools-e32eb4ea2d93">how to make images with open-source AI tools</a> and since then the rise o Stable Diffusion, Midjourney, and DALL-E has been exponential and unstoppable.</p>
<ul>
<li><p>SD is open source and people are doing amazing things with it, like plugging it into 3d render pipelines and video post-production.</p></li>
<li><p>Midjourney pricing and UI are very accessible. It produces beautiful results with small prompts, remaster uses SD for even more stunning results.</p></li>
<li><p>DALL-E outpainting is incredible, you can merge/extend existing artwork. More expensive than the rest, but worth the try.</p></li>
</ul>
<p>I’m very excited about the future of this tech. Whenever I feel like we had another significant advancement I’ll be sure to make another article! If you like this type of content <a href="https://twitter.com/MarcoWorms">follow me on Twitter</a> where I often post random images and guides for weird and beautiful tech.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/stable-diffusion-guide/https:/cdn-images-1.medium.com/max/8192/1*u1uMfn8GpoWwuRyOo5wcbQ.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">“cowboy riding into the sunset, cyberpunk landscape, unreal engine render, vibrant lights” Steps: 50, Sampler: DDIM, CFG scale: 10, Seed: 987765270, Size: 1024x512, High Res. Fix Denoising strength: 0.7, Up: SwinIR_4x</figcaption>
</figure>
</div>


</section>

 ]]></description>
  <category>english</category>
  <guid>https://marcoworms.github.io/blog/posts/stable-diffusion-guide/index.html</guid>
  <pubDate>Fri, 07 Oct 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>yDaemon: one API to unify all yearn data</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-ydaemon/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-ydaemon/https:/cdn-images-1.medium.com/max/5200/0*VJeiEc_Vh769rYAE.png" class="img-fluid"></p>
<p>yDaemon (<a href="https://github.com/yearn/ydaemon">source</a>) is a yearn <a href="https://restfulapi.net/">REST</a> API that provides a single unified interface to consume all relevant Yearn ecosystem data. The API data updates in near real-time thanks to the many daemons that it spawns in order to check data sources for changes:</p>
<ul>
<li>Yearn <a href="https://medium.com/iearn/subgraphs-explained-yearning-for-data-4e90d18e33e">Subgraph</a> (main source of historical data)</li>
<li>Yearn <a href="https://github.com/yearn/ydaemon/tree/main/data/meta">Meta</a> (static data updated by yearn team, like strategy descriptions)</li>
<li>Yearn <a href="https://docs.yearn.finance/vaults/yearn-api">API</a> (APY computations)</li>
<li>Yearn <a href="https://docs.yearn.finance/vaults/yearn-lens/">Lens</a> (token prices)</li>
<li>Yearn <a href="https://docs.yearn.finance/resources/risks/risk-score">Risk Framework</a> (soon)</li>
</ul>
<p>yDaemon exposes 4 routes for you to work with data:</p>
<ul>
<li><a href="https://ydaemon.ycorpo.com/docs/routes/getSupportedChains">getSupportedChains</a>: lists every valid chainID</li>
<li><a href="https://ydaemon.ycorpo.com/docs/routes/getAllVaults">getAllVaults</a>: lists information all vaults for a chainID</li>
<li><a href="https://ydaemon.ycorpo.com/docs/routes/getVault">getVault</a>: lists information for a single vault</li>
<li><a href="https://ydaemon.ycorpo.com/docs/routes/getBlacklistedVaults">getBlacklistedVaults</a>: lists vaults not included in yDaemon API</li>
</ul>
<blockquote class="blockquote">
<p><em>chainID is a unique number that represents a blockchain, for example Ethereum ID is 1.</em></p>
</blockquote>
<p>The main routes to use are getAllVaults and getVault, both work with the same vault object type the only difference is that one route returns information for a list of all vaults and the other returns for a single one. Some of the most important information that these routes are:</p>
<ul>
<li><strong>Vault Data</strong>: Address, Symbol, Name, Icon, Version, Creation Date, Last Update.</li>
<li><strong>Vault Underlying Token Data</strong>: Address, Name, Symbol, Icon.</li>
<li><strong>Vault TVL</strong>: Total Assets, Total Assets in USD, Value of Token in USD .</li>
<li><strong>Vault APY</strong>: Gross APR, Net APY, Performance Fees, Management Fees, APY based on Weekly/Monthly/Lifetime performance, Curve APRs breakdown.</li>
<li><strong>Vault Strategies</strong>: Address, Name, Description, Strategist, Total Gain, Total Loss, Total Debt, Debt Limit.</li>
</ul>
<section id="setup-ydaemon-locally" class="level2">
<h2 class="anchored" data-anchor-id="setup-ydaemon-locally">Setup yDaemon locally</h2>
<p>There are 2 ways to install and run it using either Docker or <a href="https://github.com/yearn/ydaemon/blob/main/INSTALL.md">Manual Installation</a>, I will proceed with using Docker since it works with fewer dependencies in any OS:</p>
<ol type="1">
<li><p><a href="https://docs.docker.com/get-docker/">Download</a> and install Docker</p></li>
<li><p><a href="https://git-scm.com/downloads">Download</a> and install Git</p></li>
<li><p>Create an <a href="https://auth.alchemyapi.io/">Alchemy</a> or <a href="https://infura.io/">Infura</a> account (or another RPC provider) and get RPC HTTPS keys for the blockchains you want to query data from. Fantom only has the <a href="https://docs.fantom.foundation/api/public-api-endpoints">public</a> RPC</p></li>
<li><p>Open your terminal and type git clone https://github.com/yearn/ydaemon.git to download yDaemon source code and cd ydaemon to enter the project’s folder</p></li>
<li><p>Create a .env file containing the lines for the blockchains you want to query from, you don’t need to add URLs for the ones you don’t want to query:</p>
<p>RPC_URI_FOR_1=https://eth-mainnet.g.alchemy.com/v2/secret_secret_secret RPC_URI_FOR_10=https://another.rpc.url RPC_URI_FOR_250=https://another.rpc.url RPC_URI_FOR_42161=https://another.rpc.url</p></li>
<li><p>In the terminal, type docker-compose up –build –detach to run yDaemon.</p></li>
<li><p>To stop type docker-compose down.</p></li>
</ol>
</section>
<section id="daemons" class="level2">
<h2 class="anchored" data-anchor-id="daemons">Daemons</h2>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-ydaemon/https:/cdn-images-1.medium.com/max/5200/0*uajLgo_Rp_ZuAtCb.png" class="img-fluid"></p>
<p>To keep data up-to-date the API daemons are spawned on deploy and work in the following cadence:</p>
<ul>
<li>Prices from the oracle are updated every 30 seconds for every tokens and vaults, since the price may change at every block.</li>
<li>APY information is updated every 10 minutes, as the underlying API is updated every 30 minutes.</li>
<li>Metadata is updated every day and whenever you deploy yDaemon API.</li>
</ul>
<p>Each daemon knows how to fetch and handle data from a specific source and <a href="https://ydaemon.ycorpo.com/docs/daemons/intro#cache">cache</a> it if needed, most data that doesn’t come from the Subgraph is cached on deployment and then periodically updated.</p>
<p>There is a <a href="https://ydaemon.ycorpo.com/docs/daemons/list">**list of all Daemons</a>** at the docs. All daemons are written in <a href="https://go.dev/">Go</a> and you can find them in the source code at the <a href="https://github.com/yearn/ydaemon/tree/main/internal/daemons">daemons</a> folder.</p>
</section>
<section id="query-ydaemon" class="level2">
<h2 class="anchored" data-anchor-id="query-ydaemon">Query yDaemon</h2>
<p>The public endpoint to use yDaemon is:</p>
<ul>
<li><a href="https://ydaemon.yearn.finance/">https://ydaemon.yearn.finance/</a></li>
</ul>
<p>You can test the API <a href="https://github.com/yearn/ydaemon#endpoints">endpoints</a> by changing the:chainID and :address in the URLs below to what you want to query for</p>
<p><strong>getSupportedChains</strong>: GET</p>
<ul>
<li>Local: <a href="http://localhost:8080/info/chains">http://localhost:8080/info/chains</a></li>
<li>Live: <a href="https://ydaemon.yearn.finance/info/chains">https://ydaemon.yearn.finance/info/chains</a></li>
</ul>
<p><strong>getAllVaults</strong>: GET</p>
<ul>
<li>Local: <a href="http://localhost:8080/:chainID/vaults/all">http://localhost:8080/:chainID/vaults/all</a> | <a href="http://localhost:8080/1/vaults/all">ETH</a> | <a href="http://localhost:8080/10/vaults/all">OP</a> | <a href="http://localhost:8080/250/vaults/all">FTM</a> | <a href="http://localhost:8080/42161/vaults/all">ARBI</a></li>
<li>Live: <a href="https://ydaemon.yearn.finance/:chainID/vaults/all">https://ydaemon.yearn.finance/:chainID/vaults/all</a> | <a href="https://ydaemon.yearn.finance/1/vaults/all">ETH</a> | <a href="https://ydaemon.yearn.finance/10/vaults/all">OP</a> | <a href="https://ydaemon.yearn.finance/250/vaults/all">FTM</a> | <a href="https://ydaemon.yearn.finance/42161/vaults/all">ARBI</a></li>
</ul>
<p><strong>getVault</strong>: GET</p>
<ul>
<li>Local: <a href="http://localhost:8080/:chainID/vaults/:address">http://localhost:8080/:chainID/vaults/:address</a></li>
<li>Live: <a href="https://ydaemon.yearn.finance/:chainID/vaults/:address">https://ydaemon.yearn.finance/:chainID/vaults/:address</a></li>
</ul>
<p><strong>getBlacklistedVaults</strong>: GET</p>
<ul>
<li>Local: <a href="http://localhost:8080/info/vaults/blacklisted">http://localhost:8080/info/vaults/blacklisted</a></li>
<li>Live: <a href="https://ydaemon.yearn.finance/info/vaults/blacklisted">https://ydaemon.yearn.finance/info/vaults/blacklisted</a></li>
</ul>
<p>With the service up you can now query for vaults data, for example at Ethereum :chainID = 1 let’s query the DAI vault :address = 0xdA816459F1AB5631232FE5e97a05BBBb94970c95 by entering this URL in the browser (or query form any programming language):</p>
<ul>
<li><a href="https://ydaemon.yearn.finance/1/vaults/0xdA816459F1AB5631232FE5e97a05BBBb94970c95">https://ydaemon.yearn.finance/1/vaults/0xdA816459F1AB5631232FE5e97a05BBBb94970c95</a></li>
</ul>
<p>Copy the returned text and paste it into something like <a href="http://json2table.com/">json2table</a> so you can prettify the JSON. For example, we can see that management fees for this vault are now 0 (announced recently on <a href="https://twitter.com/iearnfinance/status/1565217164122103809">twitter</a>):</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-ydaemon/https:/cdn-images-1.medium.com/max/2000/0*HPRbs671oz_0wmhQ.png" class="img-fluid"></p>
</section>
<section id="filters" class="level2">
<h2 class="anchored" data-anchor-id="filters">Filters</h2>
<p>The getAllVaults might return a huge list so it has some query tools you can use to filter and reorder results:</p>
<ul>
<li><code>?skip=N</code> will skip N vault from the graphQL query. Default is 0</li>
<li><code>?first=N</code> will limit the result to N vaults on the graphQL query. Default is 1000</li>
<li><code>?strategiesDetails=withDetails</code> adds more details to vault strategies</li>
<li><code>?strategiesCondition=absolute</code> removes strategies with 0 TVL</li>
</ul>
<p>So if I want the listing result to return only 5 vaults, I can use first:</p>
<ul>
<li><a href="https://ydaemon.yearn.finance/1/vaults/all?first=5">https://ydaemon.yearn.finance/1/vaults/all?first=5</a></li>
</ul>
<p>If I’m building some sort of pagination system that shows vaults in groups of 5, I can ask for the next page using skip:</p>
<ul>
<li><a href="https://ydaemon.yearn.finance/1/vaults/all?first=5?skip=5">https://ydaemon.yearn.finance/1/vaults/all?first=5?skip=5</a></li>
</ul>
<p>Query vaults with complete strategy details only for strategies with 0 TVL:</p>
<ul>
<li><a href="https://ydaemon.yearn.finance/1/vaults/all?strategiesDetails=withDetails?strategiesCondition=absolute">https://ydaemon.yearn.finance/1/vaults/all?strategiesDetails=withDetails?strategiesCondition=absolute</a></li>
</ul>
<p>See all available <a href="https://github.com/yearn/ydaemon#endpoints">fillters</a></p>
</section>
<section id="build-with-yearn" class="level2">
<h2 class="anchored" data-anchor-id="build-with-yearn">Build with Yearn</h2>
<p>If you are using yDaemon to build anything let our community know! Here are some useful links:</p>
<ul>
<li><a href="https://github.com/yearn/ydaemon">yDaemon Github Repository</a></li>
<li><a href="https://docs.yearn.finance/">Yearn Documentation</a></li>
<li><a href="https://docs.yearn.finance/partners/introduction">Yearn Partnership Documentation</a></li>
<li><a href="https://discord.com/invite/yearn">Yearn Community Discord</a></li>
<li><a href="https://t.me/yearnfinance">Yearn Community Telegram</a></li>
</ul>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-ydaemon/index.html</guid>
  <pubDate>Fri, 16 Sep 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Subgraphs explained: Yearning for data</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-subgraphs/index.html</link>
  <description><![CDATA[ 




<p>A Subgraph is an open-source API that allows developers and users to query blockchain data using well-known database query languages. In this article, we will explore a <a href="https://api.thegraph.com/subgraphs/name/rareweasel/yearn-vaults-v2-subgraph-mainnet/graphql">Yearn Ethereum Subgraph</a> and learn how to ask it for data (a.k.a. query it). This knowledge is extremely important for web3 developers, but any blockchain user may also leverage information found on public subgraphs for their interests.</p>
<p>Luckily for us, today we have technology like <a href="https://thegraph.com/en/">The Graph</a> which provides a human-friendly interface for communicating with subgraphs. It’s worth noting that The Graph is a decentralized protocol that maintains an ecosystem of incentives for many roles that co-exist to make the infrastructure keep on going</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/Ql45D6z.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Things you can do at The Graph</figcaption>
</figure>
</div>
<p>Before diving into a subgraph let’s be clear about why we need one and what it solves: The blockchain is an ever-growing chain of blocks and each block has a small piece of information inside it, when we need to query for something that needs data from many blocks we need to read through them all and aggregate the data, turns out this can get super complex and hard to maintain (to read more on this search for “Event Sourcing”). We already have solutions to deal with querying data called “Databases“, so the subgraph will maintain a Database that we can query for data in a much more human-friendly way to do it.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/HzMjRFd.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Overview of what the subgraph solves</figcaption>
</figure>
</div>
<p>Now that we know what a subgraph is, let’s interact with one: Head to the <a href="https://api.thegraph.com/subgraphs/name/rareweasel/yearn-vaults-v2-subgraph-mainnet/graphql"><strong>Yearn Vaults V2 Subgraph Mainnet </strong>at The Graph</a> and you should be greeted with this screen:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/jqjJXvl.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><a href="https://api.thegraph.com/subgraphs/name/rareweasel/yearn-vaults-v2-subgraph-mainnet/graphql">https://api.thegraph.com/subgraphs/name/rareweasel/yearn-vaults-v2-subgraph-mainnet/graphql</a></figcaption>
</figure>
</div>
<p>On the top left corner click “Explorer“ to open the left-side tab with many entities that we can query for:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/7NmBiJQ.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Open explorer tab</figcaption>
</figure>
</div>
<p>Now you are free to click on the entities on the left-side bar to add them to your query. When you click on one of them it will expand all the fields you can query for.</p>
<p>Let’s start by clicking on “vaults“ and selecting a few fields to query for. I’ve marked with red arrows everything I clicked. Clicking will automatically fill up the “query“ field for you and you can press the “Play“ button to run the query and see the results on the right. In this example, we listed all Yearn vaults for their addresses and deposit tokens:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/b2HzFKQ.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Click stuff and see what happens!</figcaption>
</figure>
</div>
<p>The result that came out in a format called JSON. This format is a standard way to structure data in the web and there are tons of ways to consume and transform this data. For a more readable table-like view paste the result into an app like <a href="http://json2table.com/">json2table</a>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/vtbitB9.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Table-like format for the query output at json2table.com</figcaption>
</figure>
</div>
<p>We can filter things and use any of the <a href="https://graphql.org/">GraphQL</a> features to make queries the way you want. The clickable interface helps a lot too by providing filters: all fields contain the following filters:</p>
<ul>
<li><strong>First</strong>: Limits the total number of results in a query to the first X results</li>
<li><strong>OrderBy / OrderDirection</strong>: Helps you order the results the way you want</li>
<li><strong>Skip</strong>: Skip the first X results. For example, if you ask for the First 10 but Skip 10 you would get results from 11 to 20.</li>
<li><strong>Where</strong>: Opens a list with all properties and you can filter for results that have specific properties you want</li>
</ul>
<p>Let’s fiddle with “Where“ a bit to query for only”Endorsed” vaults: Click the “where” filter in vaults:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/vTwCfh5.png" class="img-fluid"></p>
<p>Select the “classification” property inside “where” and choose the Endorsed field</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/E7sIoZO.png" class="img-fluid"></p>
<p>Now we only query for production vaults in our results:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/v2JYg1y.png" class="img-fluid"></p>
<p>Here is another example query where we can see all harvests that happen inside vault strategies and how much they profited:</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-subgraphs/https:/i.imgur.com/zmCJEH0.png" class="img-fluid"></p>
<p>There are no limits to what you can do with the subgraph, in fact all recent yearn apps use it a lot since it makes for a much better developer experience and quicker solution for most problems that need data from the blockchain. I hope this walkthrough inspired you to dig deeper into what you can query for in subgraphs, and I recommend that you take a deeper look into <a href="https://graphql.org/">GraphQL</a> to learn all query tricks.</p>
<p>For programmers, you can use GraphQL in your favorite programming language and build web3 applications along with something like <a href="https://github.com/ethers-io/ethers.js">ethers-io</a> (library to help sign transactions in the blockchain).</p>



 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-subgraphs/index.html</guid>
  <pubDate>Thu, 04 Aug 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Automatizando investimentos dentro da blockchain de acordo com o risco</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/automatizando-investimentos-defi/index.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>Esse artigo é a junção de todos os posts de um fio no twitter: <a href="https://twitter.com/MarcoWorms/status/1553429027628744704">https://twitter.com/MarcoWorms/status/1553429027628744704</a></p>
</blockquote>
<p>A yearn é tipo uma conta poupança 100% transparente dentro da blockchain, decidir onde alocar os recursos e quanto risco tomar para isso é parte crucial da operação!</p>
<p>Cada <a href="https://medium.com/iearn/yearn-finance-explained-what-are-vaults-and-strategies-96970560432">cofre</a> possui até 20 estratégias de investimento, essas estratégias têm níveis de riscos diferentes medidos quantitativamente que são usados para decidir o quanto alocar por opção.</p>
<p>Com as turbulências atuais nos mercados financeiros e de cripto um contribuidor da yearn (<a href="https://twitter.com/storming0x">storming0x</a>) escreveu detalhadamente como o protocolo da yearn lida com os riscos com uma framework aberta que pode ser melhorada por qualquer outro serviço, assim como o código de tudo feito na yearn!</p>
<p><img src="https://marcoworms.github.io/blog/posts/automatizando-investimentos-defi/https:/i.imgur.com/cQIU76Z.png" class="img-fluid"></p>
<p>Pros componentes principais (tipo o código do cofre) os procedimentos de segurança e testes é o clássico em DeFi: um processo cascata de desenvolvimento/teste/auditoria</p>
<p>Mas pro código das estratégias de investimento isso muda pois oportunidades surgem e morrem muito rápido</p>
<p>Auditorias e reviews de segurança são o maior gargalo pra colocar contratos em produção</p>
<p>A demanda é muito alta e você não tem controle do tempo que pode demorar</p>
<p>Se as estratégias de investimento precisam ir pra produção mais rápido que o processo normal, <strong>como gerir o risco?</strong></p>
<p><img src="https://marcoworms.github.io/blog/posts/automatizando-investimentos-defi/https:/cdn-images-1.medium.com/max/2000/1*kXaVNhsEzqqRVJ_g_-_wHw.gif" class="img-fluid"></p>
<p>Cada estratégia recebe uma nota para a <strong>chance de um problema ou hack VS. tamanho do impacto</strong></p>
<p>Jogadores de poker podem chamam isso de “Valor Esperado” (EV em inglês)</p>
<p>Uma formula dá notas consistentes para cada estratégia diferente baseado em dimensões medidas num processo interno</p>
<ul>
<li><strong>Documentação sobre notas de risco das estratégias:</strong> <a href="https://docs.yearn.finance/resources/risks/risk-score">https://docs.yearn.finance/resources/risks/risk-score</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/automatizando-investimentos-defi/https:/cdn-images-1.medium.com/max/3796/0*VjPyzipnENGZjjd_.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Exemplos de notas de uma estratégia</figcaption>
</figure>
</div>
<p>Quanto menor for a nota, menor a chance de um problema acontecer baseado em dados passados</p>
<p>Essa nota passa por dimensões como:</p>
<ul>
<li>Auditorias</li>
<li>Reviews</li>
<li>Complexidade</li>
<li>Protocolos Usados</li>
</ul>
<p>Assim comparamos riscos de estratégias diferentes</p>
<p>Com as notas conseguimos fazer um mapa de risco onde o total que uma estratégia tem investido nela entra como um dos fatores de risco (“chance de algo dar problema”)</p>
<p>Colocamos a estratégia na tabela com eixos</p>
<ul>
<li>Gravidade (y)</li>
<li>Chance (x)</li>
</ul>
<p>aqui: <a href="https://t.co/sDh4ewP272">http://yearn.watch/risk</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/automatizando-investimentos-defi/https:/cdn-images-1.medium.com/max/2000/1*lBFL4LR2MWen1OFx2lE3CQ.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><a href="https://t.co/sDh4ewP272">http://yearn.watch/risk</a></figcaption>
</figure>
</div>
<p>Como isso é útil?</p>
<p>Soltamos uma estratégia antes de auditorias, marcando ela como alto risco</p>
<p>Limitamos o total de recursos alocados na estratégia enquanto mitigação de risco são feitas</p>
<p>A yearn coloca a estratégia numa bicicleta com rodinhas, tomando ações preventivas</p>
<p>Essa forma de abordar o problema balanceia experimentação rápida com gestão de risco e segurança</p>
<p>Reviews de segurança internos sempre acontecem antes de deployar um código mas isso é só a parte da nota, passando por desde pares até auditorias completas, melhorando a nota</p>
<p>“testar em produção” virou um meme no DeFi summer</p>
<p>Na realidade, a yearn faz alocações medidas por risco e checa o risco antes de alocar os fundos</p>
<p>Isso mostra que levamos a sério segurança</p>
<p>Mais trabalho está sendo feito nos riscos dos cofres</p>
<ul>
<li><strong>Documentação sobre notas de risco dos cofres:</strong> <a href="https://github.com/yearn/yearn-data-analytics/blob/master/src/risk_framework/README.md">https://github.com/yearn/yearn-data-analytics/blob/master/src/risk_framework/README.md</a></li>
</ul>
<p>Sobre a nota de “Protocolos Usados”</p>
<p>Antes de fazer deploy de uma estratégia que use um protocolo novo fazemos uma checagem de diligência em vários aspectos: governança da multisig, codebase, auditorias, etc</p>
<p>A maioria dos protocolos estão abertos a melhorar nessas dimensões</p>
<p>A yearn é transparente sobre todos os riscos que um usuário tem ao depositar nela</p>
<p>Você pode simplesmente depositar e esquecer</p>
<p>Ou você pode <a href="https://medium.com/iearn/diving-into-yearn-metrics-8c3fb0520927">monitorar</a> cada átomo de como a salsicha é feita com ferramentas feitas pelos próprios contribuidores</p>
<p>DeFi de verdade é transparente</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/automatizando-investimentos-defi/https:/cdn-images-1.medium.com/max/2000/0*gRj7rQupMSq517AV.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Exemplo de cofre visualizado no <a href="https://yearn.watch/">yearn.watch</a></figcaption>
</figure>
</div>
<p>Enquanto trabalho é feito nas mitigações de risco as notas melhoram e alocamos mais recursos na estratégia</p>
<p>A yearn faz reviews recorrentes baseados no total depositado na estratégia</p>
<p>Uma das metas dos cofres v3 é ter todo o framework de risco “on chain” e automatizado</p>
<p>Esses aspectos de gestão de risco são a receita secreta da yearn pra lidar com investimentos e segurança através de prevenção</p>
<p>Nenhum sistema é perfeito, incluindo esse</p>
<p>Mas acho que o sistema se provou na fogueira que foi o crash atual</p>
<p>Outros podem iterar em cima disso</p>
<p>Espero que isso tenha agregado para pessoas e protocolos que vão criar seus próprios frameworks</p>
<p>A Yearn se inspira em gigantes como <a href="https://twitter.com/MakerDAO"><span class="citation" data-cites="MakerDAO">@MakerDAO</span></a> e customizamos para nossas necessidades</p>
<p>Obrigado a todos contribuidores na yearn que fazem e mantém as documentações e ferramentas</p>
<p><img src="https://marcoworms.github.io/blog/posts/automatizando-investimentos-defi/https:/cdn-images-1.medium.com/max/2000/1*Ccb-_eElgHRTG-J5kF6wPA.gif" class="img-fluid"></p>
<p>Traduzi para português pois gostei do fio que ele fez e ajudei a fazer partes das documentações!</p>
<p>Aprenda mais sobre a <a href="https://twitter.com/iearnfinance"><span class="citation" data-cites="iearnfinance">@iearnfinance</span></a> e como funciona outros processos da DAO lendo a documentação: <a href="https://t.co/Ml5GM7hVWB">http://docs.yearn.finance</a></p>
<p><a href="https://twitter.com/storming0x/status/1553092343619850240">Post original do <span class="citation" data-cites="storming0x">@storming0x</span></a></p>



 ]]></description>
  <category>portuguese</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/automatizando-investimentos-defi/index.html</guid>
  <pubDate>Mon, 01 Aug 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Where does on-chain yield come from?</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-yield/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-yield/https:/cdn-images-1.medium.com/max/2000/1*5O-H6NtVnFCbf9bq9qK6ew.png" class="img-fluid"></p>
<p>DeFi is a large ecosystem with many different protocols, each offering different services and yield options. It can be thrilling to be on the hunt for the highest APY/APR (Annual Percentage Yields/Rates), still, it is essential to keep track of the sustainability of the source that pays out the yields so you don’t end up with unexpected losses. &gt; <strong><em>If you don’t know where the yield comes from, then it comes from you </em></strong>— I don’t know who wrote this originally but it fits the subject very well</p>
<section id="services-that-create-value" class="level2">
<h2 class="anchored" data-anchor-id="services-that-create-value">Services that create value</h2>
<p>The most reliable source of yield is taxing a useful service. Services provide real value to people using them and users are willing to let the service have a fair share of the money that traffics through since this often translates to a better and more secure product. Some examples of sustainable crypto services:</p>
<ul>
<li><strong>Bitcoin</strong> is the most resilient global permissionless money ledger–to use it, you have to spend Bitcoin to pay for service fees</li>
<li><strong>Ethereum</strong> is the most secure platform to deploy services for DeFi and Web3 — to use it, you have to spend Ethereum to pay for service fees</li>
<li><strong>Chainlink</strong> is the largest oracle provider–to use it, you have to spend Chainlink</li>
</ul>
<p>In the above services, we can see the pattern of the “protocol access token” (read more at <a href="https://www.usv.com/writing/2016/08/fat-protocols/">fat procools</a>) which creates a sustainable long-term cycle that rewards everyone invested in the protocol which brings more interest to it and fuels ever-more building around it, but this is not the only way to achieve long-term protocol sustainability:</p>
<ul>
<li><strong>Curve</strong> largest DeFi stablecoins trading protocol. CRV token holders receive trading fees</li>
<li><strong>AAVE</strong> is a DeFi lending platform where users can either use their borrowing service (paying fees) and/or provide tokens that will be used as protocol liquidity (receiving fees)</li>
</ul>
<p>In this second pattern, services allow users to become holders and earn a share of the profits by holding (and often locking) a specific token. Notice that in both patterns there are functioning services that people are willing to use and pay fees, and this is where the “Yield” comes from: in BTC and ETH miners receive the fees paid by the service usage, and in DeFi protocols the token-holders and liquidity providers get those instead.</p>
<p>There are other ways to generate sustainable yield on-chain, most of them revolve around providing a financial service and charging for operational risks, for example: providing insurance, or liquidity, or creating a new derivative asset with extra utility (like cvxCRV makes veCRV tradeable for example). Sustainability can be achieved by many methods but understanding how it is actually achieved should be always clear and documented and preferably on-chain.</p>
</section>
<section id="zero-sum-games" class="level2">
<h2 class="anchored" data-anchor-id="zero-sum-games">Zero-sum games</h2>
<p>If yields are high and service usability is low, it means that the money used to incentivize a part of the service is not coming from the service itself, so if the external money source dries the service breaks because yields will tend to go to 0.</p>
<p>A potential problem with zero-sum games is that people may not realize they have entered one. Economic relations are built on trust and overall trust goes down when a large-scale protocol breaks the expectation of many people.</p>
<p>Zero-sum games can be a misnomer. Not everyone is guaranteed to win with no losses. Here is an example that has impacted any DeFi newbie:</p>
<ul>
<li>A new Dex is released: HentaiSwap!! Also releases the $HENTAI token!</li>
<li>$HENTAI token gets trading fees from HentaiSwap!</li>
<li>You can stake $HENTAI for 420% APY! Just buy some and stake!!</li>
</ul>
<p>Red flags users should keep an eye on:</p>
<ul>
<li>Why do we need another Dex? What does this service does that other doesn’t? Why would someone unstake liquidity from Uniswap/Sushiswap/Curve and put it in HentaiSwap?</li>
<li>How much fees is this DEX generating? How close is it to 420%? Take a look at all other swap protocols: how much they pay for the same pairs when they have a lot of liquidity to compare fees/returns?</li>
<li>Why should I stake $HENTAI? Why is someone paying me to hold this token? Seems like they want me to buy this token to make the price go up for previous bag holders to profit, but what can I do with it besides just selling back staking profits to the market?</li>
<li>And finally: How many $HENTAI tokens the team mint for themselves in order to sell when market speculation is making it worth something in the market? Who is gonna lose money when they do?</li>
</ul>
</section>
<section id="positive-sum-games" class="level2">
<h2 class="anchored" data-anchor-id="positive-sum-games">Positive-sum games</h2>
<p>If in Zero-sum games someone always takes a loss for another to take a win, in positive-sum games both parties feel like they end up with more value after a transaction. Any service that provides value to users while charging a fair fee creates a positive-sum environment.</p>
<p>Let’s say we have 2 parties wanting to transact:</p>
<ul>
<li>a <strong>User</strong> needs to exchange 1 ETH to $2000 USD in order to pay rent</li>
<li>a <strong>Developer</strong> maintains a smart contract that allows exchange between both coins</li>
</ul>
<p>The transaction happens roughly like:</p>
<ol type="1">
<li>Maintaining software is a costly and constant exercise, so in order to keep the service running the <strong>Developer</strong> charges 0.5% swap fees</li>
<li><strong>User</strong> can’t pay bills with ETH and needs it converted, and every exchange will charge a swap fee to maintain their services</li>
<li>So the user swaps 1 ETH in the developer service and receives $1990, knowing that $10 went to pay for service maintenance</li>
</ol>
<p>Let’s take a snapshot of both parties before and after the transaction:</p>
<p><strong>Before</strong></p>
<ul>
<li>User: Had 2000$ in an illiquid asset that needed to become liquid for daily usage</li>
<li>Developer: Had 0$ income from this user to maintain service</li>
</ul>
<p><strong>After</strong></p>
<ul>
<li>User: Had 1990$ in a liquid asset that can be used to pay bills</li>
<li>Developer: Had 10$ income from this user to maintain service</li>
</ul>
<p>I hope that this example makes it clear that both parties feel like winning from this transaction. The 10$ that the user paid for the service is not seen as a loss from the user perspective because a service was provided and the fee that was paid allows this service to be here the next time the user needs it again.</p>
</section>
<section id="yearning-for-yearn" class="level2">
<h2 class="anchored" data-anchor-id="yearning-for-yearn">Yearning for Yearn</h2>
<p>When I joined DeFi I lost a lot of the money I put into rugs and zero-sum games, and I’m not alone in having this sort of experience. After learning more about the fundamentals of both trading and DeFi, I figured out the most important thing is understanding the underlying value of the assets and the quality of the protocols I am investing into, <strong>but there is a huge problem</strong>: the complexity to audit smart contracts and tokenomics is very high since it requires extensive financial, programming, and security experience, and for the average user the research might be too extensive for a “simple investment”, and for portfolios that have many tokens this research only gets more extensive.</p>
<p><a href="https://medium.com/iearn/yearn-finance-explained-what-are-vaults-and-strategies-96970560432">Yearn Vaults + Strategies</a> provides “DeFi investment experts as a service”: Yearn can focus on maintaining strategists that generate yield for tokens and the user can focus on which tokens they want to hold. This way any other protocol or even retail user can have a channel that safely generates yields for their funds and Yearn charges fees on top of yield profits, a positive-sum scenario, <a href="https://medium.com/iearn/diving-into-yearn-metrics-8c3fb0520927">fully transparent</a> on-chain.</p>
<p>DeFi still has a long road to run in order to become digestible to the average FIAT investor, today it relies heavily on yield-aggregators to minimize some of the common risks, if you will invest your money <em>(or even more sensitive: other people’s money)</em> today make sure you know exactly where your investment’s yield comes from so you don’t become another person’s yield.</p>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-yield/index.html</guid>
  <pubDate>Fri, 24 Jun 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Yearn Vault Tokens as collateral</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-vaults-as-collateral/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-vaults-as-collateral/https:/cdn-images-1.medium.com/max/3000/1*lzy_7hlr_RX7nSVKn8B_fg.png" class="img-fluid"></p>
<p>Using tokens as collateral is a primitive building block in DeFi: “collateral” means that the tokens are locked, and only to be unlocked once agreed-upon conditions are met (such as the repayment of a loan). An everyday use case is seen in lending platforms, which allow users to lock tokens to borrow other ones. <a href="https://docs.yearn.finance/getting-started/products/yvaults/vault-tokens">yvTokens can represent any yearn vault</a>, which has many valuable properties when used as collateral:</p>
<section id="they-are-yield-generating" class="level3">
<h3 class="anchored" data-anchor-id="they-are-yield-generating">They are yield generating</h3>
<p>Any yvToken is the yield-bearing version of a token deposited in it, so when locked up as collateral it will still keep generating yield. A single vault token can run up to 20 yield-generating strategies. All Vaults at <a href="https://yearn.finance/#/vaults">yearn.finance</a> run “up-only” strategies.</p>
</section>
<section id="the-safest-yields-in-defi" class="level3">
<h3 class="anchored" data-anchor-id="the-safest-yields-in-defi">The safest yields in DeFi</h3>
<p>Vaults strategies are constantly audited to practice the highest security standards of DeFi. <em>Grow with us one day at a time.</em></p>
<ul>
<li><p><a href="https://docs.yearn.finance/developers/v2/DEPLOYMENT">Vaults &amp; Strategies Deployment Security Guidelines</a></p></li>
<li><p><a href="https://messari.io/article/yearning-for-yearn">Yearning for Yearn: Messari Report</a></p></li>
<li><p><a href="https://github.com/yearn/yearn-security/blob/master/SECURITY.md">Yearn Security Processes</a></p></li>
</ul>
</section>
<section id="theyre-erc20-compatible" class="level3">
<h3 class="anchored" data-anchor-id="theyre-erc20-compatible">They’re ERC20 compatible</h3>
<p>Yearn Vaults are <a href="https://ethereum.org/en/developers/docs/standards/tokens/erc-20/">ERC-20</a> compatible like any other commonly expected token. There is no code security overhead for developers to implement any yvToken as a new option for collateral.</p>
</section>
<section id="theyre-almost-100-liquid" class="level3">
<h3 class="anchored" data-anchor-id="theyre-almost-100-liquid">They’re almost 100% liquid</h3>
<p>Strategies that lock tokens are kept to an absolute minimum amount of time. To learn more about strategies and funds allocation visit <a href="https://yearn.watch/">yearn.watch</a> for a look into what’s going on.</p>
</section>
<section id="split-fees-with-yearn" class="level3">
<h3 class="anchored" data-anchor-id="split-fees-with-yearn">Split fees with Yearn</h3>
<p>Yearn’s fee-sharing <a href="https://docs.yearn.finance/partners/introduction">partner program</a> allows you to earn up to 50% of the fees generated on your users’ TVL every month. <em>We are in this together!</em></p>
</section>
<section id="theyre-transparent" class="level3">
<h3 class="anchored" data-anchor-id="theyre-transparent">They’re transparent</h3>
<p>What you see on-chain is what you get. <em>For real-time protocol data, see:</em></p>
<ul>
<li><p><a href="https://vaults.yearn.finance/">yearn vaults descriptions</a></p></li>
<li><p><a href="https://yearn.watch/">yearn.watch</a></p></li>
<li><p><a href="https://yearn.vision/">yearn.vision</a></p></li>
<li><p><a href="https://dune.com/projects/yearn">yearn at dune analytics</a></p></li>
<li><p><a href="https://defillama.com/yields/token/YFI">yearn at defillama</a></p></li>
<li><p><a href="https://medium.com/iearn/diving-into-yearn-metrics-8c3fb0520927">diving into yearn metrics (article)</a></p></li>
</ul>
</section>
<section id="projects-using-yvtokens-as-collateral" class="level2">
<h2 class="anchored" data-anchor-id="projects-using-yvtokens-as-collateral">Projects using yvTokens as collateral:</h2>
<p>Here is a list of all current partners that build on yearn:</p>
<ul>
<li><p>Alchemix: <a href="https://alchemix.fi/">https://alchemix.fi/</a></p></li>
<li><p>Abracadabra: <a href="https://abracadabra.money/">https://abracadabra.money/</a></p></li>
<li><p>Inverse Finance: <a href="https://www.inverse.finance/">https://www.inverse.finance/</a></p></li>
<li><p>Element: <a href="https://www.element.fi/">https://www.element.fi/</a></p></li>
<li><p>Gearbox: <a href="https://gearbox.fi/">https://gearbox.fi/</a></p></li>
<li><p>QiDao: <a href="https://app.mai.finance/">https://app.mai.finance/</a></p></li>
<li><p>Ribbon: <a href="https://www.ribbon.finance/">https://www.ribbon.finance/</a></p></li>
<li><p>Sturdy: <a href="https://sturdy.finance/">https://sturdy.finance/</a></p></li>
<li><p>Tempus: <a href="https://tempus.finance/">https://tempus.finance/</a></p></li>
</ul>
<p>This text was first made for <a href="https://docs.yearn.finance/partners/introduction">Yearn Partner Docs</a>. If you are a partner building with Yearn we’d like to hear about what you are doing! Contact us through our <a href="https://yearnfinance.typeform.com/to/uP7xOJUN">partners form</a> or reach out to us in our <a href="http://discord.yearn.finance/">discord at #vaults</a>!</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-vaults-as-collateral/https:/cdn-images-1.medium.com/max/2000/1*D2hbHlUBnVDjkqNtqEmJFQ.jpeg" class="img-fluid"></p>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-vaults-as-collateral/index.html</guid>
  <pubDate>Thu, 19 May 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Yearn Finance explained: What are Vaults and Strategies?</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-finance-explained/index.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-finance-explained/https:/cdn-images-1.medium.com/max/8472/1*w_yyTn8XhKgxyiLPiEyVCw.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Simple Ethereum Yearn Vault Example</figcaption>
</figure>
</div>
<p><a href="http://yearn.finance/">Yearn Finance</a> is a suite of Decentralized Finance (DeFi) products that provides yield generation, lending aggregation, and more on the blockchain. Yearn is maintained by various independent developers and is <a href="https://medium.com/iearn/yearn-governance-explained-proposals-yfi-token-and-execution-113ec86c3a3f">governed by $YFI holders.</a></p>
<p>The current user-facing core product of Yearn is <strong>yVault</strong>, which provides automated yield generation to many different crypto assets, each driven by one or more <strong>Strategies.</strong> The yVault design is open-ended, which means other protocols can build and innovate on top of Yearn, like the <a href="https://twitter.com/MarcoWorms/status/1483223651684081670">Abracadabra + Yearn case</a></p>
<section id="yearn-vaults-yvaults" class="level2">
<h2 class="anchored" data-anchor-id="yearn-vaults-yvaults">Yearn Vaults (yVaults)</h2>
<p>The short way to name a Yearn Vault is <strong>yVault</strong>. In Yearn’s current version (v2) these are the characteristics of a yVault:</p>
<ul>
<li><p><strong>The token you deposit in a yVault is the token you’ll receive yield</strong>, always automatically compounded into the yVault</p></li>
<li><p><strong>A yVault may have many active strategies at the same time</strong>. A yVault may change its strategies capital allocation when it deems necessary</p></li>
<li><p>Unlike many other yield aggregators, <strong>there are no deposit/withdrawal fees</strong> charged to the user</p></li>
<li><p><strong>yVaults tokens implement the ERC20 standard</strong>, this means that they can be easily moved between wallets and markets and can be used by any app that communicates with this standard (like decentralized exchanges).</p></li>
</ul>
<p>Yearn Vault tokens are named “yvTokens”. yvETH represents a deposit position in the Ethereum vault, yvDAI in the DAI vault, yvUSDC in the USDC vault, etc.</p>
</section>
<section id="strategies-and-strategists" class="level2">
<h2 class="anchored" data-anchor-id="strategies-and-strategists">Strategies and Strategists</h2>
<p><strong>Strategists</strong> are people that build one or more underlying <strong>Strategies </strong>for yVaults</p>
<p><a href="https://docs.yearn.finance/developers/v2/getting-started">Anyone can build a Strategy</a>, but in order to get it added to a yVault, the strategist needs to pass the strategy through <a href="https://docs.yearn.finance/developers/v2/getting-started#overview-of-our-vetting-process">the strategy vetting process</a> which includes concept vetting, code review, security review, and Ethereum mainnet testing.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-finance-explained/https:/cdn-images-1.medium.com/max/13056/1*SpI9Okc__uDLVlq_Yc8wQw.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><a href="https://docs.yearn.finance/developers/v2/getting-started#overview-of-our-vetting-process">Strategy Vetting Process</a></figcaption>
</figure>
</div>
<p>For their efforts, strategists are rewarded with a portion of the strategy’s performance fee.</p>
<ul>
<li><p>Up to 10% of the generated yield fees by a specific strategy (performance fee) goes to the strategist</p></li>
<li><p>10% of the generated yield fees by all strategies (performance fee) goes to the Yearn DAO treasury.</p></li>
<li><p>Over the year 2% of the vault’s total assets are taken as fees which go to Yearn to pay for expenses like gas, developer grants, and other services.</p></li>
</ul>
<p>Now that we know what yVaults and Strategies are, let’s dig a bit deeper into how their inner workings</p>
</section>
<section id="diving-deeper-into-vaults-and-strategies" class="level2">
<h2 class="anchored" data-anchor-id="diving-deeper-into-vaults-and-strategies">Diving Deeper into vaults and Strategies</h2>
<section id="breaking-down-one-strategy" class="level3">
<h3 class="anchored" data-anchor-id="breaking-down-one-strategy">Breaking down one strategy</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-finance-explained/https:/cdn-images-1.medium.com/max/2048/0*n4v8MB5KSs1FspkJ.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Thanks <a href="https://twitter.com/finematics">Finematics</a> for this image!</figcaption>
</figure>
</div>
<p>The above image is an overview of the Ethereum vault strategy on a version 1 yVault. yVaults are now in version 2 and can handle multiple strategies at the same time, but this example will focus on a single strategy. There is an <a href="https://finematics.com/yearn-vaults-eth-vault-explained/">entire Finematics post and video</a> on how this works in case you want to dive deeper!</p>
<p>In this example, we can see how a strategy may use other vaults! In the Ethereum v1 yVault strategy:</p>
<ul>
<li><p>When a user deposits ETH the ETH is then lent at MakerDAO as collateral</p></li>
<li><p>The collateral is used to borrow DAI</p></li>
<li><p>The borrowed DAI is deposited into the DAI yVault</p></li>
</ul>
<p>So then we use ETH to borrow DAI and generate yield using the DAI yVault strategy.</p>
</section>
<section id="howwhen-does-yearn-move-the-funds-inside-the-vault-and-charge-fees" class="level3">
<h3 class="anchored" data-anchor-id="howwhen-does-yearn-move-the-funds-inside-the-vault-and-charge-fees">How/when does Yearn move the funds inside the vault and charge fees?</h3>
<p>One of the key functions of a strategy is called “harvest”. When called, it triggers a rebalancing process where profit is realized and reinvested back into the strategy.</p>
</section>
<section id="how-does-yearn-guarantee-a-strategy-always-generates-tokens-instead-of-losing-them" class="level3">
<h3 class="anchored" data-anchor-id="how-does-yearn-guarantee-a-strategy-always-generates-tokens-instead-of-losing-them">How does Yearn guarantee a strategy always generates tokens instead of losing them?</h3>
<p>Strategists use a number of tools to monitor on-chain data to ensure strategy health. One of those tools is <a href="https://yearn.watch/">Yearn Watch</a> which presents a nice UI with many key metrics live from the blockchain.</p>
<p>Just as important as monitoring strategies <em>after</em> they go to production is the due diligence done <em>before</em> they are sent to production with real money. The Yearn strategy team also has a “Strategy Scoring System” which evaluates the risk level for the underlying strategies used, we hope to expose this better to our users in our documentation and apps in the future!</p>
</section>
<section id="strategies-have-constraints-learned-by-experience-with-past-vaults" class="level3">
<h3 class="anchored" data-anchor-id="strategies-have-constraints-learned-by-experience-with-past-vaults">Strategies have constraints learned by experience with past vaults</h3>
<ul>
<li><p>Vault funds should go “up only” and not down</p></li>
<li><p>Avoid Impermanent Loss (e.g.&nbsp;don’t provide YFI/ETH liquidity in a liquidity pool)</p></li>
<li><p>Users should be able to withdraw at any time (so the strategy can’t timelock all vault funds, only a small fraction)</p></li>
<li><p>Use only protocols with a proven track record and well-understood, immutable contracts</p></li>
</ul>
</section>
<section id="keep3rs-and-yvaults" class="level3">
<h3 class="anchored" data-anchor-id="keep3rs-and-yvaults">Keep3rs and yVaults</h3>
<p>Yearn and <a href="https://docs.keep3r.network/">Keep3r</a> have a really strong synergy: Keep3r is used by yVaults to automate common vault tasks. For example, Keepers <em>(people available in the Keep3r network to do jobs when you need to) </em>could benefit from calling the <em>harvest</em> function whenever conditions make sense for the yVault, like:</p>
<ul>
<li><p>A strategy has earned X amount of profit</p></li>
<li><p>It has been Y amount of time since the last harvest</p></li>
<li><p>There is no loss that will happen if harvest is called</p></li>
</ul>
<p>And there are many cases like this, another example would be a Keeper calling for a rebalancing of the vault assets allocation in order to avoid liquidation in some part of the strategy</p>
<p><img src="https://marcoworms.github.io/blog/posts/yearn-finance-explained/https:/cdn-images-1.medium.com/max/2000/0*RU8sUADKESZxJ92f.jpg" class="img-fluid"></p>
</section>
<section id="building-strategies" class="level3">
<h3 class="anchored" data-anchor-id="building-strategies">Building Strategies</h3>
<ul>
<li><p><strong>yVaults </strong>are programmed in <a href="https://vyper.readthedocs.io/en/stable/">**Vyper</a>**</p></li>
<li><p><strong>Strategies </strong>are programmed in <a href="https://docs.soliditylang.org/en/v0.8.11/">**Solidity</a>** &gt; <em>You don’t need to be an advanced developer or financial analyst to become a strategist!</em></p></li>
</ul>
<p>While the maintenance of yVaults is a more complex development matter, Strategies were designed for anyone to be able to write one, the requirement for a good strategy is:</p>
<ul>
<li><p>Knowledge about the blockchain ecosystem you’ll deploy in, which can be acquired by doing in-depth research of tokenomics and documentation for all tokens used in the strategy itself.</p></li>
<li><p>Solidity programming knowledge similar to <a href="https://cryptozombies.io/">completing Level 4 on CryptoZombies</a></p></li>
<li><p>Know how to get around <a href="https://git-scm.com/">git</a>, <a href="https://eth-brownie.readthedocs.io/en/stable/">eth-brownie</a>, and <a href="https://trufflesuite.com/ganache/">ganache</a>.</p></li>
<li><p>After understanding the basics of the above tools you are ready to <a href="https://github.com/yearn/brownie-strategy-mix">copy our strategy template</a>! The functions you should start changing in this template in order to build with your own first strategy are <em>prepareReturn</em>, <em>adjustPosition</em>, and <em>liquidatePositon.</em></p></li>
</ul>
<p>One last thing: after a strategy is endorsed by Yearn and put in production you should help monitor it!</p>
</section>
</section>
<section id="learn-more" class="level2">
<h2 class="anchored" data-anchor-id="learn-more">Learn more</h2>
<p>If you want more content about Vaults and Strategies check out these resources! They all helped me understand the concepts explained in this article, also Yearn contributooooors are the kindest people and always help me find the best resource to get quality information on each subject.</p>
<ul>
<li><p><a href="https://vaults.yearn.finance/">yVaults descriptions</a></p></li>
<li><p><a href="https://docs.yearn.finance/getting-started/products/yvaults/overview">yVault/ Docs</a></p></li>
<li><p><a href="https://www.youtube.com/watch?v=NVR3teJw0Y0">Become a mighty strategist</a></p></li>
<li><p><a href="https://finematics.com/yearn-vaults-eth-vault-explained/">External video/article from Finematics about yVaults</a></p></li>
<li><p><a href="https://medium.com/iearn/yearn-partners-building-with-yvaults-4cd042ea092">Partners building with yVaults</a></p></li>
<li><p><a href="https://docs.yearn.finance/developers/v2/hacking-with-yearn">Hacking with Yearn</a></p></li>
<li><p><a href="https://docs.yearn.finance/developers/v2/additional-resources">Additional Resources from Yearn</a></p></li>
</ul>
</section>
<section id="take-the-blue-pill" class="level2">
<h2 class="anchored" data-anchor-id="take-the-blue-pill">Take the Blue Pill!</h2>
<p>If you loved the Vaults and Strategies abstraction:</p>
<ul>
<li><p>Stay updated with our latest news at the <a href="https://twitter.com/iearnfinance">Yearn Finance Twitter</a></p></li>
<li><p>Read our <a href="https://thebluepill.eth.link/">Blue Pill Book</a> outlining Yearn’s vision and history</p></li>
<li><p>And see about <a href="https://yearnfinance.notion.site/Join-Us-3e9c95b9bd7846a18c0f1cbe6ab05eda">Joining the Yearn team</a>!</p></li>
</ul>
<p><em>Producer: <a href="https://twitter.com/MarcoWorms">Worms</a>, Reviewers: <a href="https://twitter.com/wavey0x">Wavey</a></em></p>
<p><em>Thanks Farrah and Weaver for helping me onboard Yearn and connecting me with awesome people and resources that allowed me to write this first article here!</em></p>
</section>
<section id="made-in-yearn.finance" class="level2">
<h2 class="anchored" data-anchor-id="made-in-yearn.finance">Made in <a href="http://yearn.finance/">yearn.finance</a></h2>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-finance-explained/index.html</guid>
  <pubDate>Thu, 19 May 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Yearn Vaults v3</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-vaults-v3/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-vaults-v3/https:/cdn-images-1.medium.com/max/2880/1*CYZe-atKXG5s8vPWmqorMQ.png" class="img-fluid"></p>
<p>As we look ahead to the exciting changes v3 Vaults are bringing for both developers and degens, I spoke with the Yearn contributor leading the v3 design team. I was surprised to learn about the number of new features! Initially, our conversation started around the <a href="https://twitter.com/iearnfinance/status/1511444220850184197">ERC-4626 standard</a> which standardizes vaults across protocols but it turns out that’s just the tip of the iceberg.</p>
<section id="the-purpose-of-v3-is-to-improve-all-core-aspects-of-yearn-vaults" class="level2">
<h2 class="anchored" data-anchor-id="the-purpose-of-v3-is-to-improve-all-core-aspects-of-yearn-vaults">The purpose of v3 is to improve all core aspects of Yearn Vaults</h2>
<section id="security" class="level3">
<h3 class="anchored" data-anchor-id="security">Security</h3>
<p>Maintain Yearn’s position as best in class for DeFi security practices.</p>
</section>
<section id="development" class="level3">
<h3 class="anchored" data-anchor-id="development">Development</h3>
<p>Reduce friction for creating strategies, and allow a wider range of strategies for a vault.</p>
</section>
<section id="automation" class="level3">
<h3 class="anchored" data-anchor-id="automation">Automation</h3>
<p>Allow more vault functions to be automated besides <em>harvest</em>, getting one step closer to the dream of the <em>100% automated vault</em>.</p>
</section>
</section>
<section id="in-order-to-tackle-the-v3-scope-the-developers-are-working-on-the-following" class="level2">
<h2 class="anchored" data-anchor-id="in-order-to-tackle-the-v3-scope-the-developers-are-working-on-the-following">In order to tackle the v3 scope, the developers are working on the following:</h2>
<section id="increase-modularity" class="level3">
<h3 class="anchored" data-anchor-id="increase-modularity">Increase modularity</h3>
<p>Implementing code that is simple in a robust way in the yVault contract, which allows smarter logic to be placed in modules that can be iterated.</p>
<p>Adopting the ERC-4626 standard which allows our vaults to be compatible with any other protocols that follow it.</p>
</section>
<section id="improve-strategy---vault-relation" class="level3">
<h3 class="anchored" data-anchor-id="improve-strategy---vault-relation">Improve Strategy &lt;-&gt; Vault relation</h3>
<p>Allow for simpler strategy testing, deploying, and overall including more tools to tackle a wider range of yield possibilities, including locking funds, riskier strategies, and multichain strategies.</p>
</section>
<section id="create-new-products" class="level3">
<h3 class="anchored" data-anchor-id="create-new-products">Create new products</h3>
<p>Create new products like <em>Junior Tranches</em> which enables riskier strategies and allows users to choose a higher-risk deposit option.</p>
<p>Allow more than 1 vault for each token type</p>
<p>Allow vaults to be controlled by multisigs that can be shared with partner protocols</p>
</section>
</section>
<section id="flexibility" class="level2">
<h2 class="anchored" data-anchor-id="flexibility">Flexibility</h2>
<p>v3 will give developers and strategists more flexibility for shipping code to production. It increases the modularization of the contracts and also opens doors for new ways to deposit in vaults.</p>
<p>We’ll also see a better automatization of peripheral contracts: in v2 only the <em>harvest</em> functions are automated and, in v3 we’ll get closer to a <em>100% automated vault</em> because now more important functions are easier to automate with the <a href="https://keep3r.network/">Keep3r Network.</a> &gt; <strong><em>We want to move fast and not break things</em></strong> <em>— Skeletor</em></p>
</section>
<section id="strategies-on-steroids" class="level2">
<h2 class="anchored" data-anchor-id="strategies-on-steroids">Strategies on steroids</h2>
<p>v2 Vaults had a limit of 20 strategies per vault, in v3 this limit will be increased. Additionally, riskier strategies will now follow a contract model analogous to the <a href="https://corporatefinanceinstitute.com/resources/knowledge/finance/junior-tranche-debt/">Senior/ Junior Tranches</a>.</p>
<p>Riskier strategies will now have a <em>Junior Tranche</em> contract, meaning the user will first deposit tokens into a vault and can then choose to deposit the vault tokens into a junior tranche contract for a higher-risk/higher-reward option. Users can also choose specific strategies to focus on. This is an optional feature that people with a higher risk appetite might want to explore.</p>
<p>Another thing the v3 team is working on is how to decentralize <a href="https://medium.com/iearn/how-new-yearn-vault-strategies-are-endorsed-8c0e0870790d">strategy endorsement</a>. Today many security audit aspects at Yearn are centralized. But being able to decentralize this process would give more room to scale the product.</p>
<p>Further features focus on improving the overall usage of vaults by users, strategists, and developers, such as:</p>
<ul>
<li><p>ySwaps (the service that strategists use to make token swaps) is being optimized for gas efficiency.</p></li>
<li><p>v2 harvests take 6 hours for share-prices to go up, but in v3 the time is dynamic, improving MEV protection.</p></li>
<li><p>The increased modularity around vault’s processes allows us to make tighter partnerships with other protocols and build solutions more specialized to their cases.</p></li>
</ul>
</section>
<section id="vaults-code" class="level2">
<h2 class="anchored" data-anchor-id="vaults-code">Vaults code</h2>
<p>v2 vaults code is written in <a href="https://vyper.readthedocs.io/en/stable/">Vyper</a>, but v3 is built with <a href="https://docs.soliditylang.org/en/v0.8.13/">Solidity</a>.</p>
<p>Vyper is a solid language as proven by the v2 system, but has a smaller developer pool. Our decision to go with solidity was based, among other factors, on accessing the larger developer pool necessary for a critical project like this. We see a bright future for Vyper and will continue exploring it in Yearn for smart contracts, any of the modules around vaults can be done using it.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-vaults-v3/https:/cdn-images-1.medium.com/max/3050/0*vSNetKyTnctYtsZ6.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><a href="https://defillama.com/languages">Defillama blockchain programming language usage statistics</a></figcaption>
</figure>
</div>
<p>Statistics on coding languages used across blockchains can be monitored on <a href="https://defillama.com/languages">Defillama</a>, at the moment Vyper makes up around 10% and Solidity 69%. This reflects Solidity’s market dominance, and since we needed more contributors to ship v3 we chose the tech that would allow us to build an experienced team faster.</p>
</section>
<section id="the-future-awaits" class="level2">
<h2 class="anchored" data-anchor-id="the-future-awaits">The future awaits</h2>
<p>I’ve only scratched the surface of what’s to come in v3. Yearn contributors are also working on building a number of other exciting products and functionalities! <a href="https://yearnfinance.notion.site/Join-Us-3e9c95b9bd7846a18c0f1cbe6ab05eda">**Learn more about opportunities to join Yearn here!</a>**</p>
<section id="made-in-yearn.finance" class="level3">
<h3 class="anchored" data-anchor-id="made-in-yearn.finance">Made in <a href="https://yearn.finance/#/portfolio">yearn.finance</a></h3>


</section>
</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-vaults-v3/index.html</guid>
  <pubDate>Mon, 02 May 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Yearn governance explained: Proposals, $YFI token, and execution</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/yearn-governance/index.html</link>
  <description><![CDATA[ 




<p><img src="https://marcoworms.github.io/blog/posts/yearn-governance/https:/cdn-images-1.medium.com/max/4000/0*bjoGD9v3LmSWifUk.png" class="img-fluid"></p>
<p>Anyone can discuss or propose ideas in the Yearn’s <a href="https://discord.com/invite/6PNv2nF">Discord</a>, <a href="https://twitter.com/iearnfinance">Twitter</a>, <a href="https://www.reddit.com/r/yearn_finance">Reddit</a>, <a href="https://yearnfinance.notion.site/yearnfinance/Pool-of-Ideas-d75383ade9154d8bb6163388c6c2b39b">Pool of Ideas</a>, <a href="https://t.me/yearnfinance/">Telegram</a>, and <a href="https://gov.yearn.finance/">Governance Forum</a>. As proposals mature it becomes a structured vote in the Governance Forum where the <a href="https://www.coingecko.com/en/coins/yearn-finance">YFI token</a> is used as voting power.</p>
<ul>
<li><p>Token holders can vote at <a href="https://yearn.snapshot.page/#/">Yearn Snapshots Page</a>, there is no gas consumption in the voting transaction!</p></li>
<li><p>There is also a <a href="https://docs.yearn.finance/contributing/governance/proposal-repository">retired governance repository</a> which is now unused but can be explored to learn about YFI history!</p></li>
</ul>
<p>The most common type of proposals in the forum are Yearn Improvement Proposals (YIPs) but there are other types covered in the <a href="https://gov.yearn.finance/t/yip-61-governance-2-0/10460">current Yearn governance implementation (YIP-61)</a>:</p>
<ul>
<li><p><strong>Yearn Improvement Proposal (YIP):</strong> A proposal to execute any power delegated to YFI holders or outside the scope of enumerated powers</p></li>
<li><p><strong>Yearn Delegation Proposal (YDP):</strong> A proposal to change how a yTeam has power over a scope</p></li>
<li><p><strong>Yearn Signaling Proposal (YSP):</strong> A non-binding proposal to signal community feelings or intent on any issue</p></li>
</ul>
<section id="governance-scope" class="level2">
<h2 class="anchored" data-anchor-id="governance-scope">Governance: Scope</h2>
<p><a href="https://gov.yearn.finance/t/yip-61-governance-2-0/10460">YIP-61</a> determines how Yearn governance currently works: <a href="https://gov.yearn.finance/t/yip-61-governance-2-0/10460#yteams-9">yTeams</a> have delegated authority from YFI holders to utilize limited powers autonomously. Holding YFI allows one to have control over how the power is distributed among teams, YFI gives exclusive voting power to pass or deny changes that shift power dynamics within the protocol such as:</p>
<ul>
<li><p>Change Multisig or yTeams Signers</p></li>
<li><p>Ratify yTeams</p></li>
<li><p>Spend Treasury Funds</p></li>
<li><p>Set Protocol Fees</p></li>
<li><p>Change YFI contract</p></li>
</ul>
</section>
<section id="governance-proposal-template" class="level2">
<h2 class="anchored" data-anchor-id="governance-proposal-template">Governance: Proposal Template</h2>
<p>Anyone is able to create a new proposal at <a href="https://gov.yearn.finance/">Yearn Governance Forums</a>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-governance/https:/cdn-images-1.medium.com/max/2000/0*bo7legvlneeJ0jV5.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Interface to create a proposal at the forum</figcaption>
</figure>
</div>
<p>As established by <a href="https://gov.yearn.finance/t/yip-55-formalize-the-yip-process/7959">YIP-55</a> here is a standard way to write proposals:</p>
<section id="summary" class="level3">
<h3 class="anchored" data-anchor-id="summary"><strong>Summary</strong></h3>
<p>The outcome of the proposed change, written in a non-technical and accessible manner</p>
<p><strong>Status: </strong><em>not required but it helps everyone, one of the three below:</em></p>
<ul>
<li><p><strong>Discussion:</strong> This proposal is currently in the discussion phase. As per our voting rules outlined in YIP-55, it will be in discussion for at least 3 days with a non-binding forum poll to gauge sentiment before it can be assigned a YIP number and move to Snapshot for a binding vote</p></li>
<li><p><strong>Voting:</strong> This proposal is currently in the voting phase. Cast your vote on Snapshot. You can learn about our voting rules in YIP-55</p></li>
<li><p><strong>Passed:</strong> This proposal passed on April 25, 2021 at 7:00 UTC with 99.97% voting for</p></li>
</ul>
</section>
<section id="abstract" class="level3">
<h3 class="anchored" data-anchor-id="abstract"><strong>Abstract</strong></h3>
<p>A short (~200 words) description of the proposed change. Should clearly describe what happens if the proposal passes.</p>
</section>
<section id="motivation" class="level3">
<h3 class="anchored" data-anchor-id="motivation"><strong>Motivation</strong></h3>
<p>The current problem that made you write the change proposal</p>
</section>
<section id="specification" class="level3">
<h3 class="anchored" data-anchor-id="specification"><strong>Specification</strong></h3>
<p>A long description of how this proposal solves the problem, should describe how to implement</p>
</section>
<section id="poll" class="level3">
<h3 class="anchored" data-anchor-id="poll"><strong>Poll</strong></h3>
<p>A voting dynamic that is built in the governance forum to gauge the community sentiment on the proposal, should be greater than 50%</p>
</section>
</section>
<section id="governance-discussion" class="level2">
<h2 class="anchored" data-anchor-id="governance-discussion">Governance: Discussion</h2>
<p>There should be enough time (at least 3 days) for discussion so the proposal can be tackled from many angles by community members. Use discourse’s built-in Poll tool to gauge the community sentiment about the proposal before raising a formal vote, the poll should have at least 50% passing votes.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-governance/https:/cdn-images-1.medium.com/max/2000/0*bq2-a7J0itHFDVtK.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Example poll</figcaption>
</figure>
</div>
<p>Discussions ideally should take as long as it takes to clarify what was proposed to the community. Talking to different stakeholders <strong>before</strong> proposing something is a good way to measure sentiment and helps you introduce complex ideas with better support right from the start. An example of a proposal with excellent discussion is <a href="https://gov.yearn.finance/t/yip-57-funding-yearns-future/9319">YIP-57</a> which minted 6,666 YFI tokens beyond the 30,000 initial supply and had to align different types of stakeholders from DAO members to big YFI holders.</p>
</section>
<section id="governance-voting" class="level2">
<h2 class="anchored" data-anchor-id="governance-voting">Governance: Voting</h2>
<p>After the discussion step passed the proposal becomes a YIP (or maybe a YDP depending on its content) and will be put through the voting phase. To submit a vote at <a href="https://yearn.snapshot.page/#/">Yearn’s Snapshots Page</a> you need to hold at least 1 $YFI or ask someone to do it for you, if the proposal is solid this won’t be a barrier. Communicate with a forum mod to get an official number for the new YIP!</p>
<p>Voting power corresponds 1:1 to how much $YFI a voter has. So a wallet with 10 $YFI has 10x the voting power as someone with 1 $YFI.</p>
<p>Voting takes at least 5 days and needs more than 50% passing votes, there is no quorum to be met as outlined by <a href="https://gov.yearn.finance/t/yip-55-formalize-the-yip-process/7959">YIP-55</a>: “quorum requirement might be difficult to quantify and could lead to time-consuming rallying of apathetic voters”</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-governance/https:/cdn-images-1.medium.com/max/2038/0*2Vz6I_pz9xQjzpXw.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">How it looks like to vote at <a href="https://snapshot.org/#/">snapshot.org</a></figcaption>
</figure>
</div>
<p>Holding or staking YFI in the following places allows you to vote:</p>
<ul>
<li><p>Your wallet</p></li>
<li><p>YFI yVault V2 (equivalent to holding the yvYFI token)</p></li>
<li><p>Balancer YFI/WETH LP token</p></li>
<li><p>Uniswap YFI/WETH LP token</p></li>
<li><p>Sushiswap YFI/WETH LP token staked in MasterChef</p></li>
<li><p>MakerDAO YFI collateral</p></li>
<li><p>Unit Protocol YFI collateral</p></li>
<li><p>Bancor</p></li>
</ul>
</section>
<section id="governance-conclusion-execution" class="level2">
<h2 class="anchored" data-anchor-id="governance-conclusion-execution">Governance: Conclusion &amp; Execution</h2>
<p>If the voting has passed with over 50% votes Yearn DAO must execute it. The way <a href="https://yearnfinance.notion.site/yearnfinance/Welcome-to-Yearn-Finance-26d6c4210e3e405c9f02f84ba567a249">Yearn DAO</a> works is not like a top-down command &amp; control company, so it won’t enforce or obligate a team or any individual to execute the proposal. The DAO will ensure that the correct incentives are set for the proposal to be executed (for example allocate treasure to pay for work done by contributors)</p>
<p>Recently 2 YIPs were passed and are being executed by Yearn as I write this piece:</p>
<ul>
<li><p><a href="https://gov.yearn.finance/t/yip-65-evolving-yfi-tokenomics/11994"><strong>YIP-65: </strong>Evolving YFI Tokenomics</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-66-streamlining-contributor-compensation/12247"><strong>YIP-66: </strong>Streamlining contributor compensation</a></p></li>
</ul>
</section>
<section id="fair-launch-of-yfi" class="level2">
<h2 class="anchored" data-anchor-id="fair-launch-of-yfi">Fair launch of YFI</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/yearn-governance/https:/cdn-images-1.medium.com/max/2000/0*xaIDfgO-0SViWeaw.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Taken from one of Cronje’s posts</figcaption>
</figure>
</div>
<p><a href="https://medium.com/@andrecronje">Andre Cronje</a> was the first builder of Yearn and what he sparked became a DAO with now over 200 active participants. This is only possible to exist as is today because Cronje gave away every inch of power he had over the protocol, and the way he did it was through YFI. Whoever used Yearn services and ecosystem in the early days received this power, and you can find information on how this process happened in these posts:</p>
<ol type="1">
<li><p><a href="https://medium.com/iearn/yfi-df84573db81">**YFI</a> **<em>(Earning YFI is simple, provide liquidity to one of the platforms)</em></p></li>
<li><p><a href="https://medium.com/iearn/earning-yfi-y-curve-fi-53b5fd347f0f">**Earning YFI curve.fi/y</a> **<em>(Earn YFI by providing liquidity to curve)</em></p></li>
<li><p><a href="https://medium.com/iearn/yfi-rewards-pool-810ef9256ec6">**YFI rewards pool</a>** <em>(Reward pool for burning YFI)</em></p></li>
<li><p><a href="https://medium.com/iearn/pool-3-meta-yield-governance-58f68e6d2f19">**Pool #3 Meta Yield Governance</a> **<em>(Pool that rewarded many things including participating in governance)</em></p></li>
</ol>
</section>
<section id="additional-resources" class="level2">
<h2 class="anchored" data-anchor-id="additional-resources">Additional Resources</h2>
<p>If you are looking for inspiration to make a proposal you can take a look at the following YIPs which had extensive discussions and changed power dynamics within the protocol:</p>
<ul>
<li><p><a href="https://gov.yearn.finance/t/yip-32-remove-yfi-burning/1907"><strong>YIP 32: </strong>Remove YFI burning</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-36-system-rewards-as-operational-capital/2311"><strong>YIP 36: </strong>System Rewards as Operational Capital</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-41-temporarily-empower-multisig/3630/2"><strong>YIP 41: </strong>Temporarily Empower Multisig</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-51-set-vault-v2-fee-structure/7752"><strong>YIP-51: </strong>Set Vault v2 fee structure</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-52-make-strategist-skin-in-game-partner-for-make-benefit-of-glorious-brain-of-yearn/7856"><strong>YIP-52: </strong>Make Strategist Skin in Game Partner for Make Benefit of Glorious Brain of Yearn</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-54-formalize-operations-funding/7956"><strong>YIP-54: </strong>Formalize Operations Funding</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-55-formalize-the-yip-process/7959"><strong>YIP-55: </strong>Formalize the YIP Process</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-56-buyback-and-build/8929"><strong>YIP-56: </strong>Buyback and Build</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-57-funding-yearns-future/9319"><strong>YIP-57: </strong>Funding Yearn’s Future</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-61-governance-2-0/10460"><strong>YIP-61: </strong>Governance 2.0</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-65-evolving-yfi-tokenomics/11994"><strong>YIP-65: </strong>Evolving YFI Tokenomics</a></p></li>
<li><p><a href="https://gov.yearn.finance/t/yip-66-streamlining-contributor-compensation/12247"><strong>YIP-66: </strong>Streamlining contributor compensation</a></p></li>
</ul>
<p><em>Producer: <a href="https://twitter.com/MarcoWorms">Worms</a></em>, *Reviewer: <a href="https://twitter.com/tracheopteryx">*Tracheopteryx</a></p>
</section>
<section id="made-in-yearn.finance" class="level2">
<h2 class="anchored" data-anchor-id="made-in-yearn.finance">Made in <a href="http://yearn.finance/">yearn.finance</a></h2>


</section>

 ]]></description>
  <category>english</category>
  <category>yearn</category>
  <guid>https://marcoworms.github.io/blog/posts/yearn-governance/index.html</guid>
  <pubDate>Tue, 19 Apr 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Setup notifications for blockchain transactions with Tenderly</title>
  <dc:creator>Marco Guaspari Worms</dc:creator>
  <link>https://marcoworms.github.io/blog/posts/tenderly-notifications/index.html</link>
  <description><![CDATA[ 




<p>In <a href="https://medium.com/iearn/yearn-finance-partners-with-tenderly-to-supercharge-development-debugging-incident-analysis-6489260298a5">the article where Yearn announced a partnership with Tenderly</a> there was a section where we said: &gt; “Tenderly has built-in customizable alerts that allow even novice users to create alerts on virtually any on-chain event.”</p>
<p>A Yearn contributor reached out to learn more about this, and I think it’s a great opportunity to showcase this feature! Let’s start by taking a look at which networks can we use with Tenderly besides Ethereum Mainnet:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*Wl1GFyFM0A_rsKjO.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Networks supported by Tenderly</figcaption>
</figure>
</div>
<p>I’m gonna explore the <strong>“Monitoring -&gt; Alerting”</strong> service located at <a href="https://dashboard.tenderly.co/">Tenderly’s dashboard</a> sidebar after logging into any project:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*mG1NxKBKDjOy2OJ5.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Sidebar on the left side after logged-in</figcaption>
</figure>
</div>
<p>There is a caveat to this service about free usage that will show up when you open the Alerting page: &gt; <em>You’ll receive a batch of alerts that happened over 15 minutes. Upgrade your plan to Tenderly Pro/Dev to receive real-time alerts</em></p>
<p>For testing, this isn’t a problem you so can proceed with the free version. For a more robust usage of alerts, you’ll have to upgrade your account.</p>
<p>Let’s start by checking everything can we do when trying to <strong>create a new alert. </strong>The article won’t explore all possibilities so take a look at them to understand the best usage for your needs:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*ivY6LieHeBRlNGvI.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Create alert</figcaption>
</figure>
</div>
<ul>
<li><strong>Alert Type</strong> will be the conditions we’ll set for a chain event to trigger a notification:</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*4o1A4-U8GtdH3AAL.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">all Alert Types</figcaption>
</figure>
</div>
<ul>
<li><strong>Alert Target</strong> will be the contract monitored for the above events and conditions:</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*NwaWo4VDNEmiOBU5.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">all Alert Targets</figcaption>
</figure>
</div>
<ul>
<li><strong>Alert Destinations</strong> will be the places that will receive notifications when the above contract meets the conditions for an alert:</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*lVZTp3HG0637k3H1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">all Alert Destinations</figcaption>
</figure>
</div>
<p>Before creating a new alert we must first:</p>
<ul>
<li><p>Decide which events of which contract we want to be notified about</p></li>
<li><p>Add the contract we want to listen to in the “Contracts” tab, so we’ll be able to target it in step 2</p></li>
<li><p>Connect with destinations that will receive the messages (we’ll use telegram in this guide) so we’ll be able to send notifications to it in step 3</p></li>
</ul>
<p>Now let’s get started!</p>
<section id="add-telegram-as-a-destination" class="level2">
<h2 class="anchored" data-anchor-id="add-telegram-as-a-destination">Add Telegram as a destination</h2>
<p>In the alerting tab, go to “Destinations” on the top menu and click on “Telegram”:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*zssrqIaeZdmRlLq1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Add Telegram as destination</figcaption>
</figure>
</div>
<p>Label it and follow the instructions to allow the bot to send you messages:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*Hc-GKGgdwnQKqsJK.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Follow instructions to allow the bot to send messages to you</figcaption>
</figure>
</div>
<p>To complete the above process copy the “magic words” from instruction step 3. Paste it in the chat with Tenderly’s telegram bot that opens by clicking <a href="https://t.me/TenderlyRobot"><span class="citation" data-cites="TenderlyRobot">@TenderlyRobot</span></a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*RB_mzUO1pFqbBii5.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Confirmation message that the bot can now send messages in this chat!</figcaption>
</figure>
</div>
</section>
<section id="monitoring-yearn-vault-depositswithdrawals" class="level2">
<h2 class="anchored" data-anchor-id="monitoring-yearn-vault-depositswithdrawals">Monitoring Yearn Vault deposits/withdrawals</h2>
<p>Let’s start by monitoring some events made on the SPELL yVault on the Fantom Network. We need to know the SPELL yVault contract address, we can find it by going to the <a href="https://yearn.finance/#/vaults">Yearn Vaults interface</a> and clicking on the SPELL vault</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*iN0jkDc7V1kzSpDV.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Yearn Vaults at Fantom</figcaption>
</figure>
</div>
<p>After clicking on it we’ll see this page with all the vault details, click the “block explorer” button that will take you to the vault’s contract:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*Fcm0MguvUpCtEUTd.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">SPELL yVault details</figcaption>
</figure>
</div>
<p>This will open up the <a href="https://ftmscan.com/address/0xD3c19eB022CAC706c898D60d756bf1535d605e1d">SPELL yVault Contract on FTMScan</a> (Fantom fork of <a href="https://etherscan.io/">Etherscan</a>):</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*E-dHsAF2OMaWxVyj.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><a href="https://ftmscan.com/address/0xD3c19eB022CAC706c898D60d756bf1535d605e1d">SPELL yVault Contract on FTMScan</a></figcaption>
</figure>
</div>
<p>I highlighted the important information for our use-case in order:</p>
<ul>
<li><p>First the contract address</p></li>
<li><p>Then the “Token Name” (helps when you have many contract tabs open)</p></li>
<li><p>Lastly the history of methods (functions) that this contract executed</p></li>
</ul>
<p>For our example, <strong>we’ll add a notification for when anyone deposits tokens to the vault</strong>. To do this copy the contract page URL:</p>
<p><a href="https://ftmscan.com/address/0xD3c19eB022CAC706c898D60d756bf1535d605e1d">https://ftmscan.com/address/0xD3c19eB022CAC706c898D60d756bf1535d605e1d</a></p>
<p>Then go to Tenderly’s contract tab and click to import this contract in their dashboard, this will enable us to create alerts for it:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*mWuwKsrD4vpA8H16.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Importing contract in Tenderly</figcaption>
</figure>
</div>
<p>Paste the address, select the “Vyper Contract” (name shows like this because Yearn Vaults use <a href="https://vyper.readthedocs.io/en/stable/index.html">Vyper programming language</a>). When it shows up, click “Import”:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*5rsE4SW66rahd21Q.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Importing contract in Tenderly</figcaption>
</figure>
</div>
<p>After importing the contract is ready for us to create an alert for it!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*5rsE4SW66rahd21Q.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Importing contract in Tenderly</figcaption>
</figure>
</div>
<p>Let’s go and create an alert then:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*NxXHSz8Zvu-X4QVG.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Creating a new alert</figcaption>
</figure>
</div>
<p>We want to receive a notification every time someone deposits into the SPELL yVault. To do this we’ll check the “Deposit” method that exists in the yVault contract. “method” is an analogous name to “function call” so that’s the type of alert we’ll use in this case</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*9pHnL-7ky-zagKYn.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Select alert type</figcaption>
</figure>
</div>
<p>Target will be an address:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*D_9J0c78CVK5v8co.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Select alert target</figcaption>
</figure>
</div>
<p>You’ll be able to select the contract we added previously and then pick any function that exists inside it. Note that many functions might have similar names, functions that start with “_” are often private internal functions and won’t be the ones we are looking for</p>
<p>In this case, we have **_deposit** (private: for internal usage) and <strong>deposit</strong> (public: for external users). We’ll pick the one that is public:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*D_9J0c78CVK5v8co.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Select alert target</figcaption>
</figure>
</div>
<p>Lastly, choose the telegram destination that was set up previously and save the alert:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*D_9J0c78CVK5v8co.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Select alert destination</figcaption>
</figure>
</div>
<p>We are done! The alert is created and I’ll receive a message every time someone deposits SPELL in that yVault!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*ckXpYmgDqBsMqzCH.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Alert created successfully!</figcaption>
</figure>
</div>
<p>Here is an example notification I got after setting up this example and depositing a bit of spell in the vault to trigger it, I got the notification instantly after transaction confirmation!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://marcoworms.github.io/blog/posts/tenderly-notifications/https:/miro.medium.com/v2/format:webp/0*ckXpYmgDqBsMqzCH.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Notification of new SPELL deposit at Fantom yVault sent to my Telegram!</figcaption>
</figure>
</div>
</section>
<section id="final-thoughts" class="level2">
<h2 class="anchored" data-anchor-id="final-thoughts">Final Thoughts</h2>
<p>This Yearn example showcases a simple way to monitor for a contract’s function call. If you explore all the options from the alerting system you’ll see this can be easily tweaked to many different usages, for example:</p>
<ul>
<li><p>NFT collections devs can monitor whenever their contract called the minting of a new token and announce it automatically on Discord</p></li>
<li><p>People monitoring Tokenomics flows can use notifications to keep an eye on wallet balances and actions from contracts to see if devs are doing what is expected to be done</p></li>
</ul>
<p>You can monitor any kind of on-chain activity and be notified by it, so experiment with all the different options!</p>
<p>Producers: <a href="https://twitter.com/MarcoWorms">Worms</a>, Reviewers: <a href="https://twitter.com/cryptouf">Cryptouf</a>, <a href="https://github.com/DarkGhost7">Dark Ghosty</a></p>
</section>
<section id="made-in-yearn.finance" class="level2">
<h2 class="anchored" data-anchor-id="made-in-yearn.finance">Made in <a href="https://yearn.finance/">yearn.finance</a></h2>


</section>

 ]]></description>
  <category>english</category>
  <category>tenderly</category>
  <guid>https://marcoworms.github.io/blog/posts/tenderly-notifications/index.html</guid>
  <pubDate>Fri, 18 Mar 2022 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
